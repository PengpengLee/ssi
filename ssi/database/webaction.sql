/*
Navicat MySQL Data Transfer

Source Server         : 127.0.0.1
Source Server Version : 50536
Source Host           : localhost:3306
Source Database       : webaction

Target Server Type    : MYSQL
Target Server Version : 50536
File Encoding         : 65001

Date: 2016-01-10 16:26:07
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for tb_classes
-- ----------------------------
DROP TABLE IF EXISTS `tb_classes`;
CREATE TABLE `tb_classes` (
  `id` varchar(32) NOT NULL,
  `name` varchar(50) NOT NULL COMMENT '班级名称',
  `school_id` varchar(32) NOT NULL COMMENT '班级所属学校',
  `creator` varchar(32) NOT NULL COMMENT '班级创建者',
  `type` varchar(50) NOT NULL COMMENT '班级类型：0-基础班（入学辅导班）；1-就业班',
  `subject_id` varchar(50) NOT NULL COMMENT '所属学科',
  `serial_number` varchar(50) DEFAULT NULL COMMENT '班级编号：比如1105班',
  `phase_number` varchar(50) DEFAULT NULL COMMENT '班级期数：比如第19期',
  `status` varchar(50) NOT NULL DEFAULT '1' COMMENT '状态：未开班-0；已开班-1；已结课-2',
  `create_time` varchar(50) NOT NULL COMMENT '数据创建时间',
  `update_time` varchar(50) DEFAULT NULL COMMENT '修改时间',
  `del_time` varchar(50) DEFAULT NULL COMMENT '数据删除时间',
  `del` char(1) NOT NULL COMMENT '删除状态',
  `reserve_field1` varchar(200) DEFAULT NULL,
  `reserve_field2` varchar(200) DEFAULT NULL,
  `reserve_field3` varchar(200) DEFAULT NULL,
  `reserve_field4` varchar(200) DEFAULT NULL,
  `reserve_field5` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tb_classes
-- ----------------------------

-- ----------------------------
-- Table structure for tb_classes_user
-- ----------------------------
DROP TABLE IF EXISTS `tb_classes_user`;
CREATE TABLE `tb_classes_user` (
  `id` varchar(32) NOT NULL,
  `classes_id` varchar(32) NOT NULL COMMENT '班级ID',
  `user_id` varchar(32) NOT NULL COMMENT '用户ID，班级里面的学员或老师',
  `create_time` varchar(100) NOT NULL COMMENT '数据创建时间',
  `update_time` varchar(100) DEFAULT NULL COMMENT '修改时间',
  `del_time` varchar(100) DEFAULT NULL COMMENT '数据删除时间',
  `del` char(1) NOT NULL COMMENT '删除状态',
  `reserve_field1` varchar(200) DEFAULT NULL,
  `reserve_field2` varchar(200) DEFAULT NULL,
  `reserve_field3` varchar(200) DEFAULT NULL,
  `reserve_field4` varchar(200) DEFAULT NULL,
  `reserve_field5` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tb_classes_user
-- ----------------------------

-- ----------------------------
-- Table structure for tb_const_chapter
-- ----------------------------
DROP TABLE IF EXISTS `tb_const_chapter`;
CREATE TABLE `tb_const_chapter` (
  `id` varchar(32) NOT NULL COMMENT '章节ID',
  `name` varchar(50) DEFAULT NULL COMMENT '章节名称',
  `subject_id` varchar(32) DEFAULT NULL COMMENT '所属学科ID',
  `create_time` varchar(100) DEFAULT NULL COMMENT '数据创建时间',
  `update_time` varchar(100) DEFAULT NULL COMMENT '修改时间',
  `del_time` varchar(100) DEFAULT NULL COMMENT '数据删除时间',
  `del` char(1) DEFAULT NULL COMMENT '删除状态',
  `reserve_field1` varchar(200) DEFAULT NULL,
  `reserve_field2` varchar(200) DEFAULT NULL,
  `reserve_field3` varchar(200) DEFAULT NULL,
  `reserve_field4` varchar(200) DEFAULT NULL,
  `reserve_field5` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tb_const_chapter
-- ----------------------------
INSERT INTO `tb_const_chapter` VALUES ('14643F1AA94145788388230A57040C99', '面向对象', '400a979ba2fe41e1bf04fd386cfbd493', null, null, null, '1', null, null, null, null, null);
INSERT INTO `tb_const_chapter` VALUES ('1B7CC8D507D74312A0AD631818B37F91', 'Java编程基础', '400a979ba2fe41e1bf04fd386cfbd493', null, null, null, '1', null, null, null, null, null);
INSERT INTO `tb_const_chapter` VALUES ('2F2DF287BC86405E8CCF9AFAE581A92F', '常用API', '400a979ba2fe41e1bf04fd386cfbd493', null, null, null, '1', null, null, null, null, null);
INSERT INTO `tb_const_chapter` VALUES ('5457f929d77249029d5c8a03e239763c', '集合框架', '400a979ba2fe41e1bf04fd386cfbd493', null, null, null, '1', null, null, null, null, null);
INSERT INTO `tb_const_chapter` VALUES ('5F45982E95EF41CC9F6D57B2A6041385', 'IO流', '400a979ba2fe41e1bf04fd386cfbd493', null, null, null, '1', null, null, null, null, null);
INSERT INTO `tb_const_chapter` VALUES ('6ADD7CC7AADC4A008362BCADA885D97F', '多线程', '400a979ba2fe41e1bf04fd386cfbd493', null, null, null, '1', null, null, null, null, null);
INSERT INTO `tb_const_chapter` VALUES ('86CD29E675474B1F922662BF9D093AF8', '网络编程', '400a979ba2fe41e1bf04fd386cfbd493', null, null, null, '1', null, null, null, null, null);
INSERT INTO `tb_const_chapter` VALUES ('C2848E4C98F7463680B35F88166CEC3F', '反射', '400a979ba2fe41e1bf04fd386cfbd493', null, null, null, '1', null, null, null, null, null);

-- ----------------------------
-- Table structure for tb_const_subject
-- ----------------------------
DROP TABLE IF EXISTS `tb_const_subject`;
CREATE TABLE `tb_const_subject` (
  `id` varchar(32) NOT NULL COMMENT '学科ID',
  `code` varchar(50) DEFAULT NULL COMMENT '学科编码',
  `name` varchar(50) DEFAULT NULL COMMENT '学科名称',
  `create_time` varchar(100) DEFAULT NULL COMMENT '数据创建时间',
  `update_time` varchar(100) DEFAULT NULL COMMENT '修改时间',
  `del_time` varchar(100) DEFAULT NULL COMMENT '数据删除时间',
  `del` char(1) DEFAULT NULL COMMENT '删除状态',
  `reserve_field1` varchar(200) DEFAULT NULL,
  `reserve_field2` varchar(200) DEFAULT NULL,
  `reserve_field3` varchar(200) DEFAULT NULL,
  `reserve_field4` varchar(200) DEFAULT NULL,
  `reserve_field5` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tb_const_subject
-- ----------------------------
INSERT INTO `tb_const_subject` VALUES ('400a979ba2fe41e1bf04fd386cfbd493', null, 'JavaSE', null, null, null, '1', null, null, null, null, null);
INSERT INTO `tb_const_subject` VALUES ('4cd1f9ac181b446d8be981ff0bf89a4f', null, 'JavaEE', null, null, null, '1', null, null, null, null, null);
INSERT INTO `tb_const_subject` VALUES ('5dc99d3ad5384f08ab15484678541379', null, 'Android', null, null, null, '1', null, null, null, null, null);
INSERT INTO `tb_const_subject` VALUES ('828f3890778c403ebdff299c08110097', null, 'iOS', null, null, null, '1', null, null, null, null, null);

-- ----------------------------
-- Table structure for tb_exam_records
-- ----------------------------
DROP TABLE IF EXISTS `tb_exam_records`;
CREATE TABLE `tb_exam_records` (
  `id` varchar(32) NOT NULL COMMENT '试卷ID',
  `test_paper_id` varchar(32) NOT NULL COMMENT '试卷ID',
  `test_question_id` varchar(32) NOT NULL COMMENT '试题ID',
  `examiner` varchar(200) NOT NULL COMMENT '考试者，即学员的用户ID',
  `right_option_ids` varchar(200) NOT NULL COMMENT '正确答案，即正确的选项ID，可能有多个',
  `checked_option_ids` varchar(200) NOT NULL COMMENT '已选择的答案，即学员选择的的选项ID，可能有多个',
  `test_question_point` varchar(50) NOT NULL COMMENT '本道试题得分',
  `create_time` varchar(100) NOT NULL COMMENT '数据创建时间',
  `update_time` varchar(100) DEFAULT NULL COMMENT '修改时间',
  `del_time` varchar(100) DEFAULT NULL COMMENT '数据删除时间',
  `del` char(1) NOT NULL COMMENT '删除状态',
  `reserve_field1` varchar(200) DEFAULT NULL,
  `reserve_field2` varchar(200) DEFAULT NULL,
  `reserve_field3` varchar(200) DEFAULT NULL,
  `reserve_field4` varchar(200) DEFAULT NULL,
  `reserve_field5` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tb_exam_records
-- ----------------------------

-- ----------------------------
-- Table structure for tb_publish_records
-- ----------------------------
DROP TABLE IF EXISTS `tb_publish_records`;
CREATE TABLE `tb_publish_records` (
  `id` varchar(32) NOT NULL COMMENT '发布记录ID',
  `classes_id` varchar(32) NOT NULL COMMENT '班级ID',
  `test_paper_id` varchar(32) NOT NULL COMMENT '试卷ID',
  `creator` varchar(50) NOT NULL COMMENT '用户ID：发布人',
  `create_time` varchar(100) NOT NULL COMMENT '数据创建时间',
  `update_time` varchar(100) DEFAULT NULL COMMENT '修改时间',
  `del_time` varchar(100) DEFAULT NULL COMMENT '数据删除时间',
  `del` char(1) NOT NULL COMMENT '删除状态',
  `reserve_field1` varchar(200) DEFAULT NULL,
  `reserve_field2` varchar(200) DEFAULT NULL,
  `reserve_field3` varchar(200) DEFAULT NULL,
  `reserve_field4` varchar(200) DEFAULT NULL,
  `reserve_field5` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tb_publish_records
-- ----------------------------

-- ----------------------------
-- Table structure for tb_school
-- ----------------------------
DROP TABLE IF EXISTS `tb_school`;
CREATE TABLE `tb_school` (
  `id` varchar(32) NOT NULL,
  `name` varchar(50) DEFAULT NULL COMMENT '班级名称',
  `create_time` varchar(50) NOT NULL COMMENT '数据创建时间',
  `update_time` varchar(50) DEFAULT NULL COMMENT '修改时间',
  `del_time` varchar(50) DEFAULT NULL COMMENT '数据删除时间',
  `del` char(1) NOT NULL COMMENT '删除状态',
  `reserve_field1` varchar(200) DEFAULT NULL,
  `reserve_field2` varchar(200) DEFAULT NULL,
  `reserve_field3` varchar(200) DEFAULT NULL,
  `reserve_field4` varchar(200) DEFAULT NULL,
  `reserve_field5` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tb_school
-- ----------------------------
INSERT INTO `tb_school` VALUES ('0DE772890FC94E7B9FB94D42CB8F6191', '北京', '2015-01-01 20:20:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_school` VALUES ('3FEF4BDFD5DF46E09DE3E20B8EE7EDBF', '上海', '2015-01-01 20:20:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_school` VALUES ('5276DCB2456F40AFA8CC0CC80AEC0A3D', '深圳', '2015-01-01 20:20:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_school` VALUES ('8e70e64972024ed7826659d4831a27d3', '长沙', '2015-01-01 20:20:20', null, null, '1', null, null, null, null, null);

-- ----------------------------
-- Table structure for tb_sys_menu
-- ----------------------------
DROP TABLE IF EXISTS `tb_sys_menu`;
CREATE TABLE `tb_sys_menu` (
  `id` varchar(32) NOT NULL,
  `name` varchar(50) NOT NULL COMMENT '菜单名称',
  `code` varchar(10) DEFAULT NULL,
  `icon` varchar(100) DEFAULT NULL COMMENT '菜单图标',
  `parent_id` varchar(32) DEFAULT NULL COMMENT '父菜单ID',
  `action_url` varchar(500) NOT NULL COMMENT '菜单访问路径',
  `role_id` varchar(50) NOT NULL DEFAULT '20' COMMENT '角色ID：可能的值有：1；5；10；20',
  `type` varchar(1) DEFAULT '0' COMMENT '菜单类型：0-父菜单；1-子菜单',
  `serial_num` varchar(2) DEFAULT '1' COMMENT '序号，用于自定义排序',
  `remark` varchar(255) DEFAULT NULL COMMENT '备注',
  `create_time` varchar(100) NOT NULL COMMENT '数据创建时间',
  `update_time` varchar(100) DEFAULT NULL COMMENT '修改时间',
  `del_time` varchar(100) DEFAULT NULL COMMENT '数据删除时间',
  `del` char(1) NOT NULL COMMENT '删除状态',
  `reserve_field1` varchar(200) DEFAULT NULL,
  `reserve_field2` varchar(200) DEFAULT NULL,
  `reserve_field3` varchar(200) DEFAULT NULL,
  `reserve_field4` varchar(200) DEFAULT NULL,
  `reserve_field5` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tb_sys_menu
-- ----------------------------
INSERT INTO `tb_sys_menu` VALUES ('493B555F38154D9AA0E4BDD405EB0D4A', '角色管理', null, 'icon-users', null, '/role/index.action', '5', '0', null, '角色管理', '2015-12-27 20:44:37', null, null, '1', 'blue-madison', null, null, null, null);
INSERT INTO `tb_sys_menu` VALUES ('57470E7A6F974015AAF9774231BF31CC', '班级管理', null, 'icon-list', null, '/classes/index.action', '10', '0', null, '班级管理', '2015-12-27 19:34:25', null, null, '1', 'red-soft', null, null, null, null);
INSERT INTO `tb_sys_menu` VALUES ('6E4CAEB875464B62AA678469C43D013B', '用户管理', null, 'icon-user', null, '/user/index.action', '5', '0', null, '用户管理', '2015-12-27 18:59:34', null, null, '1', 'yellow-gold', null, null, null, null);
INSERT INTO `tb_sys_menu` VALUES ('98AFC5CC4E764D1FB506803C8BCAF1FF', '考试', null, 'icon-paper-clip', null, '/testPaper/examIndex.action', '20', '0', null, '学员考试页面', '2016-01-07 14:27:42', null, null, '1', 'green-turquoise', null, null, null, null);
INSERT INTO `tb_sys_menu` VALUES ('BDD69B45165F40F29078C3E32487E3B9', '打分', null, 'icon-calculator', null, '/mark/mark.action', '20', '0', null, '学员打分页面', '2015-12-27 22:44:26', null, null, '0', 'yellow-saffron', null, null, null, null);
INSERT INTO `tb_sys_menu` VALUES ('C701507ED8774E789D46444E37D15167', '试题管理', null, 'icon-question', null, '/testQuestion/index.action', '10', '0', null, '试题管理', '2015-12-27 19:34:43', null, null, '1', 'green-seagreen', null, null, null, null);
INSERT INTO `tb_sys_menu` VALUES ('D50E7D4D6B6A40F8B18D1E74E096B4D1', '试卷管理', null, 'icon-book-open', null, '/testPaper/index.action', '10', '0', null, '试卷管理', '2015-12-27 19:35:05', null, null, '1', 'purple-studio', null, null, null, null);
INSERT INTO `tb_sys_menu` VALUES ('F72E5550A8B04E78972CCE32A7C40C3C', '菜单管理', null, 'icon-basket', null, '/menu/index.action', '5', '0', null, '菜单管理', '2015-12-27 23:19:37', null, null, '1', 'red-intense', null, null, null, null);

-- ----------------------------
-- Table structure for tb_sys_menu_role
-- ----------------------------
DROP TABLE IF EXISTS `tb_sys_menu_role`;
CREATE TABLE `tb_sys_menu_role` (
  `id` varchar(32) NOT NULL,
  `role_id` varchar(32) NOT NULL,
  `menu_id` varchar(32) NOT NULL,
  `remark` varchar(50) DEFAULT NULL,
  `create_time` varchar(100) NOT NULL COMMENT '数据创建时间',
  `update_time` varchar(100) DEFAULT NULL COMMENT '修改时间',
  `del_time` varchar(100) DEFAULT NULL COMMENT '数据删除时间',
  `del` char(1) NOT NULL COMMENT '删除状态',
  `reserve_field1` varchar(200) DEFAULT NULL,
  `reserve_field2` varchar(200) DEFAULT NULL,
  `reserve_field3` varchar(200) DEFAULT NULL,
  `reserve_field4` varchar(200) DEFAULT NULL,
  `reserve_field5` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tb_sys_menu_role
-- ----------------------------

-- ----------------------------
-- Table structure for tb_sys_role
-- ----------------------------
DROP TABLE IF EXISTS `tb_sys_role`;
CREATE TABLE `tb_sys_role` (
  `id` varchar(32) NOT NULL,
  `code` varchar(50) NOT NULL,
  `name` varchar(50) NOT NULL,
  `parent_id` varchar(32) DEFAULT NULL,
  `group` varchar(50) DEFAULT NULL,
  `remark` varchar(50) DEFAULT NULL,
  `create_time` varchar(100) NOT NULL COMMENT '数据创建时间',
  `update_time` varchar(100) DEFAULT NULL COMMENT '修改时间',
  `del_time` varchar(100) DEFAULT NULL COMMENT '数据删除时间',
  `del` char(1) NOT NULL COMMENT '删除状态',
  `reserve_field1` varchar(200) DEFAULT NULL,
  `reserve_field2` varchar(200) DEFAULT NULL,
  `reserve_field3` varchar(200) DEFAULT NULL,
  `reserve_field4` varchar(200) DEFAULT NULL,
  `reserve_field5` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tb_sys_role
-- ----------------------------
INSERT INTO `tb_sys_role` VALUES ('02704CE96A1A4D2C8F8CF01CF8E60F5B', '20', '普通用户', null, null, null, '2015-12-10 15:04:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_sys_role` VALUES ('1B7CC8D507D74312A0AD631818B37F91', '10', '管理员', null, null, null, '2015-12-10 15:01:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_sys_role` VALUES ('3FEF4BDFD5DF46E09DE3E20B8EE7EDBF', '5', '权限管理员', null, null, null, '2015-12-10 15:01:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_sys_role` VALUES ('8C3C2B1BB0F845D2810569B29E82EA95', '1', '系统管理员', null, null, null, '2015-12-10 15:01:41', null, null, '1', null, null, null, null, null);

-- ----------------------------
-- Table structure for tb_sys_user
-- ----------------------------
DROP TABLE IF EXISTS `tb_sys_user`;
CREATE TABLE `tb_sys_user` (
  `id` varchar(32) NOT NULL,
  `username` varchar(50) NOT NULL,
  `password` varchar(100) NOT NULL,
  `user_type` varchar(50) DEFAULT NULL COMMENT '用户类型：学员；导师/讲师；助教',
  `name` varchar(50) DEFAULT NULL,
  `email` varchar(50) DEFAULT '',
  `mobile` varchar(50) DEFAULT NULL,
  `qq` varchar(50) DEFAULT NULL,
  `we_chat` varchar(50) DEFAULT NULL,
  `sex` char(1) DEFAULT NULL,
  `birthday` varchar(50) DEFAULT NULL,
  `hobbit` varchar(50) DEFAULT NULL,
  `intruduce` varchar(100) DEFAULT NULL,
  `card` varchar(18) DEFAULT NULL,
  `province` varchar(255) DEFAULT NULL,
  `city` varchar(255) DEFAULT NULL,
  `district` varchar(255) DEFAULT NULL,
  `street` varchar(255) DEFAULT NULL,
  `address` varchar(255) DEFAULT NULL,
  `telephone` varchar(255) DEFAULT NULL,
  `head_Path` varchar(255) DEFAULT NULL,
  `create_time` varchar(100) NOT NULL COMMENT '数据创建时间',
  `update_time` varchar(100) DEFAULT NULL COMMENT '修改时间',
  `del_time` varchar(100) DEFAULT NULL COMMENT '数据删除时间',
  `del` char(1) NOT NULL COMMENT '删除状态',
  `reserve_field1` varchar(200) DEFAULT NULL,
  `reserve_field2` varchar(200) DEFAULT NULL,
  `reserve_field3` varchar(200) DEFAULT NULL,
  `reserve_field4` varchar(200) DEFAULT NULL,
  `reserve_field5` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tb_sys_user
-- ----------------------------
INSERT INTO `tb_sys_user` VALUES ('14643F1AA94145788388230A57040C99', '13121009787', 'a7dcfd07cfb0cf02313210922c1c514f', '20', '李鹏', null, '13121009787', null, null, null, null, null, null, null, null, null, null, null, null, null, null, '2015-12-13 20:07:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_sys_user` VALUES ('1B7CC8D507D74312A0AD631818B37F91', '15836886119', 'a7dcfd07cfb0cf02313210922c1c514f', '20', '张洋', null, '15836886119', null, null, null, null, null, null, null, null, null, null, null, null, null, null, '2015-12-10 15:01:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_sys_user` VALUES ('1BF4CD881B5B4EC3B39C67C7EAA14DE2', '13709008978', 'a7dcfd07cfb0cf02313210922c1c514f', '10', '娇娇', null, '13709008978', null, null, null, null, null, null, null, null, null, null, null, null, null, null, '2016-01-09 14:34:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_sys_user` VALUES ('2F2DF287BC86405E8CCF9AFAE581A92F', '18790990000', 'a7dcfd07cfb0cf02313210922c1c514f', '20', '张美', null, '18790990000', null, null, null, null, null, null, null, null, null, null, null, null, null, null, '2015-12-10 17:54:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_sys_user` VALUES ('35A0D62EC7C04981BD87807234357639', '13109087909', 'a7dcfd07cfb0cf02313210922c1c514f', '20', '杨勇', null, '13109087909', null, null, null, null, null, null, null, null, null, null, null, null, null, null, '2015-12-26 20:40:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_sys_user` VALUES ('41B361EA3D714251B82D887F636EB812', '14092390309', 'a7dcfd07cfb0cf02313210922c1c514f', '20', '张洋洋', null, '14092390309', null, null, null, null, null, null, null, null, null, null, null, null, null, null, '2015-12-26 21:43:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_sys_user` VALUES ('5457f929d77249029d5c8a03e239763c', '15890006789', 'b940b02be6fd7560c642b6f267f16b6d', '20', 'Pengpeng.Lee', null, '15890006789', null, null, '1', null, null, null, null, null, null, null, null, null, null, null, '2015-12-14 22:54:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_sys_user` VALUES ('5F45982E95EF41CC9F6D57B2A6041385', '13100009999', 'a7dcfd07cfb0cf02313210922c1c514f', '20', '刘绍享', null, '13100009999', null, null, null, null, null, null, null, null, null, null, null, null, null, null, '2015-12-11 14:44:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_sys_user` VALUES ('6ADD7CC7AADC4A008362BCADA885D97F', '13121009786', 'a7dcfd07cfb0cf02313210922c1c514f', '20', '小木箱', null, '13121009786', null, null, null, null, null, null, null, null, null, null, null, null, null, null, '2015-12-10 14:39:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_sys_user` VALUES ('6FAD4D0751294D2D9533456FA474A037', '17890986789', 'a7dcfd07cfb0cf02313210922c1c514f', '20', '关伟', null, '17890986789', null, null, null, null, null, null, null, null, null, null, null, null, null, null, '2015-12-30 23:44:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_sys_user` VALUES ('86CD29E675474B1F922662BF9D093AF8', '13598078909', 'a7dcfd07cfb0cf02313210922c1c514f', '20', '老司机', null, '13598078909', null, null, null, null, null, null, null, null, null, null, null, null, null, null, '2015-12-10 15:03:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_sys_user` VALUES ('C1DDF2C21A7C49B184F33A3BCCB92FE1', '18611280897', 'a7dcfd07cfb0cf02313210922c1c514f', '5', '孙晓威', null, '18611280897', null, null, null, null, null, null, null, null, null, null, null, null, null, null, '2015-12-27 20:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_sys_user` VALUES ('C2848E4C98F7463680B35F88166CEC3F', '17701315652', 'a7dcfd07cfb0cf02313210922c1c514f', '1', '李鹏鹏', null, '17701315652', null, null, null, null, null, null, null, null, null, null, null, null, null, null, '2015-12-10 14:10:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_sys_user` VALUES ('CE1C325EA50A4F1AB3C80C03EB67141A', '13838384381', 'a7dcfd07cfb0cf02313210922c1c514f', '20', '陆禹', null, '13838384381', null, null, null, null, null, null, null, null, null, null, null, null, null, null, '2015-12-21 09:03:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_sys_user` VALUES ('CFE31EFA2BA64FE6AD407DD97E729099', '17899883745', 'a7dcfd07cfb0cf02313210922c1c514f', '20', '唐彬', null, '17899883745', null, null, null, null, null, null, null, null, null, null, null, null, null, null, '2015-12-26 20:41:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_sys_user` VALUES ('E09C8D9C1EF145D9A87BA86CA6269B00', '18610940370', 'a7dcfd07cfb0cf02313210922c1c514f', '20', '廉英雷', null, '18610940370', null, null, null, null, null, null, null, null, null, null, null, null, null, null, '2016-01-03 00:17:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_sys_user` VALUES ('E172A339BBE4429C8675DEFA56B74C99', '18212109384', 'a7dcfd07cfb0cf02313210922c1c514f', '20', '曾春明', null, '18212109384', null, null, null, null, null, null, null, null, null, null, null, null, null, null, '2015-12-26 20:41:04', null, null, '1', null, null, null, null, null);

-- ----------------------------
-- Table structure for tb_sys_user_role
-- ----------------------------
DROP TABLE IF EXISTS `tb_sys_user_role`;
CREATE TABLE `tb_sys_user_role` (
  `id` varchar(32) NOT NULL,
  `role_id` varchar(32) NOT NULL,
  `user_id` varchar(32) NOT NULL,
  `remark` varchar(50) DEFAULT NULL,
  `create_time` varchar(100) NOT NULL COMMENT '数据创建时间',
  `update_time` varchar(100) DEFAULT NULL COMMENT '修改时间',
  `del_time` varchar(100) DEFAULT NULL COMMENT '数据删除时间',
  `del` char(1) NOT NULL COMMENT '删除状态',
  `reserve_field1` varchar(200) DEFAULT NULL,
  `reserve_field2` varchar(200) DEFAULT NULL,
  `reserve_field3` varchar(200) DEFAULT NULL,
  `reserve_field4` varchar(200) DEFAULT NULL,
  `reserve_field5` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tb_sys_user_role
-- ----------------------------

-- ----------------------------
-- Table structure for tb_test_paper
-- ----------------------------
DROP TABLE IF EXISTS `tb_test_paper`;
CREATE TABLE `tb_test_paper` (
  `id` varchar(32) NOT NULL COMMENT '试卷ID',
  `name` varchar(32) NOT NULL COMMENT '试卷名称',
  `chapter_id` varchar(32) NOT NULL,
  `subject_id` varchar(50) NOT NULL COMMENT '所属学科，枚举类型',
  `creator` varchar(32) NOT NULL COMMENT '试卷创建者，组卷人',
  `points` varchar(50) DEFAULT NULL COMMENT '试卷总分',
  `exam_time` varchar(50) DEFAULT NULL COMMENT '考试总时间，作答时间',
  `status` varchar(1) NOT NULL DEFAULT '0' COMMENT '试卷状态：0-创建；1-发布；2-过期',
  `description` varchar(100) DEFAULT NULL COMMENT '试卷描述',
  `create_time` varchar(100) NOT NULL COMMENT '数据创建时间',
  `update_time` varchar(100) DEFAULT NULL COMMENT '修改时间',
  `del_time` varchar(100) DEFAULT NULL COMMENT '数据删除时间',
  `del` char(1) NOT NULL COMMENT '删除状态',
  `reserve_field1` varchar(200) DEFAULT NULL,
  `reserve_field2` varchar(200) DEFAULT NULL,
  `reserve_field3` varchar(200) DEFAULT NULL,
  `reserve_field4` varchar(200) DEFAULT NULL,
  `reserve_field5` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tb_test_paper
-- ----------------------------
INSERT INTO `tb_test_paper` VALUES ('9930D58F3EE7478BA21742BEFA443ED9', 'Java基础知识测试', '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', 'C2848E4C98F7463680B35F88166CEC3F', '100', null, '1', 'Java基础知识测试', '2016-01-05 11:34:45', null, '2016-01-08 20:23:23', '1', null, null, null, null, null);

-- ----------------------------
-- Table structure for tb_test_paper_questions
-- ----------------------------
DROP TABLE IF EXISTS `tb_test_paper_questions`;
CREATE TABLE `tb_test_paper_questions` (
  `id` varchar(32) NOT NULL COMMENT '试卷ID',
  `test_paper_id` varchar(32) NOT NULL COMMENT '试卷ID',
  `test_question_id` varchar(32) NOT NULL COMMENT '试题ID',
  `create_time` varchar(100) NOT NULL COMMENT '数据创建时间',
  `update_time` varchar(100) DEFAULT NULL COMMENT '修改时间',
  `del_time` varchar(100) DEFAULT NULL COMMENT '数据删除时间',
  `del` char(1) NOT NULL COMMENT '删除状态',
  `reserve_field1` varchar(200) DEFAULT NULL,
  `reserve_field2` varchar(200) DEFAULT NULL,
  `reserve_field3` varchar(200) DEFAULT NULL,
  `reserve_field4` varchar(200) DEFAULT NULL,
  `reserve_field5` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tb_test_paper_questions
-- ----------------------------
INSERT INTO `tb_test_paper_questions` VALUES ('044F1A030D7C44FFAC0383AC57CB316C', '9930D58F3EE7478BA21742BEFA443ED9', '7D8545CB8A29471C93117419881D2264', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('09BD2FF525244A4591A33DEE4C18E414', '9930D58F3EE7478BA21742BEFA443ED9', '8D00691B69E84B08A222DC27CFCEF295', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('0C9D8BE851594B01AA97649CE5418656', '9930D58F3EE7478BA21742BEFA443ED9', '9B5D75894C81487EA56A9955B9159CEF', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('0DA5CB30E7F24154B11EE59347DC62BB', '9930D58F3EE7478BA21742BEFA443ED9', '7D055CB4494043AEA4E9430901957716', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('139EB6ABE25943B1B67FF49D3337BD42', '9930D58F3EE7478BA21742BEFA443ED9', '457E231D07BD4B05AD8087790868B821', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('14C1589EA7C94E28A06FA6D7AA29F328', '9930D58F3EE7478BA21742BEFA443ED9', '89B84A68FCD342BEBA94B9EBCAB18139', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('2AF4D47E05834BF099318A0FB567497A', '9930D58F3EE7478BA21742BEFA443ED9', '47F83E0A130743B7A82307BFB89CDC48', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('2EEBD6087E0E4FED9C7AD34865A149A7', '9930D58F3EE7478BA21742BEFA443ED9', 'C19074D6CED04C0AB53E2F0A40BC4F3B', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('3B5C11792215440B9EB4912C148BDF50', '9930D58F3EE7478BA21742BEFA443ED9', '15C8FCFE254D4AB2A7BE7F67D2129B3C', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('3C454CC3DA4A4BEDB31AA44ED104C70D', '9930D58F3EE7478BA21742BEFA443ED9', '30751AC1CA3B4F27B32085193F56732D', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('3C4E05639F6D4DAC85A5395F0D2980E8', '9930D58F3EE7478BA21742BEFA443ED9', 'C2BAE395C1334F0CB54A2470D90568AA', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('3E790EB16BB045E8AC0F958C67884109', '9930D58F3EE7478BA21742BEFA443ED9', '1704CF5FE5D3469DB943E64C1D6DE4C2', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('439020F834E740C38BB571D118F9F9A7', '9930D58F3EE7478BA21742BEFA443ED9', '220EC8E9622F4702A57A59C54B932E56', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('476E6C009BC2416CBE4358B6365F3EE4', '9930D58F3EE7478BA21742BEFA443ED9', 'E490CDF3A39043E690E3240AA06BAB4A', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('65C1AE680D6D4920BFCF7B88D5E6E17E', '9930D58F3EE7478BA21742BEFA443ED9', 'ED1C8DF591CB4DF1BD8E4721001C5DF7', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('765794EF2CA846F5A202C98B0736C90E', '9930D58F3EE7478BA21742BEFA443ED9', '8CC03243EAD84A56826C7EFF09FC7A5D', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('76EE4E5C6613428AA058DC2E8FECD67B', '9930D58F3EE7478BA21742BEFA443ED9', '3E18BF9C7CF74C649891D16DEF8662EC', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('82FEA06996E84759B5F02056C65C664D', '9930D58F3EE7478BA21742BEFA443ED9', '731403B23CAD463E91A5FB776C1FAB55', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('87C1954D34EE4A4DB3D1CB8E1F93D5D1', '9930D58F3EE7478BA21742BEFA443ED9', 'D6D6796525174C03A446CEFC57093B0F', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('8A5784BAC1C84D94BA088AF4FC8E5438', '9930D58F3EE7478BA21742BEFA443ED9', '31EDA5FF01BF4F90912E7E69883F341B', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('8BF51A113085494BA6289E3F1F0AE2F7', '9930D58F3EE7478BA21742BEFA443ED9', 'E3B0235E2A2D4BDDB3F100D9CD28305F', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('9573992C5BA142EE99D60DDC76D215A2', '9930D58F3EE7478BA21742BEFA443ED9', '361AF02FB5F940C1865B9AA9DB7AA7E6', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('97DFF6B9E629468F8F148F1C37C10009', '9930D58F3EE7478BA21742BEFA443ED9', '1ABFBBEAB95D4470ABCAC064478915D9', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('A515954F218C4A388F8E6726F795675F', '9930D58F3EE7478BA21742BEFA443ED9', 'C20E08B1A8874E14A662A03B51934758', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('B08CF2B427BA4DAF9971BE1AB7920F91', '9930D58F3EE7478BA21742BEFA443ED9', '18DAE8B524B54C2FA88584881049C063', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('B7D1E4421FBB4491A49A406CC5C08B8B', '9930D58F3EE7478BA21742BEFA443ED9', 'E46FF59D07254629BFC567C7816BDD44', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('B9B98667D896475DAD9CFDB1D02EF844', '9930D58F3EE7478BA21742BEFA443ED9', '611C81A51D714D5DA29ED4F5F25FEE60', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('BD2C06F2C39F4710BB8D37EE8B8735D4', '9930D58F3EE7478BA21742BEFA443ED9', 'D8C854B6CEFF48A4A93ECEF0580C6ADF', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('C023FDFA43D34624AB88657CFA74A835', '9930D58F3EE7478BA21742BEFA443ED9', '0B9F88745EBA4854A16F1B71E2EDFE20', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('C846D9BCF58E4E89AB9338B42F030B50', '9930D58F3EE7478BA21742BEFA443ED9', 'A641933B25CF464988436B71CCC23832', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('D26C80ED7D6A4914AC9C5E35088B24A1', '9930D58F3EE7478BA21742BEFA443ED9', '6DCE6229ED1C4EE2A7E672038B81E499', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('D4C7AB5B8A2B417386ED2931570F5892', '9930D58F3EE7478BA21742BEFA443ED9', '8D04E113F7054CFCBE6C6BB20C5EBD8A', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('D59E89E5B1EA475F8A11C5F920AFB4D3', '9930D58F3EE7478BA21742BEFA443ED9', '337556C3125C4549BF2B6D566AC19D17', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('DA4B990D0A104DEEBA8673872A8213D2', '9930D58F3EE7478BA21742BEFA443ED9', '4E6F877880184D5998E9581F020AB5F7', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('E01A88E8B8CB4DEBADC1C84A347B4711', '9930D58F3EE7478BA21742BEFA443ED9', '129512937C50417BBDD4EC4B2FC54C3B', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('E3D4F765C1E5401C84C2279EC6829F16', '9930D58F3EE7478BA21742BEFA443ED9', 'E08D455384A148378FEA239EA4C17C16', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('EDA446AA14DA4EF1BE4F9349F785127B', '9930D58F3EE7478BA21742BEFA443ED9', 'A1A018F0E1ED4528883587F6C4356DF7', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('F10BAED748604A40BC6349A9A16C37B1', '9930D58F3EE7478BA21742BEFA443ED9', '3D1A1274B7544CC9B107AD516C9EFAEE', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('F49F28C953F049E4AAB8CBBA9294B91E', '9930D58F3EE7478BA21742BEFA443ED9', '723775BD54D8497D88F659B14BBB32F3', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_paper_questions` VALUES ('FD755A29F96B4B4E821068286BEBD4FF', '9930D58F3EE7478BA21742BEFA443ED9', '53FFB5CEF5B74A0AAAC32872249A1EFC', '2016-01-05 11:34:45', null, null, '1', null, null, null, null, null);

-- ----------------------------
-- Table structure for tb_test_question
-- ----------------------------
DROP TABLE IF EXISTS `tb_test_question`;
CREATE TABLE `tb_test_question` (
  `id` varchar(32) NOT NULL,
  `trunk` varchar(3000) NOT NULL COMMENT '题干',
  `option_a` varchar(200) DEFAULT NULL COMMENT '选项A',
  `option_b` varchar(200) DEFAULT NULL COMMENT '选项B',
  `option_c` varchar(200) DEFAULT NULL COMMENT '选项C',
  `option_d` varchar(200) DEFAULT NULL COMMENT '选项D',
  `option_e` varchar(200) DEFAULT NULL COMMENT '选项E',
  `option_f` varchar(200) DEFAULT NULL COMMENT '选项F',
  `answer` varchar(200) DEFAULT NULL COMMENT '正确答案：A,B,C',
  `knowledge_point_ids` varchar(200) DEFAULT NULL COMMENT '知识点，可能有多个，存储的是ID',
  `chapter_id` varchar(50) DEFAULT NULL COMMENT '章节，存储的是ID',
  `subject_id` varchar(50) DEFAULT NULL COMMENT '所属学科，枚举类型',
  `hint` varchar(200) DEFAULT NULL COMMENT '提示',
  `difficulty` varchar(50) DEFAULT NULL COMMENT '难度：容易-1；简单-2；中等-3；困难-4',
  `type` char(1) DEFAULT NULL COMMENT '题型：单选-1；多选-2',
  `point` varchar(10) DEFAULT NULL COMMENT '分数',
  `check_status` varchar(50) DEFAULT '0' COMMENT '审核状态',
  `create_time` varchar(100) DEFAULT NULL COMMENT '数据创建时间',
  `update_time` varchar(100) DEFAULT NULL COMMENT '修改时间',
  `del_time` varchar(100) DEFAULT NULL COMMENT '数据删除时间',
  `del` char(1) DEFAULT NULL COMMENT '删除状态',
  `reserve_field1` varchar(200) DEFAULT NULL,
  `reserve_field2` varchar(200) DEFAULT NULL,
  `reserve_field3` varchar(200) DEFAULT NULL,
  `reserve_field4` varchar(200) DEFAULT NULL,
  `reserve_field5` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tb_test_question
-- ----------------------------
INSERT INTO `tb_test_question` VALUES ('0025D65731D14DFF95E7955327D0DC27', '<p>以下代码运行后输出的结果是( ) ----- 单选<br></p><p>public class Test {</p><p style=\"margin-left: 40px;\">public static void main(String[] args) throws IOException {</p><p style=\"margin-left: 80px;\">System.out.println(fun(5));</p><p style=\"margin-left: 40px;\">}</p><p style=\"margin-left: 40px;\">public static int fun(int num) {</p><p style=\"margin-left: 80px;\">if(num == 1) {</p><p style=\"margin-left: 120px;\">return 1;</p><p style=\"margin-left: 80px;\">}else {</p><p style=\"margin-left: 120px;\">return num * fun(num - 1);</p><p style=\"margin-left: 80px;\">}<br></p><p style=\"margin-left: 40px;\">}</p><p>}</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('002959145FF740F19D81782709F7BE4A', '<p>假设有一个泛型接口&nbsp;interface&nbsp;Inner&lt;T&gt;{}，则下面语句错误的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('00381D8AF4D14ACC9BD1B5A02FE67683', '<p>主函数中针对格式的解释错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('005A1DFF0D044DB08C8AE85D8A358C7C', '<p>Map集合中，获取所有键值对的集合是哪个方法( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('00897F9C7B324D32B9A7E283F4602F46', '<p>下面程序运行的结果是(&nbsp;) ----- 单选<br></p><p style=\"margin-left: 40px;\">class HelloWorld {<br>&nbsp;&nbsp; &nbsp;public static void main(String [] args){<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.print(“Hello”);<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.print(“World”);<br>&nbsp;&nbsp; &nbsp;}<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('016E0619AC654B509E9F2741BD693EEE', '<p>下列对于强制类型转换说法正确的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('01C58DFD07654C5F97CA9BC05F8DDBD9', '<p>为了提高读写性能可以采用什么流( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('01C7A074D47A4ACCBE08BED40078E82E', '<p>关于Java语言的内存回收机制，下列选项中最正确的一项是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('01CF3AB7BBBD428BBAC7AB947756FE36', '<p>补全下列代码( ) ----- 单选<br>&nbsp;&nbsp; &nbsp;public class Test2 {</p><p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;String s = \"heima\";<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for(int i = 0; i&lt;s.length(); i++) {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(_____);&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;}<br>输出结果为:<br>h<br>e<br>i<br>m<br>a<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('02057E92DC3840A79ED42A411E2D26B5', '<p>Date类中getTime()方法描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('021EA54393314F53B935CB6780D8F0A5', '<p>关于三元运算符(三目运算符)描述正确的一项是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('023743024EA94486BBC98B4E82A7E7AC', '<p>预定义字符&nbsp;\\d 代表什么( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('024F0B258CB04508B76ED6ECAAA660DA', '<p>下列关于static特点说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('02A7752C2C3540CDA19331A0A6A4C066', '<p>下列哪些不属于算术运算符( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('030A511D18614F6E94C789EA1E3A9F6B', '<p>假设yyy.txt文件里面有字符 abc请问该程序输出结果是( ) ----- 单选<br></p><p>public static void demo1() throws FileNotFoundException, IOException {<br></p><p style=\"margin-left: 40px;\">FileInputStream fis = new FileInputStream(\"yyy.txt\");&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 40px;\">int x = fis.read();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 40px;\">System.<em>out</em>.print(x);</p><p style=\"margin-left: 40px;\">int y = fis.read();</p><p style=\"margin-left: 40px;\">System.<em>out</em>.print(y);</p><p style=\"margin-left: 40px;\">int z = fis.read();</p><p style=\"margin-left: 40px;\">System.<em>out</em>.print(z);</p><p style=\"margin-left: 40px;\">int a = fis.read();</p><p style=\"margin-left: 40px;\">System.<em>out</em>.print(a);</p><p style=\"margin-left: 40px;\">fis.close();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>}</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('036DFCF4B15C42B49C06007CC9F18310', '<p>对于Calendar描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('03E23694E6F548AB8D0BCBD21E69CAAC', '<p>关于LinkedHashSet描述错误的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('0410F6FBDC46487E961BF860ECEF3FAD', '<p>下列程序的输出结果是( ) ----- 单选<br>&nbsp;&nbsp; &nbsp;class Demo {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(\"abc\".equalsIgnoreCase(\"Abc\")<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; +\" \"+\"def\".startsWith(\"d\"));<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;}<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('05891635210E477EB6CD9E35F89DE0F8', '<p>关于GBK编码表说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('05B19DE7153D46E793BA78B89F5D2037', '<p>泛型是哪个版本的api出现的( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('07B7C320E8814F87961A54500C335EA3', '<p>补充代码完成数组的打印输出功能的是( ) ----- 单选<br></p><p style=\"margin-left: 40px;\">public static void print(int[] arr) {<br>&nbsp;&nbsp; &nbsp;for (int i = 0;i &lt;补充代码 ;i++ ) {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.print(arr[i] + \" \");&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;}<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('07D3FBF723F944EAA25CB8196E646934', '<p>观看代码片段分析结果(&nbsp;) ----- 单选<br></p><p style=\"margin-left: 40px;\">public static void main(String [] args){<br>&nbsp;&nbsp; &nbsp;system.out.println(“Hello World!”);<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('080FDAD8D4874AF3B15A83F0591A2163', '<p>java语言是哪个公司研发的(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('08422B7E8F8A4CCE801131A62FCFCF6C', '<p>和下面代码执行结束后，sum结果一致的选项是( ) ----- 单选</p>\r\n\r\n<p>int i=1;</p>\r\n\r\n<p>int sum=0;</p>\r\n\r\n<p>while(i&lt;=100)&nbsp;<span style=\"line-height:1.6\">{</span></p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; if(i%2==0)&nbsp;<span style=\"line-height:1.6\">{</span></p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sum=sum+i;</p>\r\n\r\n<p>&nbsp; &nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; i++;</p>\r\n\r\n<p>}</p>\r\n', 'D347AEC83A564A56B6D7660175D51A4D', 'F677F3CC4A624958BFC9FCF90B40CC15', 'CCF6562C8AB245BDA17357A01E169AC0', '60AFB232A4FB45C1834766A30F79AF5F', '', '', 'B', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '1', '2016-01-05 11:09:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('0843AAEE48DF422098782A2E877A1D87', '<p>对于调用一个方法boolean&nbsp;addAll(Collection&lt;?&nbsp;extends&nbsp;E&gt;&nbsp;c)下列说法正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('0843D282F5804FCA91AF2ED1C0400BEF', '<p>下列关于Object类的描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('088E65967C914A588E8CEB142443A326', '<p>关于抽象方法的说法正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('08D1459AD44445B0809072D37704C374', '<p>执行下述代码，结果是( ) ----- 单选</p><p>&nbsp;class&nbsp;MyThread&nbsp;extends&nbsp;Thread{</p><p style=\"margin-left: 40px;\">&nbsp;public&nbsp;void&nbsp;run(){</p><p style=\"margin-left: 80px;\">&nbsp;for(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&lt;100;&nbsp;i++){</p><p style=\"margin-left: 120px;\">&nbsp;System.out.println(“$$$”);</p><p style=\"margin-left: 80px;\">&nbsp;}</p><p style=\"margin-left: 40px;\">&nbsp;}</p><p>&nbsp;}</p><p>public&nbsp;class&nbsp;TestMyThread{<br></p><p style=\"margin-left: 40px;\">public&nbsp;static&nbsp;void&nbsp;main(String&nbsp;args[]){</p><p style=\"margin-left: 80px;\">Thread&nbsp;t&nbsp;=&nbsp;new&nbsp;MyThread();<br></p><p style=\"margin-left: 80px;\">t.start();</p><p style=\"margin-left: 80px;\">t.start();</p><p style=\"margin-left: 80px;\">t.start();</p><p style=\"margin-left: 40px;\">}</p><p>}</p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('08DAEDCB974649E492F3DD65AADEE648', '<p>抽象类的成员特点不包括( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('09250F5FB1EB4C31A84BCF7665381BDC', '<p>假设xxx.txt里面有三个汉字”黑马好”，请问下面程序执行后xxx.txt里面是( ) ----- 单选<br></p><p>FileOutputStream fos = new FileOutputStream(“xxx.txt”);​</p><p>fos.write(97);<br></p><p>fos.close();<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('093164F779F84F12A6592CD451E8CD72', '<p>下面关于键盘录入两个int类型数据 int x 和 int y比较两者大小的代码中,哪一句代码是错误的( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('0969B6C5716B4F1ABEC65C7AE62E9A0E', '<p>关于迭代器说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('09A95217367F4AD5A804067AE5BC46C5', '<p>看代码片段给出运行结果( ) ----- 单选<br>public static void main(String [] args){<br>&nbsp; System.out.println(“小明”+’A’+1);<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('09F34928060A46DFB9C1C0FD308D2508', '<p style=\"margin-left: 40px;\">根据下面的代码，选出空白处应填写的代码表示存储1-20的随机数( ) ----- 单选</p><p style=\"margin-left: 80px;\">HashSet&lt;Integer&gt;&nbsp;hs&nbsp;=&nbsp;new&nbsp;HashSet&lt;Integer&gt;();</p><p style=\"margin-left: 40px;\">Random&nbsp;r&nbsp;=&nbsp;new&nbsp;Random();</p><p style=\"margin-left: 40px;\">while(hs.size()&nbsp;&lt;&nbsp;10)&nbsp;{</p><p style=\"margin-left: 40px;\">补全此处代码</p><p style=\"margin-left: 40px;\">hs.add(num);</p><p style=\"margin-left: 40px;\">}</p><p style=\"margin-left: 40px;\"><br></p><p style=\"margin-left: 40px;\">for&nbsp;(Integer&nbsp;integer&nbsp;:&nbsp;hs)&nbsp;{ System.out.println(integer);</p><p style=\"margin-left: 40px;\">}</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('0AB1A30AC8D84D2EA68853FED6B1CC3D', '<p>使用流式套接字编程时，为了向对方发送数据，需要使用哪个方法( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '86CD29E675474B1F922662BF9D093AF8', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('0AD033E697B148A4896ADE14CEAD8D3C', '<p>下列关于Vector的方法说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('0B4FD060189A4B7BB285C9A375F22E21', '<p>下面用字符流能成功拷贝的文件有( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('0B9F88745EBA4854A16F1B71E2EDFE20', '<p>下列不属于整数数据类型的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('0BB77E63B8B54AB7AE7F8B315B6EB5D4', '<p>以下哪个方法肯定不能被子类重写(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('0C5CBE3D8DDF46E281A0862052AE8890', '<p>比较器必须实现以下哪个接口( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('0C9997D36DD54B168B960EC159815DF2', '<p>类中某方法定义如下：</p>\r\n\r\n<p>&nbsp; &nbsp; double&nbsp;fun(int&nbsp;a,int&nbsp;b){&nbsp;&nbsp;&nbsp;</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; return&nbsp;a*1.0/b;&nbsp;&nbsp;</p>\r\n\r\n<p>&nbsp; &nbsp; }&nbsp;</p>\r\n\r\n<p>同一类内其它方法调用该方法的正确方式是( ) ----- 单选</p>\r\n', 'D784548C7E36488985F3BED1FACE7BDA', 'E11C3FCF38894C79A4CB52DD6161E8EC', 'DCA58D926B2C4A45822B60BD7221FDA2', 'A8D82850413144BFAD27D0D5B6341EA8', '', '', 'B', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '1', '2016-01-05 00:06:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('0D9A8E62FBE541EBA102263994E43699', '<p>下列关于Eclipse的特点描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('0DE02B30B9624BCDA2D532954D0F13BB', '<p>下列给数据类型赋值错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('0ED9E5F47F9843A4B8235F48E7F7BD1D', '<p>下列定义数组格式正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('0EF6FB630044444EB4987440FD362DA7', '<p>根据下面代码,获取一个正确答案( ) ----- 单选<br>public static void main(String[] args) {<br>&nbsp; int a = 10;<br>&nbsp; int b = 20;<br>&nbsp; int c = 30;<br>&nbsp; if (a &gt; b) {<br>&nbsp; &nbsp; if (a &gt; c) {<br>&nbsp; &nbsp; &nbsp; System.out.println(a + \"是最大值\");<br>&nbsp; &nbsp; }<br>&nbsp; } else {<br>&nbsp; &nbsp; if (b &gt; c) {<br>&nbsp; &nbsp; &nbsp; System.out.println(b + \"是最大值\");<br>&nbsp; &nbsp; } else {<br>&nbsp; &nbsp; &nbsp; System.out.println(c + \"是最大值\");<br>&nbsp; &nbsp; }<br>&nbsp; }<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('0F737DC4397A448CA1ACA1875D040FB2', '<p>下面说法正确的是(&nbsp;) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('0F9A40D26D524697ABDA4A524D7E1C8E', '<p>下列哪些不是java开发工具( ) -----&nbsp; 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('10440D70AC824DB0B71F0067532A0027', '<p>下列关于Object类的equals方法描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1083B83DE4EE4DC4A824866A1BB7C7AF', '<p style=\"margin-left: 40px;\">观察下面代码,以下说法正确的是( ) ----- 单选</p><p style=\"margin-left: 40px;\">int[]&nbsp;arr&nbsp;=&nbsp;new&nbsp;int[2];</p><p style=\"margin-left: 40px;\">for(int&nbsp;a&nbsp;:&nbsp;arr){</p><p style=\"margin-left: 40px;\">arr[0]&nbsp;=&nbsp;1;</p><p style=\"margin-left: 40px;\">}</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('10BCED75F1324ED792FD968B905CAE24', '<p>下面程序执行的结果是( ) ----- 单选</p>\r\n\r\n<p>class&nbsp; Test{</p>\r\n\r\n<p>&nbsp; &nbsp; public&nbsp; static&nbsp; void&nbsp; main(String[] args)&nbsp;{</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(&ldquo;&ldquo;+&rsquo;a&rsquo;+1);</p>\r\n\r\n<p>&nbsp; &nbsp; }</p>\r\n\r\n<p>}</p>\r\n', 'B4B994EA18C74F4E8E4D2D0C6634F325', '54B36C803F4C49A8903CB7D277EE7542', '6DF02EC00D524ECE8E9C8A18DFF07177', '4C575F2F85604312B41F6315128220FD', '', '', 'B', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '1', '2016-01-04 23:46:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('10CE2076CEB349AB96447415C0DCA62E', '<p>下面哪个不是网络编程的三要素之一( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '86CD29E675474B1F922662BF9D093AF8', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('10DEC256C8D84F0EA9EDEB62BCBE01D4', '<p>下列关于Scanner类描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('111B56589A6D4100A4FB075A697424D6', '<p>下列关于Eclipse调试的描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('11AD8073BC5440578ADB14452E3D2094', '<p>下列关于return语句的说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('11CFABFBD4B24275A59916CA4A4EE08E', '<p>使用继承的注意事项有哪些(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1219DAFEA6724A5DA10B6474B81430E1', '<p>关于&nbsp;for循环和&nbsp;while循环的说法哪个正确( ) ----- 单选</p>\r\n', 'D7FF3CCA0E7543FA9E8A67CC1AA3B4C4', 'F15DF206F92E49C2A07D1CEE30C2A455', '061D009777EF4E8794E4D04A4156A517', '48302710750B4A828D35FC1096576A0A', '', '', 'B', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '1', '2016-01-05 11:13:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1244EF5B065C413E8538D26FE6BD5DB7', '<p>Java中，关于队列的的说法正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('124724C69E1244E8B8ADF5F42EFF2E34', '<p>System.currentTimeMillis方法的作用是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1260425F964E43A885DEF47F72190014', '<p>关于this和super的区别说法错误的有(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('129512937C50417BBDD4EC4B2FC54C3B', '<p>看代码片段给出运行结果( ) ----- 单选<br>public static void main(String [] args){<br>&nbsp; char c = 97;<br>&nbsp; System.out.println(c);<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('129CFC454B654A4BBB45D648BDB23225', '<p>下列说法中错误的一项是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('12E6DB0B3B644FDC950D4CCEA0CA93CD', '<p>String类中split()方法描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('12F15E24460741489FC9F95F49C8CF6F', '<p>关于Arrays工具类中的sort(int[] a)方法描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('12FBDA3104CB47028FD6489140714F01', '<p>根据下面代码给出正确的结果( ) ----- 单选<br></p><p>public static void main(String[] args) {<br>&nbsp; System.out.println(add(30,40));&nbsp;&nbsp; &nbsp;<br>}&nbsp;&nbsp; &nbsp;<br>public static int add(int a,int b) {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp; int sum = a + b;<br>&nbsp; return sum;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('14F36999518642BB88E0EF9BC295CB74', '<p>补充代码完成数组反转功能的是( ) ----- 单选<br></p><p style=\"margin-left: 40px;\">public static void reverseArray(int[] arr) {<br>&nbsp;&nbsp; &nbsp;for (int i = 0;i &lt; arr.length / 2 ; i++) {<br>&nbsp; &nbsp; &nbsp; &nbsp; 补充代码<br>&nbsp;&nbsp; &nbsp;}<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('156E866F773E4BAD84432DAF8EBA9C58', '<p>看代码片段给出运行结果( ) ----- 单选<br>public static void main(String [] args){<br>&nbsp; int c = 97;<br>&nbsp; System.out.println(++c);<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('15C8FCFE254D4AB2A7BE7F67D2129B3C', '<p>下面逻辑运算符中哪些有短路效果( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('164036900FC0455CAD6AA96796D9044F', '<p>下列选项中关于Scanner的使用步骤，错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('16E4716E3627450DB9D3608C877DAAED', '<p style=\"margin-left: 40px;\">要遍历元素对象，下面横线处填写的代码应为( ) ----- 单选</p><p style=\"margin-left: 40px;\">ArrayList&lt;String&gt;&nbsp;list&nbsp;=&nbsp;new&nbsp;ArrayList&lt;&gt;();</p><p style=\"margin-left: 40px;\">list.add(\"a\");</p><p style=\"margin-left: 40px;\">list.add(\"b\");</p><p style=\"margin-left: 40px;\">list.add(\"b\");</p><p style=\"margin-left: 40px;\">for(&nbsp;&nbsp;____________&nbsp;&nbsp;){</p><p style=\"margin-left: 40px;\">System.out.println(x);</p><p style=\"margin-left: 40px;\">}</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1704CF5FE5D3469DB943E64C1D6DE4C2', '<p>看代码片段给出运行结果( ) ----- 单选<br>public static void main(String [] args){<br>&nbsp; System.out.println(‘a’+1);<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('17F1640F63494149AC681672117A2B5F', '<p>下列关于LinkedList的特点正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1871BE8CAFCF45989ADF9A9F8EAAA4E4', '<p>关于Eclipse的视图和透视图描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('18753E1650F441928BBA0651272ECBEA', '<p>API中对StringBuffer描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('18956523012A47378205856CFB075AF9', '<p>以下关于TreeSet的优势描述错误的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('18D60A3738584A2C8AE5FBBCCF6A1A1A', '<p>在Java中，下面关于抽象类的描述正确的是( ) ----- 多选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('18DAE8B524B54C2FA88584881049C063', '<p>以下代码输出的结果是( ) ----- 单选<br></p><p>class &nbsp;Demo{<br>&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int x = 10;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;method(x);<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int[] arr[] = {{1,2,3},{1,2,3}};<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;method(arr);<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.print(x+arr[0] [0]);<br>&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;public static void method(int y) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;y=5;<br>&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;public static void method(int[][] arr) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;arr[0] = new int[]{5,10,15};<br>&nbsp;&nbsp; &nbsp;}<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('192E56F8066E4D729E98AC1E1890AF1B', '<p>下列代码能够打印出<br></p><p>54321</p><p>5432</p><p>543</p><p>54</p><p>5</p><p>形状的是哪个选项( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('199C217200F248CA8901EF185C605765', '<p>请补齐______处的代码(&nbsp;) ----- 单选<br>class Demo1_NoNameInnerClass {<br>&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Outer o = new Outer();<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;o.method();<br>&nbsp;&nbsp; &nbsp;}<br>}</p><p>// &nbsp; &nbsp;补齐代码 &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p><p>class Outer {<br>&nbsp;&nbsp; &nbsp;public void method(){<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;new Inter(){<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public void print() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(\"---no name print---\");<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}.print();<br>&nbsp;&nbsp; &nbsp;}<br>}</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1ABFBBEAB95D4470ABCAC064478915D9', '<p>在main方法中定义int[] x,y[];下列说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1B0B7BDF4F2D44F0A59E54240A227218', '<p>File类中的isDirectory()方法的作用是( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1BDB4E7917E84F359A9EF2B8B9EEED07', '<p>以下关于TreeSet描述正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1BE12F8B802B4621BF60F5D3D05F0D73', '<p>要想实现对象的序列化和反序列化，要求对象所属的类必须实现下面的哪个接口( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1BECAC261E36474791552E2DAA633661', '<p>if语句描述错误的一项是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1C0C0B2696524EFFB6EBC9F4C62563E9', '<p>定义int[] arr = new arr[5],下列说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1D1391BF3D57479DA6CD4B43F93D454E', '<p>以下代码运行时( ) ----- 单选<br>class Test{<br></p><p style=\"margin-left: 40px;\">public static final int count;<br></p><p style=\"margin-left: 40px;\">public static void main(String[] args){<br></p><p style=\"margin-left: 80px;\">count=10;<br></p><p style=\"margin-left: 80px;\">System.out.println(count);<br></p><p style=\"margin-left: 40px;\">}<br></p><p>}<br><br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1D145EF1AF534D06A1B09823C50527FB', '<p>String类中能够将字符串转成字符数组的方法( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1D27400B24294D5483ABACEA7527475B', '<p>在使用HashSet对象存取数据的时候，说法正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1D294DBEC5524BC6A1D5C631911AF8F7', '<p>继承是通过哪个关键字来实现(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1D3ED14895164E81A695DCB17CD19016', '<p>File类中的exists()方法的作用是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1D5D0D888003473B801007FF491DBAAC', '<p>下面代码运行的结果是( ) ----- 单选<br></p><p style=\"margin-left: 40px;\">Integer x = 3 ;&nbsp;<br>x = x + 3; &nbsp;&nbsp;<br>System.out.println(x);<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1DA52701C92B497CB51ECFF3DA659599', '<p>下列描述ArrayList集合特点正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1E99BC1C9AD140F1AEF70A9684E9288E', '<p>下列关于ArrayList的contains(Object&nbsp;obj)方法的理解错误的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1EA120BF3FE04991B16A5CADE159A2EC', '<p>以下关于单继承关系中说法正确的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1EBE1D9532B846A2B279F761A3FFBD2A', '<p>File类中，创建多级目录，可以通过以下哪个方法( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1F144C304C6D46DBB9E559D2E4BBA481', '<p>计算机的全称(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1F249CA9B969470A954470FD62CB2F34', '<p>以下说法错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1F61674539B34419942625A04F4AD41E', '<p>下列流中哪个不属于字节流( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1F8CA06547AD4987A56B66259C741711', '<p>看下面程序，假如xxx.txt里面有一个文字”a”，请问该程序输出结果是( ) ----- 单选</p><p>public static void demo1() throws FileNotFoundException, IOException {</p><p style=\"margin-left: 40px;\">InputStream is = new InputStream(\"xxx.txt\");&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 40px;\">int x = is.read();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 40px;\">System.<em>out</em>.println(x);</p><p>}</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1FB777DEC2AB4491BDBAFD1C22C66F5A', '<p>输出的结果是( ) ----- 单选<br></p><p>class &nbsp;Demo{<br>&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int x = 10;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;method(x);<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int[] arr = {1,2,3};<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;method(arr);<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.print(x+arr[0]);<br>&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;public static void method(int y) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;y=5;<br>&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;public static void method(int[] arr) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;arr[0] = 5;<br>&nbsp;&nbsp; &nbsp;}<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1FCE0BB2F27348CFA2D9EAB10980038D', '<p>下列关于对象内存的说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('1FEDB9888FF844ED8CB40D0CE8306829', '<p style=\"margin-left: 40px;\">需求:&nbsp;从键盘接收一个字符串,&nbsp;程序对其中所有字符进行正序排序,例如键盘输入:&nbsp;helloitcast程序打印:acehillostt，补全代码( ) ----- 单选</p><p style=\"margin-left: 40px;\">Scanner&nbsp;sc&nbsp;=&nbsp;new&nbsp;Scanner(System.in);</p><p style=\"margin-left: 40px;\">System.out.println(\"请输入一行字符串:\");</p><p style=\"margin-left: 40px;\">String&nbsp;line&nbsp;=&nbsp;sc.nextLine();</p><p style=\"margin-left: 80px;\">char[]&nbsp;arr&nbsp;=&nbsp;line.toCharArray();</p><p style=\"margin-left: 40px;\">TreeSet&lt;Character&gt;&nbsp;ts&nbsp;=&nbsp;new&nbsp;TreeSet&lt;&gt;(new&nbsp;Comparator&lt;Character&gt;()&nbsp;{</p><p style=\"margin-left: 40px;\">@Override</p><p style=\"margin-left: 40px;\">public&nbsp;int&nbsp;compare(Character&nbsp;c1,&nbsp;Character&nbsp;c2)&nbsp;{</p><p style=\"margin-left: 40px;\">int&nbsp;num&nbsp;=&nbsp;c1&nbsp;-&nbsp;c2;</p><p style=\"margin-left: 40px;\">补全此处代码</p><p style=\"margin-left: 40px;\">}</p><p style=\"margin-left: 40px;\">});</p><p style=\"margin-left: 40px;\"><br></p><p style=\"margin-left: 40px;\">for(char&nbsp;c&nbsp;:&nbsp;arr)&nbsp;{</p><p style=\"margin-left: 40px;\">ts.add(c);</p><p style=\"margin-left: 40px;\">}</p><p style=\"margin-left: 40px;\">for(Character&nbsp;ch&nbsp;:&nbsp;ts)&nbsp;{</p><p style=\"margin-left: 40px;\">System.out.print(ch);</p><p style=\"margin-left: 40px;\">}</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('20175B40D4B14A0DA895C28F3AA1923A', '<p>关于封装下面介绍错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('2070C53ECECD4956AD117A097BCFC1EB', '<p>File类中，获取文件的字节数，可以通过那个方法实现( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('20BBF6F03B8A472E8760EBBAF805B700', '<p>下面创建FileOutputStream对象错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('21020886B96D43E99B075B11FE939BEB', '<p>下面哪个类是UDP传输的数据包类( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '86CD29E675474B1F922662BF9D093AF8', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('215BD317DDEF4C5E8E79B264460C2CC2', '<p>下面程序执行的结果是( ) ----- 单选</p>\r\n\r\n<p>class Demo {<br />\r\n&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int a = 10;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (a++ &gt; 10) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;a = 20;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(a);<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n}</p>\r\n', '62A9250F87874E5BB160AF76BFD99A6D', 'B68C18F2986343ADA5087FC31B8360BD', 'A5A8E92804C3436686032B3A411C8BED', '5A8C45EEC7234CA0A2104DFBB7E705B6', '', '', 'A', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '1', '2016-01-05 11:16:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('21A75707C7904D10B947EA894C964F17', '<p>类与对象的关系是是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('22093AD408C949E7B74D50FDDF7D79A8', '<p>可以将一个StringBuffer对象转换成String的方式,哪些是错误的( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('220EC8E9622F4702A57A59C54B932E56', '<p>关于方法下面说法错误的一项( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('227695A9EEF0493CAA09E454222BC69D', '<p>补充代码完成数组的查找功能的是( ) ----- 单选<br></p><p style=\"margin-left: 40px;\">public static int getIndex(int[] arr,int value) {<br>&nbsp;&nbsp; &nbsp;for (int i = 0;i &lt; arr.length ;i++ ) {&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//补充代码&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;return -1;<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('239108173BE64DFF86B3B0CD9EE51377', '<p>下列关于private的说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('239434072AC84FF89E0E2A017BD34DF6', '<p>子类对象在调用方法时(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('23A1BC07261E4D148BCFF7800FD73746', '<p>下列关于Java I/O中字符输入流描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('23CF65229C414EA4AB416B8DD803955A', '<p>String类中用什么方法比较两个字符串:( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('2415971B99164573BBD7B3D73E85FBEE', '<p>关于Map集合的描述，以下说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('2419F299E0C745AC9D8916E8C248ED4A', '<p style=\"margin-left: 40px;\">1.下列代码中，说法正确的是( ) ----- 单选</p><p style=\"margin-left: 40px;\">ArrayList&lt;Person&gt;&nbsp;list&nbsp;=&nbsp;new&nbsp;ArrayList&lt;&gt;();</p><p style=\"margin-left: 40px;\">list.add(new&nbsp;Person(\"张三\",&nbsp;23));</p><p style=\"margin-left: 40px;\">list.add(new&nbsp;Person(\"李四\",&nbsp;24));</p><p style=\"margin-left: 40px;\">list.add(new&nbsp;Person(\"王五\",&nbsp;25));</p><p style=\"margin-left: 40px;\">list.add(new&nbsp;Person(\"赵六\",&nbsp;26));</p><p style=\"margin-left: 40px;\">Iterator&lt;Person&gt;&nbsp;it&nbsp;=&nbsp;list.iterator();</p><p style=\"margin-left: 40px;\">while(it.hasNext())&nbsp;{</p><p style=\"margin-left: 40px;\">Person&nbsp;p&nbsp;=&nbsp;it.next();</p><p style=\"margin-left: 40px;\">System.out.println(p.getName()&nbsp;+&nbsp;\"...\"&nbsp;+&nbsp;p.getAge());</p><p style=\"margin-left: 40px;\">}</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('241C001A59B44737A1F152EB8D0235BB', '<p>下面程序的运行结果是( ) ----- 单选<br></p><p>FileOutputStream fos = new FileOutputStream(“c:\\\\demo.txt”);<br></p><p>fos.write(“abc”);<br></p><p>fos.close();<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('24A6885B91CB4F26A77FD0A15FC87CC2', '<p>下列程序的运行结果是( ) ----- 单选<br>&nbsp; &nbsp; public class Student {<br>&nbsp;&nbsp; &nbsp;private String name;<br>&nbsp;&nbsp; &nbsp;private int age;<br>&nbsp;&nbsp; &nbsp;public Student(String name, int age) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;super();<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;this.name = name;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;this.age = age;<br>&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;public boolean equals(Object obj){&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Student &nbsp;s = (Student)obj; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return this.name.equals(s.name) || this.age == s.age;&nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}&nbsp;<br>&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;import com.heima.bean.Student;<br>&nbsp;&nbsp; &nbsp;public class Demo4_Equals {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Student s1 = &nbsp;new Student(\"张三\", 23);<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Student s2 = &nbsp;new Student(\"张三\", 24);<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Student s3 = &nbsp;new Student(\"李四\", 23);<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Student s4 = &nbsp;new Student(\"张三\", 24); &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(s1.equals(s2)+\" \"+s3.equals(s4));&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;}<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('24CDF9D0EEF14C1BAEA0F6175302FFD9', '<p>Eclipse的Alt+Shift+S的可选功能不包括( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('250F9DE779A24CF591EFD2662443FF2C', '<p>当调用System.exit(1)方法后会出现什么情况( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('25A2881255F447F4A07944DBEBDB5677', '<p>根据下面代码，选择出正确的输出结果( ) ----- 单选<br>public static void main(String[] args) {<br>&nbsp; int a = 10;<br>&nbsp; int b = 20;<br>&nbsp; if(a &lt; b){<br>&nbsp; &nbsp; System.out.println(a&lt;b);<br>&nbsp; }else{<br>&nbsp; &nbsp; System.out.println(a&gt;b);<br>&nbsp; }<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('25D9A255AF234A598AE8133A7FD59402', '<p>下面代码运行结果是( ) ----- 单选<br></p><p>outer: for (int i = 1;i &lt;= 10 ;i++ ) {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;System.out.println(\"i = \" + i);<br>&nbsp; &nbsp; inner: for (int j = 1;j &lt;= 10 ;j++ ) {<br>&nbsp; &nbsp; &nbsp;&nbsp;System.out.println(\"j = \" + j);<br>&nbsp; &nbsp; &nbsp;&nbsp;break outer;<br>&nbsp;&nbsp; &nbsp;}<br>}<br><br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('267C44DEC8724C72BB1700B9C3B8FE2A', '<p>下面说法正确的是( ) ----- 多选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('26E774C543914673B7AB71AB09B53885', '<p>已知xxx.txt里面有“abc我”，下面说法不正确的是( ) ----- 单选<br></p><p>FileInputStream fis = new FileInputStream(\"xxx.txt\");&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>int x = fis.read();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>System.<em>out</em>.println((char)x);</p><p>int y = fis.read();</p><p>System.<em>out</em>.println((char)y);</p><p>int z = fis.read();</p><p>System.<em>out</em>.println((char)z);</p><p>int a = fis.read();</p><p>System.<em>out</em>.println((char)a);</p><p>int b = fis.read();</p><p>System.<em>out</em>.println((char)b);<br></p><p>int c = fis.read();</p><p>System.<em>out</em>.println((char)c);</p><p><br></p><p>fis.close();</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('270639BBB31840FA98D5A37240A91DE9', '<p>下列哪些修饰符可以用来修饰一个学生类(&nbsp;) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('27EB767D8B51453CB21E8C05B813330F', '<p>编写线程类，要继承的父类是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('27F0DB3629724236AFCAAC9D331E9B7B', '<p>关于构造方法重载注意事项说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('285E75587454458A8F4974FE0301A961', '<p>下面哪个关键字可以定义一个类( ) ----- 单选</p>\r\n', '9E49B5877A444E7A85A12672C1EF2A91', '4FED25406B2D4A3AAF9EB29D418C1B30', 'BCC1F8275CE445538582468EE56A3B67', '0755945AFE3C45FD9FC8D0A57AE9D59B', '', '', 'B', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '1', '2016-01-05 00:04:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('2869700F7F8447529486E00C338F28E5', '<p>Collections中的sort()方法可以对那种集合进行排序( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('28A73EF55D184D5EA1A987DB11DB85FF', '<p>对于Java中synchronized&nbsp;和&nbsp;ReentrantLock说法错误的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('28FF3BF1E3524ACEA7D3ACD5025F4A13', '<p style=\"margin-left: 40px;\">根据代码说明结果( ) ----- 单选</p><p style=\"margin-left: 40px;\">HashSet&lt;String&gt;&nbsp;hs&nbsp;=&nbsp;new&nbsp;HashSet&lt;String&gt;();</p><p style=\"margin-left: 40px;\">hs.add(\"b\");</p><p style=\"margin-left: 40px;\">hs.add(\"a\");</p><p style=\"margin-left: 40px;\">hs.add(\"b\");</p><p style=\"margin-left: 40px;\">for(String&nbsp;s&nbsp;:&nbsp;hs)&nbsp;{</p><p style=\"margin-left: 40px;\">System.out.print(s+\"&nbsp;\");</p><p style=\"margin-left: 40px;\">}</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('29E5BE4B7C294A9E8F4E9F6C0FE7A0A4', '<p>下列关于类加载器说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, 'C2848E4C98F7463680B35F88166CEC3F', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('2A73CD0EB61845F48B99141874D2BB7E', '<p>在方法中如何抛出异常( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('2B10E85490784C558198CD8CAFEAB066', '<p style=\"margin-left: 40px;\">下面泛型方法中，说法正确的是( ) ----- 单选</p><p style=\"margin-left: 40px;\">private&nbsp;&lt;T,Q&gt;&nbsp;void&nbsp;show2(T&nbsp;t)&nbsp;{</p><p style=\"margin-left: 40px;\"><br></p><p style=\"margin-left: 40px;\">}</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('2B1328117B79429EBD1E9D91D4ADDA0D', '<p>下面说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('2BEB9B564FB94C61B355D7438B21AEAA', '<p>下面关于java中方法，描述错误的是( ) ----- 单选</p>\r\n', '1F68188B598C42D0A5F7EF0A9EFCC37A', '32077A6DE0BC48E88C8FE3E30CFA92F8', 'A777FEFEEFAD477DA5F7E3B789E7E1DF', '1A5B88AC7ED94050ACBE709C75D23B8A', '', '', 'C', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '1', '2016-01-05 00:01:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('2C416F37A6994C14B3D87C469DAC3D8A', '<p>下列关于泛型说法不正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('2C43CC1C4D1E4373BF8F2932AF7089E2', '<p>StringBuffer和String的区别​( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('2C5BF2B0184A40FEA0C066A9058E6F28', '<p>假设有一个Student类，下列哪个选项符合对象数组的格式要求( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('2CBA15AF85F1403A895C4FE0F565A4CF', '<p>Collections工具类中的binarySearch()方法描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('2CE1787CC2B9461CA64313EB9F496F3F', '<p>下列关于Java API的说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('2CE29EB738E0494B851E80649D5CFDA6', '<p>单列集合可以使用的添加元素的方法有哪个( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('2CEB58B718AF4C14B43FB3F1349ABE3C', '<p>下列对多态中成员访问的特点描述正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('2D893DF5AD2D4BA38B380E261540BC4F', '<p style=\"margin-left: 40px;\">在下列代码中，关于it.next()方法的作用理解正确的是( ) ----- 单选</p><p style=\"margin-left: 80px;\">ArrayList&nbsp;list&nbsp;=&nbsp;new&nbsp;ArrayList();</p><p style=\"margin-left: 80px;\">list.add(new&nbsp;Person(\"张三\",&nbsp;23));</p><p style=\"margin-left: 80px;\">list.add(new&nbsp;Person(\"张三\",&nbsp;23));<br></p><p style=\"margin-left: 80px;\">list.add(new&nbsp;Person(\"李四\",&nbsp;24));<br></p><p style=\"margin-left: 80px;\">list.remove(new&nbsp;Person(\"张三\",&nbsp;23));</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('2EA8E15740084D309085376DC7913C8A', '<p>下面说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('2EC24E4721784A96BDA14C19599D976E', '<p>逻辑运算下面说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('2F45BEB283FF421A8200E2AC491514FD', '<p>下列程序的输出结果是( ) ----- 单选<br>&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;String s = \"woaiHEImaniaima\";<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;String s2 = s.substring(0, 1).toUpperCase().concat(s.substring(1).toLowerCase();<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(s2);<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;}<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('2F878C45E88947E7B097C5601AFA8184', '<p>StringBuffer类中的append()方法描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('2FF773FFEE944FC292F92C6B09F338E3', '<p style=\"margin-left: 40px;\">运行下面代码，说法正确的是( ) ----- 单选</p><p style=\"margin-left: 40px;\">ArrayList&lt;Object&gt;&nbsp;list&nbsp;=&nbsp;new&nbsp;ArrayList&lt;Object&gt;();</p><p style=\"margin-left: 40px;\">List.add(new&nbsp;Object());</p><p style=\"margin-left: 40px;\">list.add(new&nbsp;Person());</p><p style=\"margin-left: 40px;\">list.add(“abc”);</p><p style=\"margin-left: 40px;\">list.add(100);</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('30751AC1CA3B4F27B32085193F56732D', '<p>下面计算2*4最快的一项是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('30A3D30DECD144BB97AA52A01513D6A1', '<p>下列关于通过反射方式获取方法并执行的过程说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, 'C2848E4C98F7463680B35F88166CEC3F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('30C0CA825EAA47219CA0FF69743134FD', '<p>使用变量遵循一个（）原则&nbsp;----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('30C0DFD41E144EF790498E8055558384', '<p>假设xxx.txt文件中存了2000个汉字,下列程序运行后输出的结果是( ) ----- 单选<br></p><p>public class Test {</p><p style=\"margin-left: 40px;\">public static void main(String[] args) throws IOException {</p><p style=\"margin-left: 80px;\">FileReader fr = new FileReader(\"xxx.txt\");</p><p style=\"margin-left: 80px;\">FileWriter fw = new FileWriter(\"yyy.txt\");</p><p style=\"margin-left: 80px;\">int count = 0;</p><p style=\"margin-left: 80px;\">char[] arr = new char[1024];</p><p style=\"margin-left: 80px;\">int len;</p><p style=\"margin-left: 80px;\">while((len = fr.read(arr)) != -1) {&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 120px;\">count++;</p><p style=\"margin-left: 120px;\">fw.write(arr,0,len);</p><p style=\"margin-left: 80px;\">}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 80px;\">fr.close();</p><p style=\"margin-left: 80px;\">fw.close();&nbsp;&nbsp;</p><p style=\"margin-left: 80px;\">System.out.println(count);</p><p style=\"margin-left: 40px;\">}</p><p>}</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('30E0743CAF524C0685457F7EE88C5216', '<p>关于选择结构下列哪个说法正确( ) ----- 单选</p>\r\n', 'E2F4AC169B2845CAB9536699FF5988DD', 'B5C364C6DE914AF6A514101AACA9D931', '95B26172C7D64387B2A30C830F3079C9', 'D2EC763435564DD9B3193F5E9324F84E', '', '', 'B', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '1', '2016-01-05 11:01:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('30E2F61D607D43FCA7B2D203D82452C3', '<p>看程序，说结果( ) ----- 单选<br>class A {<br>&nbsp;&nbsp; &nbsp;public void show() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;show2();<br>&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;public void show2() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.print(\"我\");<br>&nbsp;&nbsp; &nbsp;}<br>}<br>class B extends A {<br>&nbsp;&nbsp; &nbsp;public void show2() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.print(\"爱\");<br>&nbsp;&nbsp; &nbsp;}<br>}<br>class C extends B {<br>&nbsp;&nbsp; &nbsp;public void show() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;super.show();<br>&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;public void show2() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.print(\"你\");<br>&nbsp;&nbsp; &nbsp;}<br>}<br>public class Demo {<br>&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;A a = new B();<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;a.show();<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;B b = new C();<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;b.show();<br>&nbsp;&nbsp; &nbsp;}<br>}<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('31839F2DFE7844D7B2D244FBDF93D4BB', '<p>下面类或者接口中，不属于集合体系的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('31EDA5FF01BF4F90912E7E69883F341B', '<p>下列对于隐式类型转换描述正确的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('328DFDBB71764E95BE1C7F5CF17E38F0', '<p>String类中substring(int start,int end)作用是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('33161A15F3F841D6AD885A853228FE9D', '<p>异常体系的顶层父类是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('33239BCD1BD044E0A316F6AE2072E271', '<p>以下说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('33653C13ED974192B90251FF05593801', '<p>实现下列哪个接口，可以启用比较功能( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('336BDAE1204B458EB770E6667344FC24', '<p>下面对控制台输入描述中，错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('337556C3125C4549BF2B6D566AC19D17', '<p>异或运算符正确的是哪一项( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('33DB913298C2472387874A34A2896192', '<p>下列关于增强for循环的说法正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('33F17F63850A47328FE0DA143089B374', '<p>计算机能够直接识别的进制是哪一种(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('3493B4F1F3264C0DBD67F03CC3BE19F2', '<p>下列程序执行后k的值是( ) ----- 单选<br>public static void main(String[] args) {<br>&nbsp; int x = 6, y = 10, k = 5;<br>&nbsp; switch (x % y) {<br>&nbsp; &nbsp; case 0:<br>&nbsp; &nbsp; &nbsp; k = x * y;<br>&nbsp; &nbsp; case 6:<br>&nbsp; &nbsp; &nbsp; k = x / y;<br>&nbsp; &nbsp; case 12:<br>&nbsp; &nbsp; &nbsp; k = x - y;<br>&nbsp; &nbsp; default:<br>&nbsp; &nbsp; &nbsp; k = x * y - x;<br>&nbsp; &nbsp;}<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('34A040350A9349EE8F1C2C852648058A', '<p>设int 型变量 a、b，float 型变量 x、y，char 型变量 ch 均已正确定义并赋值，正确的switch语句是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('3588BD16F3F9415798119AB99396DAD9', '<p>String s1 = \"ab\"; String s3 = s1 + \"c\";创建了几个对象( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('3594B84AFBE84CA7B5EB04EB744A0113', '<p>关于String类的public String(byte[] bytes)方法描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('361AF02FB5F940C1865B9AA9DB7AA7E6', '<p>设有定义 float x=3.5f, y=4.6f, z=5.7f; 则以下的表达式中，值为false的是( ) ----- 多选</p>\r\n', 'D75B2B7CB5A44F8FAEBD132B14B2A72A', '9E603293484C41EC8BA8EB410F0B4425', 'AEA40335A936409582FD887AF6DFEE81', '5851BF1124254B9AAE07A5D61677E86A', '', '', 'A, B, C', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '1', '2016-01-05 11:07:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('36E6EE66AE9F4140968D5FBCCB419414', '<p>以下说法错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('37890E00DE1B4C458A90287102070D7F', '<p>下列关于数组的说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('378C1BB9E1BE494A8139D7F8323F8A32', '<p>以下说法正确的是:(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('37F2ECEE038043979CE8C2DA2E9105DE', '<p>看程序，说结果( ) ----- 单选<br>class Fu {<br>&nbsp;&nbsp; &nbsp;public void show() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(\"fu show\");<br>&nbsp;&nbsp; &nbsp;}<br>}<br>class Zi extends Fu {<br>&nbsp;&nbsp; &nbsp;public void show() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(\"zi show\");<br>&nbsp;&nbsp; &nbsp;}</p><p>&nbsp;&nbsp; &nbsp;public void method() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.print(\"zi method \");<br>&nbsp;&nbsp; &nbsp;}<br>}<br>class Demo {<br>&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Fu f = new Zi();<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;f.method();<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;f.show();<br>&nbsp;&nbsp; &nbsp;}<br>}</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('3853C01BD30A4CD18A1F90BCE961F137', '<p>下列哪个不是序列流SequenceInputStream类中的方法( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('38F24C79B28E4739949A918808B2CA05', '<p>在main方法中定义int[] arr = new int[5];和arr=null;下列说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('3962C2674C4A445394AFD8E290EB3F6E', '<p>以下代码1 2的位置运行结果是( ) ----- 单选<br></p><p style=\"margin-left: 40px;\">Integer i3 = new Integer(197);<br>Integer i4 = new Integer(197);<br>System.out.println(i3 == i4);&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;1<br>System.out.println(i3.equals(i4));&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;2<br>System.out.println(\"-----------\");<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('396CE78AC3B44CC4B6158FDB69A9DEF0', '<p>不属于java语言的特点的选项(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('399128C1C0874BDCB334AB6018236F6F', '<p>以下哪个不是继承的好处(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('39B854F1E4634F71A42EA97AFC1DA370', '<p>下列描述LinkedList集合特点正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('39CAE2CBBD9F4A20984DC823D3B6A0B9', '<p>以下说法错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('3A0EB703E970410697D65575ADBA5888', '<p>观看下面的代码，给出正确的结果( ) ----- 单选<br>class &nbsp;Demo {<br>&nbsp; public static void main(String [] args){<br>&nbsp; &nbsp; int a = 10;<br>&nbsp; &nbsp; double d =20;<br>&nbsp; &nbsp; d = a + d;<br>&nbsp; &nbsp; System.out.println(d);<br>&nbsp; }<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('3A58D147388F4DE9993481A748A806D7', '<p>关于Math类说法错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('3A5A4A1B904E468D9C12FC86476F3A06', '<p>下面哪些静态导入的语句是错误的( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('3B4943BA3A69445F9E93E7D526925372', '<p>下列关于int[][]&nbsp;arr = {{1,2,3},{4,5},{6,7,8,9}}的说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('3B5BC9E664F84464B2EE00464D5E7D91', '<p>下列关于LineNumberReader类的说法，错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('3C802AF0274E4FCB97401CA6E5FDD722', '<p>下列语句序列执行后，i的值是( ) ----- 单选</p>\r\n\r\n<p>int i=16;</p>\r\n\r\n<p>do {</p>\r\n\r\n<p>&nbsp; &nbsp; i/=2;</p>\r\n\r\n<p>} while( i &gt; 3 );</p>\r\n', '7ABC2BB660A2424D9710763AD550DF00', '84E890368FC942FC96410DBB587ACB3D', '2D749648B1F640CD8AB7304A88853ADF', 'D8E69222EE5947F79FAE6E9E2A88C549', '', '', 'D', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '1', '2016-01-05 11:17:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('3CA9A912222A4EF6B38F4C23582285E8', '<p>若要取得数据包的发送端或接收端地址，可使用下列哪个语句( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '86CD29E675474B1F922662BF9D093AF8', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('3CCE2C9289C147A886A36B03E3AD9553', '<p>字符缓冲流内部封装的字符数组的大小为( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('3D1A1274B7544CC9B107AD516C9EFAEE', '<p>下列关于数组的初始化说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('3D8FCCCE165E488FA2BD34F2DBCD6A80', '<p>下列关于面向对象的说法错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('3DD40B0051E5410BAC65E7777FA277DF', '<p>Date类中，哪个方法可以返回当前日期对象的毫秒值( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('3E074807A73A4601A9335B2CAF606171', '<p>下列定义数组格式正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('3E18BF9C7CF74C649891D16DEF8662EC', '<p>截取整个屏幕的功能键( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('3E3E073C2B0D4E6F8BCA838807F0FA64', '<p>以下方法能够和 public void show(){} 这个方法重写的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('3E9665E3DA3044A7B21EEE97452696A8', '<p>看代码片段给出运行结果( ) ----- 单选<br>public static void main(String []args){<br>&nbsp; short s = 1 ; s += 1;<br>&nbsp; System.out.println(s);<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('3EFEC211932E4E69A8CDE98B2BAF20F1', '<p>HashSet在存储元素的时候，以下说法错误的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('3F897C38AC0B401AB845A5D6A07D6DA2', '<p>下面程序执行的结果是( ) ----- 单选</p>\r\n\r\n<p>int x =1,y=1;</p>\r\n\r\n<p>if(x++==2 &amp; ++y==2){</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; x=7;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>System.out.println(&quot;x=&quot;+x+&quot;, y=&quot;+y);</p>\r\n', 'AC1B4EEB852F427AB993BD41DB48BA8C', '76D8818D842241C58B7D70E22CDC9DF9', 'C2801F0FFF7F4E1DBBA615FB13876850', '3DDBCD7466924F4DAD8CE49DBACFBD91', '', '', 'D', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '1', '2016-01-05 10:56:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('403BCD4E74E34D9F9ED4961F931A6ECF', '<p>以下哪个方法可以向StringBuffer对象的指定位置添加数据( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('40488E49581B4BA5B66F9E7B5B6D6490', '<p>对各种基本数据类型的数据的读写采用哪些流( ) ----- 多选</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('4052B4D8ED1240428210C2AC3E3479F4', '<p>下列语句序列执行后，i的值是( ) ----- 单选</p><p>int i = 10;</p><p>do {</p><p>&nbsp; i /= 2;</p><p>} while (i &gt; 1);</p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('4075D5322C2B441D928A1E40D456EE19', '<p>以下不属于IO流的实际应用的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('40BC6D3CB9894074B3229744A9B46128', '<p>同一类中有两个以上方法同名称方法重载，Java语言规定( ) ----- 单选</p>\r\n', '74561F82E94D44FC8E9FA1831BB38450', '7FD7CBFDCDF4432B9FBCF511D1FD0C2F', '3C0D6CB5EA07432480C839B7517AC43B', 'B693466270A54911BCEB37606E808FA7', '', '', 'A', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '1', '2016-01-05 10:58:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('40D8ABB364214CD59F300501FAE4FDBD', '<p>在main方法中定义int[] arr = new int[3]和int arr1 =arr,下列说法正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('41CBAD63AC204A448F2522D147517BC8', '<p>使用HashSet存储对象，如何保证唯一( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('42156B65734C458EB56B59297A7615C0', '<p>关于字节流和字符流的说法正确的是( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('423F61937F2A4392B4BBAF948573B129', '<p>关于throw和throws的区别，以下说法错误的是( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('4297FC8F0BE7432AB131FA9F1D9C1A1D', '<p>关闭流用哪个方法( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('42A26E2F819042C18518600FACE18619', '<p>关于用Eclipse编写抽象类的子类描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('42C225CF6FAD46BA95AF3285E380BA0E', '<p>对于Date描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('42F361196B7E460BA3B528C18EF58B75', '<p>下列不属于逻辑运算符的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('436F40CD84154E6CB2148FC15B8328F0', '<p>父类中的私有成员变量可以通过以下哪种方式访问(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('4393D62D0D454BCD82440A6A510CC6CB', '<p>下面关于Arrays工具类描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('43EA319D8CE04500B43BB2FBA8B36C0E', '<p>关于Arrays类里面的asList方法的说法，错误的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('44A49A9EF03A4EA6998B38348D7009DD', '<p>下列类定义中哪个是合法的抽象类的定义( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('44AA838BFF29477A89185E72CFC2A059', '<p>下面描述错误的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('44B0AB0854214465BE5B6A7DBDE23B89', '<p>代码块的分类有几种？(&nbsp;) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '2', '4', '0', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('451A8653D590413D8F44C1F4E2A19160', '<p>下面哪项不是UDP协议的特点( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '86CD29E675474B1F922662BF9D093AF8', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('45240CAAA08A471F984E11DF7D191CB8', '<p>下列哪些是状态修饰符(&nbsp;) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('4576014BC221460894B8283B2945D4F4', '<p>以下代码运行时( ) ----- 单选<br>class Person{<br></p><p style=\"margin-left: 40px;\">String name;<br></p><p style=\"margin-left: 40px;\">int age;<br></p><p>}&nbsp;&nbsp; &nbsp;</p><p>class Test{<br></p><p style=\"margin-left: 40px;\">public static void main(String[] args){<br></p><p style=\"margin-left: 40px;\">&nbsp; final&nbsp;Person p=new Person();<br></p><p style=\"margin-left: 40px;\">&nbsp; p.name= \"张三\";<br></p><p style=\"margin-left: 40px;\">&nbsp; System.out.println(p.name);<br></p><p style=\"margin-left: 40px;\">}<br></p><p>}<br><br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('457E231D07BD4B05AD8087790868B821', '<p>查看下面代码,选择正确的结果( ) ----- 单选<br>public static void main(String[] args) {<br>&nbsp; int a = 4;<br>&nbsp; int b = 9;<br>&nbsp; int c = 10;<br>&nbsp; if(a &gt; b){<br></p><p>&nbsp; &nbsp; System.out.println(\"a &gt; b\");<br>&nbsp; }else if(b &lt; c){<br>&nbsp; &nbsp; System.out.println(\"b &lt; c\");<br>&nbsp; }else if(a &lt; c){<br>&nbsp; &nbsp; System.out.println(\"a &lt; c\");<br>&nbsp; }else{<br>&nbsp; &nbsp; System.out.println(\"aaabbbccc\");<br>&nbsp; }<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('45893D65D9D54B02A3DC7034F68BA22D', '<p>以下是Random类中方法的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('45C35EF208D84B21A0898129B87180A7', '<p>下列程序的输出结果是( ) ----- 单选<br>&nbsp;&nbsp; &nbsp;class Demo {</p><p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(\"abcd\".lastIndexOf(\"bc\",1));<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}</p><p>&nbsp;&nbsp; &nbsp;}<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('463A6CDC865A4AFC8944ADE30CC4B04A', '<p>关于Eclipse的工作空间配置描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('469DBB56229349EBA5B35B7263B87B81', '<p>关于null和“”说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('46BD27AD911848CEAA2EC19F2414C98C', '<p>在main方法中定义int[] arr = {1,2,3,4,5};之后输出System.out.println(arr[5]);下列的说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('47059212E46F4BC7BBB09F587418328E', '<p>关于Eclipse中删除工程的描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('4710BBC3C4474A9687DC8788182F67B7', '<p>下列关于反射和泛型的联系说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, 'C2848E4C98F7463680B35F88166CEC3F', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('474C9456A2D04ED29D8C2EDCA8B46124', '<p>关于java中的同步机制，表述错误的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('47910E17286646DD8E63E290548F5BED', '<p>下列关于类加载器作用的说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, 'C2848E4C98F7463680B35F88166CEC3F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('47F0A171A3524570A88D5B5DC293A113', '<p>下列语句序列执行后，i 的值是( ) ----- 单选<br></p><p>&nbsp;&nbsp; int s = 1, i = 1;</p><p>&nbsp; &nbsp;while (i &lt;= 4) {</p><p>&nbsp; &nbsp; &nbsp;s *= i;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++;<br></p><p>&nbsp; &nbsp;}</p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('47F83E0A130743B7A82307BFB89CDC48', '<p>下列程序执行后k的值是( ) ----- 单选<br></p><p>public static void main(String[] args) {<br>&nbsp; int i = 10, j = 18, k = 30;<br>&nbsp; switch (j - i) {<br>&nbsp; &nbsp; case 8:<br>&nbsp; &nbsp; &nbsp; k++;<br>&nbsp; &nbsp; case 9:<br>&nbsp; &nbsp; &nbsp; k += 2;<br>&nbsp; &nbsp; case 10:<br>&nbsp; &nbsp; &nbsp; k += 3;<br>&nbsp; &nbsp; default:<br>&nbsp; &nbsp; &nbsp; k /= j;<br>&nbsp; }<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('486BDBB1E1774281923B41E3971B85D6', '<p>关于Integer类中的静态方法parseInt()方法说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('4888C8C80F244B59B3446020061767FA', '<p>在Random类中，可以生成100以内非负整数的随机数的方法是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('48A3DBAA47A245569C1A9B7B0DCDBE2A', '<p>下面关于字节流说法错误的是( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('48D417D143DA43BF8049449D7082C6FA', '<p>对于增强for循环说法错误的是( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('494B987FEA4648E880F8D7C2FB4BD37D', '<p>下列描述正确的是(&nbsp;) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('49C4E4FD37384A2B97E1F02D22D0E930', '<p>关于jar包的使用描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('49CA866471104062BF3BAECB782992AF', '<p style=\"margin-left: 40px;\">给定Java代码如下所示，则编译运行后，输出结果是( ) ----- 单选<br>class Parent {<br></p><p style=\"margin-left: 80px;\">abstract int money= 5000;<br></p><p style=\"margin-left: 80px;\">public void count() {<br>&nbsp; &nbsp; System.out.println(10%3);<br>}<br></p><p style=\"margin-left: 40px;\">}<br>public class Child extends Parent{<br></p><p style=\"margin-left: 80px;\">int money= 10000;<br>&nbsp; <br></p><p style=\"margin-left: 80px;\">public void count() {<br>&nbsp; &nbsp; <br></p><p style=\"margin-left: 120px;\">System.out.println(10/3);<br>&nbsp; <br></p><p style=\"margin-left: 80px;\">}<br>&nbsp; public static void main(String args[]) {<br>&nbsp; &nbsp; <br></p><p style=\"margin-left: 120px;\">&nbsp; Parent p = new Child();<br>&nbsp;&nbsp; <br></p><p style=\"margin-left: 120px;\">&nbsp; p.count();<br>&nbsp; <br></p><p style=\"margin-left: 80px;\">}<br></p><p style=\"margin-left: 40px;\">}<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('4A2B28406C684288B1159D4EA26BE87F', '<p>可以用来操作目录的类是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('4A82737752DE483AA349A1C8F69AF539', '<p>以下说法错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('4AA86A7960B84562BE0A1F96D081064C', '<p>关于设计模式说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('4B4C72449AEA4C26B147B90D9D21F282', '<p>下列哪个是接口( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('4B8EE8199AA543C8A168C7D7E14ED783', '<p>下列说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('4BD5FB6CCBF2416BB66C09067046831D', '<p>补全下列代码( ) ----- 单选<br>把数组中的数据按照指定个格式拼接成一个字符串,最终结果为\"[1, 2, 3]\"<br>&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int[] arr = {1,2,3};<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;String s = \"[\";&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for (int i = 0; i&lt;arr.length; i++) {&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(i == ______) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;s = s + arr[i] + _____;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}else {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;s = s + arr[i] + _____;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}</p><p>&nbsp;&nbsp; &nbsp;}<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('4BE2556B98B244B7B8B91F7EDEDE8D17', '<p>下面代码第几行有误( ) ----- 单选<br>&nbsp; &nbsp; public static void main(String[] args) {<br>① &nbsp; &nbsp; int num = 100;<br>② &nbsp; &nbsp; if(num &gt; 10)<br>③ &nbsp; &nbsp; &nbsp; int x = 200;<br>④ &nbsp; &nbsp; System.out.println(\"进入if结构\");<br></p><p>&nbsp; &nbsp; }<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('4C2A73111D6E416EAB9047FF3051521E', '<p>下面几个名词的意思解释正确的是( ) ----- 多选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('4C654212C96740DAA48625D784C27DF3', '<p>将十进制数100转成二进制数用哪个方法( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('4CEED7721F1E403CAEDC40CA76136CD1', '<p>关于LinkedList的说法错误的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('4E6F877880184D5998E9581F020AB5F7', '<p>给定java代码，如下：</p>\r\n\r\n<p style=\"margin-left:21.0pt\">public byte count(byte b1, byte b2){</p>\r\n\r\n<p style=\"margin-left:21.0pt\">&nbsp;&nbsp;&nbsp; return ____;</p>\r\n\r\n<p style=\"margin-left:21.0pt\">}</p>\r\n\r\n<p>要使这段代码能够编译成功，横线处可以填入( ) ----- 单选</p>\r\n', 'D62DE994CF4347A4A943CF432841F978', '492723131C4844B09E6C78F0DD81DD7A', 'BB3AF3A0FC2143DF9E4C8D5AAE6B6D3C', '151BBFDF7E204E5EBFFAE8149E2217FA', '', '', 'A', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '1', '2016-01-05 00:11:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('4E965A2AACDB4C5DBC3B366338FC4F95', '<p>以下说法正确的是( ) ----- 多选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('4EEAF542C47F4630921BEB3D3DF56CA8', '<p>下列关于封装的说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('4FCCEBA8910343FE9C3EB81A472B76C3', '<p>关于装饰设计模式的开发步骤说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('50B161119C2040C4A4ED267103582F2A', '<p>下列进制转换错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('5110A7A94F6C4F7A9FC8E8013D6E7B30', '<p>下列说法正确的是(&nbsp;) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('5163DBDAA61D403FA64CAADC30589FC2', '<p>下列哪个不是合法的标识符(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('51ABBF707F47415C82F43F64DDC49AF2', '<p>下列关于List中的方法描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('523FBB764ED8414C816C9C437824DFC3', '<p>关于Eclipse的快捷键描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('524AD33A76AA4111AD4DE86132E49DCA', '<p>下面关于Java语言跨平台说法错误的是( ) ----- 单选</p>\r\n', '2EDE1EF41F6944EBB1AE55E7ADC72DBA', 'F4BE3FD7E9EA4C319398AC1E3F78E529', 'FA0A534BEB2844E896D96CA64C1BAEFE', '539E0C08C0844EEC9E9361ABA224C4BD', '', '', 'C', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '1', '2016-01-05 10:46:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('525B7C54E37D46EAA896B2EDE0BBDD43', '<p>关于Math.PI说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('52BD95F3B56347EE99DE157900D2128F', '<p>API中StringBuffer的构造方法有几个( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('52CCF2D7B39D49A4B3DE9F4BC984AD46', '<p>SequenceInputStream是哪个包下的类( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('52F74D03957B4E4399335353D3E7C168', '<p>关于自动装箱,自动拆箱描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('53972A8A8B14458C8341799FFA6FD180', '<p>下面关于类的设计思路描述错误的是( ) ----- 单选<br></p><p>​</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('53B4AD107B914B41ACCF48E9D2BC2FA9', '<p>JDK1.7之后，switch语句后括号里的表达式可以是以下哪种类型( ) ----- 多选</p>\r\n', '9114722B716940F2BB97F6E0A1FBC7C3', '8A4257E9BCD047C698616B499CC74ADE', '72499636559A4C8EA89967FA26013C82', '9E7D402EDACC46A9A03C27A1E2B522D1', '', '', 'A, B, D', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '1', '2016-01-05 10:57:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('53FFB5CEF5B74A0AAAC32872249A1EFC', '<p>下列关于int[][] arr = int[3][3]的说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('5408AD8EEC0946C49B68D68093806F21', '<p style=\"margin-left: 40px;\">运行以下代码的结果是( ) ----- 单选</p><p style=\"margin-left: 40px;\">TreeSet&lt;String&gt;&nbsp;ts=new&nbsp;TreeSet&lt;&gt;();</p><p style=\"margin-left: 40px;\">ts.add(“abc”);</p><p style=\"margin-left: 80px;\">ts.add(“def”);</p><p style=\"margin-left: 80px;\">ts.add(“abc”);</p><p style=\"margin-left: 80px;\">ts.add(“cde”);</p><p style=\"margin-left: 80px;\">for(Character&nbsp;c:ts){</p><p style=\"margin-left: 80px;\">System.out.println(c);</p><p style=\"margin-left: 80px;\">}</p><p style=\"margin-left: 40px;\"><br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('542E4E11A78E42C4B90361B6A797B712', '<p>Java中如何创建TCP客户端对象( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '86CD29E675474B1F922662BF9D093AF8', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('5465ACE300EF4C29920B87FE41EF9082', '<p>以下说法错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('547D0BCFEA684F93847AD81A8F6FA523', '<p>下列说法错误的是(&nbsp;) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('54A8D0C2268A4968AE8DEB65F03C3009', '<p>下面关于HashMap和Hashtable的区别，说法正确的是( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('54EE8161EB9D4BE4B957C6893CA832C4', '<p>下列程序的输出结果是( ) ----- 单选<br>&nbsp;&nbsp; &nbsp;class Demo {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;publicstaticvoid main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;String s1 = \"abc\";<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;String s2 = \"abc\";<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(s1 == s2); &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(s1.equals(s2)); &nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;}<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('54EFE16BBF6641AA8BA77FC97085368F', '<p>如何自定义一个异常类( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('5594D4A74E104DF689D44CF630F808AD', '<p>以下描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('55B079B9F7D04073886498471192E889', '<p>以下说法描述错误的是(&nbsp;) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('577A0399B4CE42D08044BB0726034354', '<p>String类中的getBytes()方法的作用是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('57854E20FA3D475EABD579CBB09CCFEA', '<p>实现下列哪个接口，可以启用序列化功能( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('5804B07031A8461DA0E59F3CB518D8D5', '<p>选项( &nbsp; )可以在main方法调用这个方法&nbsp;----- 多选<br></p><p style=\"margin-left: 40px;\">class Demo {<br></p><p style=\"margin-left: 80px;\">public void method(Demo d){<br></p><p style=\"margin-left: 120px;\"><span style=\"line-height: 1.6;\">System.out.println(\"调用我了\")</span>​;<span style=\"line-height: 1.6;\"></span><br></p><p style=\"margin-left: 80px;\">}<br></p><p style=\"margin-left: 40px;\">}<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('581EF8E195424FE98A00D3F5CA044413', '<p>Math.random()说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('5895335F73064D669D62BB222B4E288B', '<p>字节输入流的抽象基类是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('58F85976654D4BBA9A70FD3B3AB6F5B7', '<p>以下选项不属于父类的别称的是(&nbsp;) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '2', '4', '0', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('59247DE99BC4484284F0FE64E35FE98A', '<p>下面if语句改写为三元运算正确的一项是( ) ----- 单选<br>int a = 4;<br>int b = 9;<br>int c;<br>if(a &gt; b){<br>&nbsp; c = a;<br>}else{<br>&nbsp; c = b;<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('597ABAF3641F4B9C9937466F38C1FEA3', '<p>关于给成员变量赋值有两种方式，分别是构造方法和set方法，关于它们的区别下列说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('59DC01D2DDD7479DAAA00AF27A2A9201', '<p>下列不属于约定俗成的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('59F7BF9A637B45ECABCE864AD03E1C10', '<p>关于Eclipse查看Java中参数传递说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('5A31B84F00D24A6D9D10F5AA65D3A032', '<p>IO流之所以叫做IO流是因为I和O的含义分别是( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('5ACAC47FBE344D889A5C6E2C016B1153', '<p>下列程序的输出结果是( ) ----- 单选<br>&nbsp;&nbsp; &nbsp;class Demo {</p><p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;publicstaticvoid main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; String s1 = new String(\"abc\");&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; String s2 = \"abc\";<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(s1 == s2);&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(s1.equals(s2));<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}</p><p>&nbsp;&nbsp; &nbsp;}<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('5AE300BAB3ED4B3497D889153F31478B', '<p>下面关于FileInputStream的read()方法错误的是( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('5B39CC05EBBE4AEFA53F69D79AC31BA8', '<p>下列选项中哪个不属于I/O流( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('5C059B1C4AC14AFBB2362D864314C2E6', '<p>关于Eclipse的快捷键描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('5C0EAF5A51694E2FA4ABC35E4A865191', '<p>执行下面代码,i的输出结果是( ) ----- 单选<br></p><p>&nbsp;&nbsp; <strong>public</strong> <strong>static</strong> <strong>void</strong> main(String[] args) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>int</strong> i = 3;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>for</strong>(<strong>int</strong> j = 0; j &lt; 5;j++){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i = i++;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.<strong><em>out</em></strong>.println(i);<br></p><p>}</p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('5C15B35EA1F44D5582CCD8EF298A7799', '<p>关于帮助文档说法错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('5C193B5B31B3474C9B3DF2399A0DC00C', '<p>下面哪种类型的文件可以在java虚拟机中运行( ) ----- 单选</p>\r\n', '88B1CE822C4548F39F5E7B33C96A7A75', 'EB0B7378F65A4123A894D411B368199D', '7FAFEC2ED1C74500947DFBB7C804B691', '31EFFA8754404A62BB3FC63DE86D1350', '', '', 'D', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '1', '2016-01-05 10:51:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('5C1B8766AA0849039A4E25E64A8B5BD9', '<p>局部代码块的作用是：(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('5C58ACF8E5AE4C2AB1E30FA2098ACC32', '<p>用IO流拷贝文件的代码中加入异常处理下列说法正确的是( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('5C80F57C23D2411286CC72CABC31BF67', '<p>流程语句分类不包含哪一种( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('5C8A4D37B9614A8F8038BC73405DBB04', '<p>关于Eclipse的功能描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('5C991C62665541F3B187E735E201A4EF', '<p>下面说法正确的是( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('5D8392BF6E524007B98D281CE9827EA8', '<p>以下由do-while语句构成的循环执行的次数是( ) ----- 单选<br></p><p style=\"margin-left:21.0pt\">int m = 8;</p><p>&nbsp; &nbsp; do{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;++m;</p><p style=\"margin-left:18.0pt\">}while (m &lt; 8);</p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('5DD25F2218824DC0A2E4E7A19AE9EF2D', '<p>以下不属于计算机语言的选项(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('5DE260DDA01C460499AD950A91F41948', '<p>Java中，关于栈的说法正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('5EE5CE663C5D4F4B97ADE513BE3D01E6', '<p>File类中定义了哪个方法来创建多级目录( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6045FECE4B5A45C9AC20DA97721F9B8D', '<p>下列关于get /set方法说明正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6069A2B7B4654ED2985E41F0E40DC1AE', '<p>下列关于编写java程序说法正确的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('60A51680B62D4AC88B2DB8D2FD22F207', '<p>以下for循环执行的次数( ) ----- 单选<br></p><p>for(int x=0;(x==0)&amp;(x&gt;4);x++);<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('60AC22B4D0DA47718930B4F98369C472', '<p>下列对于软件开发解释正确的选项是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('60E4ECA445284A43B1F902BE17E8DF56', '<p><span style=\"font-size:8px;\">以下哪个最准确描述synchronized关键字( ) ----- 单选</span></p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('611C81A51D714D5DA29ED4F5F25FEE60', '<p>看代码片段给出运行结果( ) ----- 单选<br>public static void main(String []args){<br>&nbsp; int a = 10 ;<br>&nbsp; int b = (a++)+(++a)+(a*10);<br>&nbsp; System.out.println(b);<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6127974AD683482896FE2C196127A91A', '<p>下列关于listIterator（）说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6194C4C981614D31BB6573E45C2AFCFC', '<p>下面对static的描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('61D46B50A90E46DF8BA35FCC5F8F2015', '<p>下列关于变量作用域描述正确的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('620E82A73616435F840F499748915126', '<p>下面哪个循环可以打印出正三角形（方向朝上）( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('62B73B2E710C427D8CC060B7B937C9DA', '<p>以下for循环的执行次数是( ) ----- 单选<br></p><p>for(int x=0;(x==0)&amp;(x&lt;4);x++);</p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('63008372A67D44D8894A04AAE9211AE5', '<p>关于Map集合的描述，以下说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('631BE813DDEC40E6899D2779FA29F2C6', '<p>配置classpath的目的(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('637B02298C46445AB08CD99A898ED2E4', '<p>将集合转换成数组之后不可以对数组进行下列哪个操作( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('63CD6355C720440587CD2CD2A10C85C4', '<p>如何在Editplus工具里配置javac和java快捷方式(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('64757B20D9704DE8863EB18005700F1E', '<p>在main方法中定义int[] arr = new int[3],下列关于它的说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('65135771ACA245C1969ED16F8AF18C3C', '<p style=\"margin-left: 40px;\">下列代码中，说法错误的是( ) ----- 单选</p><p style=\"margin-left: 40px;\">ArrayList&lt;String&gt;&nbsp;list&nbsp;=&nbsp;new&nbsp;ArrayList&lt;&gt;();</p><p style=\"margin-left: 80px;\">list.add(\"a\");</p><p style=\"margin-left: 80px;\">list.add(\"b\");</p><p style=\"margin-left: 80px;\">list.add(\"c\");</p><p style=\"margin-left: 80px;\">list.add(\"d\");</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('652C0A56A0BB40B493178CDD2B038717', '<p>如果父类中没有无参构造函数，那么子类(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6564034877DC4650AFCD54F1B2AB5780', '<p>Throwable中，获取异常消息是以下哪个方法( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('65A071C9BBFD4961A61AEE7FFBDA7E6F', '<p>下列关于单例模式的说法正确的是( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, 'C2848E4C98F7463680B35F88166CEC3F', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('65B39DA3D5B34693880C941359DDCB3A', '<p>下列程序的输出结果是( ) ----- 单选<br>&nbsp;&nbsp; &nbsp;public class Demo4_Equals {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;System.out.println(new Object()==new Object());<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;System.out.println(new Object().equals(new Object()));<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;}<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('66128BDD3DE34807B8C62BBD2DFF0850', '<p>分析如下Java代码，如果想在控制台上输出“B类的test()方法”，则在主函数应填入( ) ----- 多选<br>class A {<br>&nbsp; &nbsp; public void test() {<br>&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(\"A类的test()方法\");<br>&nbsp; &nbsp; }<br>}<br>class B extends A {<br>&nbsp; &nbsp; public void test() {<br>&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(\"B类的test()方法\");<br>&nbsp; &nbsp; }<br>&nbsp; &nbsp; public static void main(String args[]) {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br>&nbsp; &nbsp; }<br>}<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('666B224A81A14522A8B34757E05F7E7E', '<p>Map集合中，获取所有键的集合，是以下哪个方法( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('67496E8CD2A4412C8A9DA508ED2DA2F2', '<p>学生类中一般定义有构造方法和set方法，关于这两个方法描述错误的是( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('676B826E86E54EE8B1DDDC8FD190BC74', '<p>请说出下列程序的运行结果( ) ----- 单选<br>class Demo {<br>&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Person p = new SuperMan();<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.print(p.name);<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;p.谈生意();<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;SuperMan sm = (SuperMan)p;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;sm.fly();<br>&nbsp;&nbsp; &nbsp;}<br>}<br>class Person {<br>&nbsp;&nbsp; &nbsp;String name = \"John\";<br>&nbsp;&nbsp; &nbsp;public void 谈生意() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.print(\"谈生意，\");<br>&nbsp;&nbsp; &nbsp;}<br>}<br>class SuperMan extends Person {<br>&nbsp;&nbsp; &nbsp;String name = \"superMan\";<br>&nbsp;&nbsp; &nbsp;public void 谈生意() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.print(\"谈几个亿的大单子，\");<br>&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;public void fly() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.print(\"飞出去救人。\");<br>&nbsp;&nbsp; &nbsp;}<br>}<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('677C00191B214420996DCA46B667519B', '<p>下列关于 jdk和jre的描述错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('678167F74A8242F682DAD56C6ECA1108', '<p>LinkedHashSet类addAll(List&nbsp;list)方法描述正确的有( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6801C0F41E3C422A8D4E054B17ED5250', '<p>下面对if语句描述有误的一项是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('685DFB0453F440FEBE66AC2422839BE6', '<p style=\"margin-left: 40px;\">观察代码，说法正确的是( ) ----- 单选</p><p style=\"margin-left: 40px;\">ArrayList&lt;&nbsp;Array&lt;String&gt;&gt;&nbsp;al&nbsp;=&nbsp;new&nbsp;ArrayList&lt;&nbsp;Array&lt;String&gt;&gt;();</p><p style=\"margin-left: 40px;\">ArrayList&nbsp;al2&nbsp;=&nbsp;new&nbsp;ArrayList&lt;String&gt;();</p><p style=\"margin-left: 40px;\">al2.add(“a”);</p><p style=\"margin-left: 40px;\">al2.add(“b”);</p><p style=\"margin-left: 40px;\">al2.add(“c”);</p><p style=\"margin-left: 40px;\">ArrayList&nbsp;al3&nbsp;=&nbsp;new&nbsp;ArrayList&lt;String&gt;();</p><p style=\"margin-left: 40px;\">al3.add(“a”);</p><p style=\"margin-left: 40px;\">al3.add(“b”);</p><p style=\"margin-left: 40px;\">al3.add(“c”);</p><p style=\"margin-left: 40px;\">al.add(al2);</p><p style=\"margin-left: 40px;\">al.add(al3);</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6862677813E9439F9BB235FE0C983BBF', '<p>下列说法中，错误的一项是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('68867F39CC7F46FA8D1316B7F3B811E0', '<p>在java程序中，下列关于线程的说法错误的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('68B2BC19D7FB4B349E744A7044540A0A', '<p>以下哪方法可以删除StringBuffer对象的指定字符( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('68C9BD499C284A208690688ABBDB0226', '<p>下列关于集合的概述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('68D5B554ABF84DBFB8D3E32E8CC5B3BD', '<p>以下关于方法重写和重载说法错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('68F041CDD39E4CA8B37588E30C716131', '<p>final关键字修饰局部变量说法正确的是( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('69279EA71E7E42A188385BBBF7C2E2DF', '<p>TreeSet存储元素时，调用add方法添加元素的底层原理描述正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('694054E43A514284AD1CE42B86917259', '<p>能指定字符编码的I/O流是( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('69B956F2AF6A4DE9AFD7EF106E672FC0', '<p>关于==和equals方法描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('69F4B6F8166F4BFAA865CD6E16216B2C', '<p>以下代码在运行时( ) ----- 单选<br>final class Person{<br></p><p style=\"margin-left: 40px;\">String name;<br></p><p style=\"margin-left: 40px;\">int age;<br></p><p>}<br></p><p>class Student extends Person{<br>}</p><p>class Test{<br></p><p style=\"margin-left: 40px;\">public static void main(String[] args){<br></p><p style=\"margin-left: 80px;\">Student s=new Student();<br></p><p style=\"margin-left: 80px;\">s. name=”张三”;<br></p><p style=\"margin-left: 80px;\">System.out.println(s.name);<br></p><p style=\"margin-left: 40px;\">}<br></p><p>}<br><br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6A287735F4D844A187A6A62A63377CBB', '<p>看程序，说结果(&nbsp;) ----- 单选<br>public interface Face{ &nbsp;&nbsp;<br>&nbsp;&nbsp; &nbsp;int counter = 40; &nbsp; &nbsp;&nbsp;<br>} &nbsp; &nbsp; &nbsp;&nbsp;<br>public class Test implements Face{ &nbsp;&nbsp;<br>&nbsp;&nbsp; &nbsp;public static void main(String[]args){&nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;System.out.println(++counter); &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br>&nbsp;&nbsp; &nbsp;} &nbsp; &nbsp;&nbsp;<br>}<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6A4CEEBF9CC94157B1ED6D436ECC44AB', '<p>关于数组下列说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6A4FE26E975A4078BE9413A5335FF96E', '<p>下列描述Vector集合特点正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6AA23DF2F0914A0394513EB052C500A7', '<p>需求:手机类,属性:品牌(brand)价格(price)<br></p><p>行为:打电话(call),发信息(sendMessage)玩游戏(playGame)<br></p><p>根据需求下列关于手机类的说法正确的是(&nbsp;) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6AA2F10795F34A4BAA87AF5B5D33982A', '<p>String类中的valueOf方法的作用是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6AC0DEC2F5444E62B028483DE5F98584', '<p>请说出下列程序的执行结果(&nbsp;) ----- 单选</p><p>private&nbsp;class&nbsp;Demo&nbsp;{</p><p>public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{</p><p style=\"margin-left: 40px;\">int&nbsp;i&nbsp;=&nbsp;10;</p><p style=\"margin-left: 40px;\">System.out.println(\"i&nbsp;=&nbsp;\"&nbsp;+&nbsp;(++i));</p><p style=\"margin-left: 40px;\">}</p><p>}</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6AECA4D395874C1DA874D0C88C1A7AE1', '<p>String类中trim()方法作用( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6BA9A5DC09074B8088BC24921E038050', '<p>TreeSet存储自定义对象的时候，所实现的两种排序区别是什么( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6BD060F37CA8461E8BADCCBB01F5E5EE', '<p>下列关于成员变量和局部变量的说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6BF856C9C89F45229B4F4F1EAC4B4FEA', '<p>使用TreeSet的无参构造创建集合对象存储元素时，该元素必须( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6CBE3C70D0DA482CBE77BB3375CDBEDA', '<p>以下选项可以正确创建一个长度为3的二维数组的是( ) ----- 单选</p>\r\n', 'B0A79A7D977F4DAAB4AAE6F39CBB7290', '725365A2B28D408F8E99E3468C17BAAC', '4E252F6DDD8844FDA2927DEC99BF977A', '3E00744E87E646D78B0A364C88B86A86', '', '', 'B', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '1', '2016-01-05 10:31:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6CD4C3C27C6D4C5397750224CBD9E238', '<p>按要求补全下列代码( ) ----- 单选<br>统计大串中小串出现的次数<br>&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;String max&nbsp;<br>&nbsp;&nbsp; &nbsp;= \"woaiheima,heimabutongyubaima,wulunheimahaishibaima,zhaodaogongzuojiushihaoma\";<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;String min = \"heima\";<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int count = 0;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int index = 0;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;while((index = max.indexOf(____)) != -1) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;count++;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;max = max.substring(_______);<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;}<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6D28595A62734E56AC3C6B291A789DD0', '<p>将集合转换成数组的方法是哪个( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6D8FAA56FF44400A92083E32C1EA713A', '<p>关于abstract不能和哪些关键字共用( ) ----- 多选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6DA75C307E244075B477E5FECB9D4952', '<p>若要创建一个新的含有父目录的目录，应该使用下列哪一个类的实例( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6DB438E43B7D4B4493A4DF8BC65A09E0', '<p>下列关于ArrayList和Vector说法错误的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6DCE6229ED1C4EE2A7E672038B81E499', '<p>关于jdk描述错误的是(&nbsp;) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6DDC9DBD20474961BA8433E665F28363', '<p>在Java接口中，下列选项中属于有效的方法声明是(&nbsp;) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6E1A4BB1FD7A4AB98612C6AD883EC55A', '<p>下列关于iterator()描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6E42BEF6CEFE44948D4E7E5A6D3BC0CB', '<p>根据下面代码得出正确的结果( ) ----- 单选<br></p><p>public static void main(String[] args) {<br>&nbsp; int &nbsp;i = &nbsp;add(123);&nbsp;&nbsp; &nbsp;<br>&nbsp; System.out.println(getString(i));<br>}&nbsp;&nbsp; &nbsp;<br>public static int add(int x) {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp; int x = x+x;<br>&nbsp; return &nbsp;x;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>}<br>public static String getString(int x){<br>&nbsp; String s = x +”123”;<br>&nbsp; retrun s;<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6E6B8269595945248D9A567970A1F006', '<p>下列关于多线程并行和并发的说法不正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6E9B219ABDCB45929B5B2DA56C3B6359', '<p>关于包的说法错误的是(&nbsp;) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6F1ED2CABE3E49FC9A30BEA2AC003EE7', '<p>下列定义二维数组的格式正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6F75076BEEA64ABBA891BF6E26843693', '<p>下列描述错误的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('6FC6703501074930A7659F20DE08FEF7', '<p>返回指定字符在此字符串中第一次出现的索引的方法是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('705874FDB44C420A8231A237E1DC37B2', '<p>下列语句序列执行后，i的值是( ) ----- 单选<br></p><p>int i = 10;<br></p><p>do {<br></p><p>&nbsp; i /= 2;<br></p><p>} while (i-- &gt; 1);</p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('70960B5A0F474ADBA008B51B72CB209B', '<p>关于Properties类中的方法描述正确的是( ) ----- 多选</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('70A6A9BEB41C48D0A1E316793F8C6301', '<p>当方法遇到异常(编译时异常)又不知如何处理时，下列说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('70EFE4CF216445AA99F14BB8FB7BF79C', '<p style=\"margin-left: 40px;\">观察下面代码，说法不正确的是( ) ----- 单选</p><p style=\"margin-left: 40px;\">public&nbsp;&lt;T&gt;&nbsp;void&nbsp;show(T&nbsp;t)&nbsp;{</p><p style=\"margin-left: 40px;\">System.out.println(t);</p><p style=\"margin-left: 80px;\">}</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7107FBB15B1342D18A4C100AD383FDE4', '<p>在Eclipse下如何做子类才能生成父类未实现的方法( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('717ED7B09938469192862B04A021AD62', '<p>下列关于泛型的由来说法不正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('71B1BD5CC78744DB82CE4AC38EF7D6AF', '<p>下列程序的运行结果是( ) ----- 单选<br>&nbsp;&nbsp; &nbsp;class Student {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;private String sno;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;private char gender;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public Student(char gender) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;super();<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;this.gender = gender;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}</p><p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public String getSno() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return sno;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}</p><p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public void setSno(String sno) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;this.sno = sno;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}</p><p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public char getGender() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return gender;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}</p><p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public void setGender(char gender) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;this.gender = gender;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@Override<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public String toString() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return \"Student [sno=\" + sno + \", gender=\" + gender + \"]\";<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;&nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public String toString(Object obj) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return \"Student [sno=\" + sno + \", gender=\" + gender + \"]\";<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;}</p><p>&nbsp;&nbsp; &nbsp;class Demo {</p><p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Object obj = new Student(\'男\');<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(obj.toString());<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}</p><p>&nbsp;&nbsp; &nbsp;}<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('723775BD54D8497D88F659B14BBB32F3', '<p>下列描述基本数据类型错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('723FBF5D4AFE456CA69CA953ED84DDEE', '<p>补充代码完成二维数组求和功能的是( ) ----- 单选<br></p><p>int[][] arr = {{22,66,44},{77,33,88},{25,45,65},{11,66,99}};<br>int sum = 0; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br>for (int i = 0;i &lt; arr.length ;i++ ) { &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;for (int j = 0;j &lt; arr[i].length ;j++ ) { &nbsp;<br>&nbsp;&nbsp; &nbsp; &nbsp;补充代码 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;}<br>}<br></p><p>System.out.println(sum);<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('72B03FEFF96D49CCA08A0B1A8502394C', '<p>下列关键字能和try一起使用的有( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('73047572C7644AEB8FC9503F8E65DCA9', '<p>在HashSet存储代码的过程中，如果将hashCode方法的返回值写死，会怎么样( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('731403B23CAD463E91A5FB776C1FAB55', '<p>下列关于计算机对数据存储和运算的最小单位是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('73175E9E137A4486BDB17BAA2BE0C394', '<p>关于位运算说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('73EA9A4A062D4C5991A587536E982FA8', '<p>StringBuffer字符串缓冲区的初始容量是多少个字符( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('73F542C499F74E68831C486654B98B21', '<p>关于Arrays工具类中的binarySearch(int[] a,int key)方法描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7406034D5EE64C8FB1E2F7AAB8330479', '<p>下列对于变量正确的描述是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7432E8CC7F344DED9CB52A709EAEE68C', '<p>下面结论中错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('747AF21CDC7541C98292D04A6AD6E15A', '<p>根据下面代码,选择正确的输出结果( ) ----- 单选<br></p><p>public static void main(String[] args) {<br>&nbsp; int age = 18;<br>&nbsp; if(age &gt;= 17){<br>&nbsp; &nbsp; System.out.println(\"符合条件,已经进入if流程体\");<br>&nbsp; }<br>&nbsp; System.out.println(\"结束\");<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('748BEB1A7CC144BA88388F9AE6534C6A', '<p>有如下java程序，要让控制台输出“Hello”，请补齐代码(&nbsp;) ----- 单选<br></p><p>class Demo1_InnerClass {<br>&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;<br></p><p style=\"margin-left: 40px;\">&nbsp; &nbsp; //补齐代码 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;oi.method();</p><p>&nbsp;&nbsp; &nbsp;}<br>}<br>class Outer {<br>&nbsp;&nbsp; &nbsp;class Inner {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public void method() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(\"Hello\");<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;}<br>}</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('74AB41356CA14C88BFFE6D2188ED6E37', '<p>TreeMap通过比较器接口，保证元素唯一性，必须重写哪个方法( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('74FDBB5D7BDD414AA3B230749EB17314', '<p>以下由 for 语句构成的循环执行的次数是( ) ----- 单选<br></p><p>for(int i = 0; true; i++){}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7589802B2CA34372A08D08979F875DC5', '<p>下列哪个选项不属于Java程序加载类的步骤( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, 'C2848E4C98F7463680B35F88166CEC3F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('75906B56A6B8419BBF1E9248577BF821', '<p>下列关于常量说法正确的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('75E4611404A84B718E5FDA55092FF074', '<p>下列关于Object类的toString方法返回字符串形式正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('75F9C09FBFCF4CC1B636D38EBD5E377C', '<p>看程序说结果( ) ----- 单选<br>class A {<br>&nbsp;&nbsp; &nbsp;public static void method() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(\"A method\");<br>&nbsp;&nbsp; &nbsp;}<br>}<br>class B extends A {<br>&nbsp;&nbsp; &nbsp;public static void method() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(\"B method\");<br>&nbsp;&nbsp; &nbsp;}<br>}<br>class Demo {<br>&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;A a = new B();<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;a.method();<br>&nbsp;&nbsp; &nbsp;}<br>}<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('75FDCF83B5864E2C94E3A434D9BE535C', '<p>ObjectInputStream类中的哪个方法可以从文件读取一个对象( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('760B0E3F38214009B32C614241582927', '<p>多态的前提是什么( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('76408DB7AA0D4B369FFEAB1BB73AFA4E', '<p>以下类中，哪些不是线程安全的( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7685C4AD4A094391A34D3511AE072F58', '<p>java.io包中提供的用于按文件名筛选的接口是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('76B14F01291D4AE09A9A4927AD4F0E1D', '<p>下列不属于java语言版本的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('76B5E33B8CAE4BFF9AAB27B328F99122', '<p>关于Eclipse调试的描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('778CCB9CFF80475699111D9E6EA4DED4', '<p>什么情况下使用字符流( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('77EA5743DA954BF8A0F5901E7AE17F65', '<p>TreeSet实现排序的方式有( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('78302AFDADD148AAB10C3089529E8BB7', '<p>Java中类的继承特点有哪些(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7832171B68494338971BED67B760058E', '<p>判断一个文件的大小我们可以使用哪个方法( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('783E2928317C44178864F84BE2776A51', '<p>以下代码1 2的位置运行结果是( ) ----- 单选<br></p><p style=\"margin-left: 40px;\">Integer i7 = 128;<br>Integer i8 = 128;<br>System.out.println(i7 == i8);&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;1<br>System.out.println(i7.equals(i8));&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;2<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('784D14DF68E14649BE511EB95E19A470', '<p>下列程序的输出结果是( ) ----- 单选<br></p><p style=\"margin-left: 40px;\"> class Demo {<br></p><p style=\"margin-left: 80px;\">publicstaticvoid main(String[] args) {<br></p><p style=\"margin-left: 120px;\">System.out.println(\"abcd\".substring(1,3));<br></p><p style=\"margin-left: 80px;\">}<br></p><p style=\"margin-left: 40px;\">}<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('785A48B480A843E38BE9E375C5783B10', '<p>下列关于迭代器的描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('78690A146BD14FEF922F73FFB7F2B4DE', '<p>下面关于Java中异常处理try块的说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('786FF8D3E04D43B08B08F3810BCE9E9A', '<p>下面表示数据输入输出流的是哪两个( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('78BFA4A094004746B07D8F7ED682B30C', '<p>以下可以替换StringBuffer对象指定区间字符的方法是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('792F6FADFBA249779275F57A33C37FAB', '<p>有如下java程序，要让控制台输出“method”，请补齐代码(&nbsp;) ----- 单选</p><p>class&nbsp;Demo1_InnerClass&nbsp;{</p><p style=\"margin-left: 40px;\">public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{</p><p style=\"margin-left: 80px;\">&nbsp;//补齐代码&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 80px;\">oi.method();</p><p style=\"margin-left: 40px;\">}</p><p>}</p><p><br></p><p>class&nbsp;Outer&nbsp;{</p><p style=\"margin-left: 40px;\">static&nbsp;class&nbsp;Inner&nbsp;{</p><p style=\"margin-left: 80px;\">public&nbsp;void&nbsp;method()&nbsp;{</p><p style=\"margin-left: 120px;\">System.out.println(\"method\");</p><p style=\"margin-left: 80px;\">}</p><p style=\"margin-left: 40px;\">}</p><p>}</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('79500A1D93AD46368158B723D5D74D5F', '<p>往Map集合中添加元素，可以通过以下那个方法( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7983EFF7EAB3486AA0439DE0C242C43A', '<p>预定义字符&nbsp;\\w 代表什么( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('79B602AAD637488BAFB1D62CBA7CA463', '<p>输入 11、18两个数，判断两个数中相对较大的那个程序输出的结果是( ) ----- 单选<br></p><p>class Test1_Method {<br></p><p>&nbsp; public static void main(String[] args) {<br></p><p>&nbsp; &nbsp; Scanner sc = new Scanner(System.in);<br></p><p>&nbsp; &nbsp; int x = sc.nextInt();<br></p><p>&nbsp; &nbsp; int y = sc.nextInt();<br></p><p>&nbsp; &nbsp; int max = getMax(x,y);<br></p><p>&nbsp; &nbsp; System.out.println(max);<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;public static int getMax(int a,int b) {<br>&nbsp; &nbsp;&nbsp;return a &gt; b ? a : b;<br>&nbsp;&nbsp;}<br></p><p>}</p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('79E7F90ACD63403EA18EF9DE987A6104', '<p>下列关于Java I/O中字符输出流描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('79EFB9A028004FD78E0172C1D10E333A', '<p>以下关于TreeSet说法正确的是( ) ----- 多选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7A08FE2B04404496B27C9CBA0CAAC095', '<p>TreeMap通过自然排序保证元素的唯一性，必须重写哪个方法( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7A48391745034D779414787C58D3C0ED', '<p>下列关于Object类中的hashCode方法的描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7AEE9BAED57949AE9023535451C9CD2A', '<p>下列关于this的说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7B7F65CA929448A689C6B5D5CD4FFDF0', '<p>关于类的加载时机说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, 'C2848E4C98F7463680B35F88166CEC3F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7BA35BA1153E474BABD07743349B7666', '<p>下列构造函数格式正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7BE991C876C44E74AAA4E5A61C955A61', '<p>对于增强for循环的说法正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7C1CDDC0805F406D981C6B36FBF433D4', '<p>关于任意进制到十进制转换公式正确的说法是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7C22E6E486064C6481EAC9B3D303C0B5', '<p>不属于循环结构分类的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7C6F9571B707408B906A9BDD1B07BC63', '<p>以下关于join()方法，说法正确的是( ) ----- 单选</p><strong></strong>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7C9DAB2CBC5841A4BA9F98553E894DB4', '<p style=\"margin-left: 40px;\">List中对add(String item, int index)描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7CBA09F92E8243F887A5870A80CC1F46', '<p>在Java接口中定义常量，下面语法正确的是( ) ----- 多选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7CC4B66DB3914722823B6F357800EAC5', '<p>Math.ceil(-12.5)运行结果是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7CECADC2807A4A9393C1F4BA2D5D4C1C', '<p>关于Arrays工具类中的toString(int a)方法描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7CEFF1E7084E45CEAB76349F5B5B1822', '<p style=\"margin-left: 40px;\">下列代码的输出结果是( ) ----- 单选</p><p style=\"margin-left: 80px;\">LinkedList&nbsp;list&nbsp;=&nbsp;new&nbsp;LinkedList();</p><p style=\"margin-left: 80px;\">list.addFirst(\"a\");</p><p style=\"margin-left: 80px;\">list.addFirst(\"b\");</p><p style=\"margin-left: 80px;\">list.addFirst(\"c\");</p><p style=\"margin-left: 80px;\">list.addFirst(\"d\");</p><p style=\"margin-left: 80px;\">list.addLast(\"e\");</p><p style=\"margin-left: 80px;\">System.out.println(list.getFirst());</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7D00EB30F0F64ACEB70B04B9065DFA90', '<p>在jdk1.7的环境下，下面代码编译不能通过的是（下列代码的方法体上都已加throws Exception）( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7D055CB4494043AEA4E9430901957716', '<p>计算机的硬件由哪几大块组成(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7D8545CB8A29471C93117419881D2264', '<p>下面程序执行的结果是( ) ----- 单选</p>\r\n\r\n<p>int x=2,y=3;</p>\r\n\r\n<p>switch(x)&nbsp;{</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; default:</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; y++;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; case 3:</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; y++;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; case 4:</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; y++;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>System.out.println(&quot;y=&quot;+y);</p>\r\n', 'CA6A719DFCD8457EBD8585E9D3CE2F65', '70A7A15B73DB489088F27F3ADCDF4D9C', '5CB72367C3AA4DC3A68E904D166292E4', '86DA1B26BF9A411A830C8E7873F4FFE4', '', '', 'D', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '1', '2016-01-05 11:03:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7D8C36B83A4E4A649927ECFAD783A997', '<p>设以下是应用程序中定义的方法printBinary，若在其main方法中有方法调用语句printBinary(2)，则输出的结果是( ) ----- 单选</p>\r\n\r\n<p>static void printBinary(int i) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.print(i + &quot;的2进制数表示为：\\t&quot;);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int j = 31; j &gt;=0; j--)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(((1 &lt;&lt; j) &amp;&nbsp; i) != 0)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.print(&quot;1&quot;);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.print(&quot;0&quot;);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println();</p>\r\n\r\n<p>&nbsp; }</p>\r\n', 'A322B98AC68D4E38AC195565C8A40180', '58C90EB90253447BB0CF45BED1D02C6A', 'C4814F9288FD468E9DD15A2811E7E499', 'B5FD89596A5D45719772396F154559FE', '', '', 'B', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '1', '2016-01-05 10:32:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7D9D826A9FC2477AAD979030DC8F76D2', '<p>关于LinkedHashSet描述正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7E0BDD89EB604900962EBA838DD41CC3', '<p>静态变量和实例变量有什么共同点说法错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7F26954476384AE180AB99B83770644B', '<p>下面描述String类中equals()方法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7F6C3B9BF0854F5CA036D7F5DE7565C5', '<p>下列关于FileInputStream类的read(byte[] arr)说法正确的是( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7F6F232F51E74EDB9127624A3053E707', '<p>关于可变参数的说法错误的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7FB057108FD84745BCF20A2A114D6872', '<p>“abc”.compareToIgnoreCase(“ABc”)返回值是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('7FDB670A43DE44DC903E2528F9E95D8E', '<p>正则表达式中[0-9]描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8020AD29906C45B9AF3DAB7E5994FD35', '<p>使用反射机制获取一个类的属性，下列关于getField()方法说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, 'C2848E4C98F7463680B35F88166CEC3F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('807293A3E5584E6FAD4E4C5A9C3E9E33', '<p>应用程序的main方法中有以下语句（请参看API文档）<br></p><p style=\"margin-left: 40px;\">Hashtable hashtable=new Hashtable();<br>hashtable.put(\"100\",\"aaa\");<br>hashtable.put(\"200\",\"bbb\");<br>hashtable.put(\"300\",\"ccc\");&nbsp;<br>System.out.println(hashtable.get(\"300\").toString()<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;+ hashtable.get(\"200\").toString()<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ hashtable.get(\"100\").toString());<br></p><p style=\"margin-left: 40px;\">则输出的结果是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('80EC425FA3714F388A1197AF6EABB575', '<p>关于静态导入的说法错误的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('813FEBFE81644A5FAFA2E072C6474F61', '<p>下列描述错误的是(&nbsp;) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('815707A427DB4395910AA176F36D07B3', '<p>下面程序执行的结果是( ) ----- 单选</p>\r\n\r\n<p>boolean b=true;</p>\r\n\r\n<p>if(b=false)&nbsp;<span style=\"line-height:1.6\">{</span></p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; System.out.println(&quot;a&quot;);</p>\r\n\r\n<p>}&nbsp;<span style=\"line-height:1.6\">else if(b)&nbsp;</span><span style=\"line-height:1.6\">{</span></p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; System.out.println(&quot;b&quot;);</p>\r\n\r\n<p>}&nbsp;<span style=\"line-height:1.6\">else if(!b)&nbsp;</span><span style=\"line-height:1.6\">{</span></p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; System.out.println(&quot;c&quot;);</p>\r\n\r\n<p>}&nbsp;<span style=\"line-height:1.6\">else&nbsp;</span><span style=\"line-height:1.6\">{</span></p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; System.out.println(&quot;d&quot;);</p>\r\n\r\n<p>}</p>\r\n', '0299040A4E9647E198A6803645794122', '2944F77439404FF29BD1C99AEDB6B5C2', '3795CC06F603467A92A56F791528A420', 'D2769B8330214E5592FE02F3E1102CE7', '', '', 'C', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '1', '2016-01-05 11:00:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('823179523FAB487E9D13AEC598CC4560', '<p>根据如下代码获取正确的结果( ) ----- 单选<br></p><p>public class ForForDemo5 {<br>&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;boolean b1 = isEquals(10,10);<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(b1);</p><p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;boolean b2 = isEquals(10.5,10.5);<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(b2);<br>&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;public static boolean isEquals(int a,int b) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return a == b;<br>&nbsp;&nbsp; &nbsp;}</p><p>&nbsp;&nbsp; &nbsp;public static boolean isEquals(double a,double b) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return a == b;<br>&nbsp;&nbsp; &nbsp;}<br>}<br><br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8257B99B2060481195BD179F11E876BB', '<p>关于导入工程到Eclipse中的描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('82A6C18C22BC4ABD853B2791C91EEA8C', '<p>下面创建键盘录入对象的方式，正确的有哪些( ) ----- 多选</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('82C3F4B66C7440BC89249CED31DFAED6', '<p>主函数中针对格式的解释错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('82D8B52B82CF44E6AE7EA66A24C6A7F5', '<p>在main方法中定义int[] arr = new int[3]和int arr1 = new int[3],下列说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('82F3B36967DC4361BA036A1EB7EAAFFA', '<p>下列哪种方式可以获取Object对象的类名( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('830CBF1972EB42AC80B957B23A06296B', '<p>判断是否是文件，可以通过那个方法实现( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8359E963825544A9A9FBEC370ACC95B8', '<p>关于Serializable接口下面的说法正确的是( ) ----- 多选</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8366C52BC4454EAB89F2B674A19235C8', '<p>TreeSet存储自定义对象的时候，相关说法正确的是( ) ----- 多选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('84612FE6BD5747EFA99A92FA929E0743', '<p>ServerSocket的监听方法accept()方法的返回值类型是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '86CD29E675474B1F922662BF9D093AF8', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('848C122FCDF54222A12F365187AB580E', '<p>若有循环：<br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>int</strong> x = 5, y = 20;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>do</strong> {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; y -= x;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x += 2;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <strong>while</strong> (x &lt; y);<br></p><p>此循环会执行几次( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('84C4F3C13BCD4BDA90E2017CA9EDD8E2', '<p>下列选项关于集合和数组的区别说法正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('84D76288A25E41189383050ED586A9E8', '<p>可以获取当前日期毫秒值的方法是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('853F4AB89C774AB6917F098E243F5515', '<p>给定java代码，如下，编译运行，结果是( ) ----- 单选</p>\r\n\r\n<p>public static void main(String[] args){</p>\r\n\r\n<p>&nbsp; &nbsp; boolean flag;</p>\r\n\r\n<p>&nbsp; &nbsp; System.out.println(&quot;flag=&quot;+flag);</p>\r\n\r\n<p>}</p>\r\n', 'B9E37BF8828347C2BF809B15264210BB', '98341C4FD8A444E7B2EECF7D126ED5BC', '08B990BC84D64C1FB9B68D0FBCB54026', '35DD8C2EBA7E4E5BA16879174B0599E0', '', '', 'A', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '1', '2016-01-05 00:21:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8548169EABB5482581E0E7670DBE74E9', '<p>下列关于private的说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('85489CF01E1344DF87DC15CA75ECAF89', '<p>下列选项中，通过哪些类的方法可以获取主机名( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '86CD29E675474B1F922662BF9D093AF8', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('85505AFAADB447C28986F3D5809633A3', '<p>下列哪个选项是final修饰的变量正确的初始化方式(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('85AB0EC4D3364DCB891AA4EA2FA3C175', '<p>下列关于进制数据的组成说法错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('86897709AA9E4E049FCD8D8E19EB5706', '<p>下列关于模版方法模式的说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, 'C2848E4C98F7463680B35F88166CEC3F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('86F3841E6C6945C4B90EE3FD5BE6E2F9', '<p>下面说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8716AB4860FF450C82F1877CB38DEC6E', '<p>TreeSet对元素进行自然排序，需要元素自身实现哪个接口( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('881CD969294E430FA746861339B82825', '<p>不属于bin文件夹下的执行文件是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8827C46562E9440BB80871F6406C8135', '<p>下面选项中，程序的默认端口错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '86CD29E675474B1F922662BF9D093AF8', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8876473BE2CE4F08BDFEB8E09451105B', '<p>关于if语句与switch语句的说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('88764B0A8F174F5EA0AC954E7957F85F', '<p>下列关于循环输出arr数组中所有元素的语句正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('88941271C47C4408B48FA4E74607536A', '<p>下述代码编译执行，会产生什么结果( ) ----- 单选</p><p>public&nbsp;class&nbsp;X&nbsp;extends&nbsp;Thread&nbsp;implements&nbsp;Runnable&nbsp;{</p><p style=\"margin-left: 40px;\">public&nbsp;void&nbsp;run()&nbsp;{</p><p style=\"margin-left: 80px;\">System.out.println(\"this&nbsp;is&nbsp;run()\");</p><p style=\"margin-left: 40px;\">}</p><p style=\"margin-left: 40px;\">public&nbsp;static&nbsp;void&nbsp;main(String&nbsp;args[])&nbsp;{</p><p style=\"margin-left: 80px;\">Thread&nbsp;t&nbsp;=&nbsp;new&nbsp;Thread(new&nbsp;X());</p><p style=\"margin-left: 80px;\">t.start();</p><p style=\"margin-left: 40px;\">}</p><p>}</p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('88B48617FD0D4665B7713D52AA670D39', '<p>下列关于学生类的说法错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('89B84A68FCD342BEBA94B9EBCAB18139', '<p>下列关于java关键字说法正确的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('89E2B9BACB054CAB8EF91B0D95A40520', '<p>字节输出流的抽象基类是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8A1BDB49311241FD8A63F194BC433D3F', '<p>以下代码1 2的位置运行结果是( ) ----- 单选<br></p><p style=\"margin-left: 40px;\">Integer i1 = new Integer(97);<br>Integer i2 = new Integer(97);<br>System.out.println(i1 == i2);&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;1&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>System.out.println(i1.equals(i2));&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;2&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>System.out.println(\"-----------\");<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8A3657F552B745508414D17A3C6CC13F', '<p>以下关于比较器说法错误的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8A7E9A9E4E9140F7AF6250B16AA59E89', '<p>使用BufferedReader中的readLine方法读取一行时，读取到的内容是否包含改行的结束标志( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8A8D43DD798849E6A3BEBDA063EEBC25', '<p>如下代码是我们经常写拷贝文件的程序，为什么我们一般都会把数组的大小定义成1024的整数倍呢( ) ----- 单选<br></p><p>FileInputStream fis = new FileInputStream(\"致青春.mp3\");</p><p>FileOutputStream fos = new FileOutputStream(\"copy.mp3\");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>byte[] arr = new byte[1024 * 8];</p><p>int len;</p><p>while((len = fis.read(arr)) != -1) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 40px;\">fos.write(arr,0,len);</p><p>}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>fis.close();</p><p>fos.close();</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8AC88875E657410DB0ED8DFFD648A386', '<p>下面代码能打印出99乘法表的一项是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8AE3D46240074A02B35AD25E2286C158', '<p>下列选项中哪一个是TCP协议编程中会使用到的Socket对象( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '86CD29E675474B1F922662BF9D093AF8', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8BCBC2E1D3294EAA9FF5594E42D3E5C7', '<p>Calendar当中对set()方法描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8C033FDAFFF64DC4991E80BF1DD2E9ED', '<p>下列说法正确的是(&nbsp;) ----- 多选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8C5CAC4A30FF45C4AFE115782F8C0145', '<p style=\"margin-left: 40px;\">看以下代码，在控制台输入”abc”,会发生什么异常( ) ----- 单选</p><p style=\"margin-left: 40px;\">Scanner&nbsp;sc=new&nbsp;Scanner(System.in);</p><p style=\"margin-left: 40px;\">String&nbsp;str=sc.nextLine();</p><p style=\"margin-left: 40px;\">int&nbsp;num=Integer.parseInt(str);</p><p style=\"margin-left: 40px;\">System.out.println(num);<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8C77818A90E64208AE970DEFE35BE7B7', '<p>java语言靠什么实现了跨平台(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8C96C499F57C46CCBF96C27956FAFD7A', '<p>Windows系统下，BufferedReader读取一行时，判断该行是否结束的标志是什么( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8C9AF3AA92FA441B99CD1B37B2A1F7DC', '<p>下列说法不正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8CC03243EAD84A56826C7EFF09FC7A5D', '<p>下面的说法正确的是( ) ----- 多选</p>\r\n', '58E8717BCA6D4A9898CC27525A814304', '33039674310749AC9AA5153D5AD21B1F', '3A1F67A44D91417DBD14288A6541E3D4', '42E56D187F6941CCBFB850137469027F', '', '', 'A, B, C, D', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '1', '2016-01-05 00:12:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8CC5F2AD665846FD94B11045D6D4BB6B', '<p>For循环执行的顺序( ) ----- 单选<br></p><ul style=\"list-style-type:circle\"><li>(初始化表达式; ②条件表达式; ③循环后的操作表达式){<br></li><li>循环体;<br></li><li>}<br></li></ul>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8CD09E7AEE354B5986F896355F138795', '<p>在现实生活当中有哪些事物是符合”被所有对象所共享”这一理念的( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8D00691B69E84B08A222DC27CFCEF295', '<p>下列属于内存的是( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8D04E113F7054CFCBE6C6BB20C5EBD8A', '<p>看代码片段给出运行结果( ) ----- 单选<br>public static void main(String []args){<br></p><p style=\"margin-left: 40px;\">short s = 1 ; <br></p><p style=\"margin-left: 40px;\">s = s + 1;<br></p><p style=\"margin-left: 40px;\">System.out.println(s);<br></p><p>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8D239F6A1D3F400EB9B0C583E9582508', '<p>下面那些方法是BufferedInputStream的( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8DF1BB6A6A7C4B32800826424E607400', '<p>可以将StringBuffer反转的方法是哪个( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8E0079A51EEC4699A5D710D35D29DD2C', '<p>Collection获取长度的方法是哪个( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8E0656F4C648464F955A1F1397EA26E1', '<p>已知补码0b11101110求原码(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8E2BEB381D974F468C78B55204EE35C6', '<p>关于异常的注意事项，下列说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8E7722FDC1E1400588AAC2FFC69316B1', '<p>已知原码0b00000111求补码(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8F1AA4FB4A414E7EB5D9BE30B03CFD8D', '<p>以下关于yield()方法，说法正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8F5830CF5FD9464E8FF252F79D1A320C', '<p>下列程序的输出结果是( ) ----- 单选<br>&nbsp;&nbsp; &nbsp;class Demo {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;publicstaticvoid main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;char[] chArr={\'2\',\'A\',\'b\'};<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;String str = new String(chArr);<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;chArr[1]=\'哈\';<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(str);<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;}<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('8FCBC819AB19401D9FA03CAF9F98E774', '<p>关于字符缓冲流说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('9044D413056A4004B095EC7E13C4CF4A', '<p>java语言之父是谁(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('905526DA178944C08A4FD5638923A5E1', '<p>HashMap是保证键唯一，依赖于方法( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('90A84EEEF72F4854AAE28BAE929EFCEE', '<p>标准学生类中的成员变量通常为什么要加private修饰( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('90C634D1F0374751822F0987D5CE948B', '<p>下列关于int[][]&nbsp;arr = new int[3][]的说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('90F2897E8C544479888DE47DBBB731E7', '<p>使用标准输入输出流能完成哪些文件的复制( ) ----- 多选</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('910616FE32D74EDF9BE08990793380D7', '<p>关于StringBuilder描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('9110653ACA9F48608306233DFD877CF4', '<p>关于快速进制的转换法说法正确的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('91266B7CA73B4612BFB1D9F28956C1C9', '<p>下列关于抽象类描述不正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('916D511C49184BD182E2138EF748B917', '<p>以下说法正确的是(&nbsp;) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '2', '4', '0', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('916FD7975C0748C1B977091139AE2920', '<p>下列修饰符与访问无关的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('91E0524D0BCF45A0BE1B8C8D312DECD3', '<p>BigInteger类我们什么时候会用到( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('9210201370134A3A8A4087A6DF243726', '<p>下面关于打印流PrintStream的描述错误的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('9249DAA6C0ED483F982C0959E0F90EAE', '<p>关于Math类的特点说法正确的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('9251C7A13D474CD28C7CB5E4E869441B', '<p>以下代码1 2的位置运行结果是( ) ----- 单选<br></p><p style=\"margin-left: 40px;\">Integer i5 = 127;<br>Integer i6 = 127;<br>System.out.println(i5 == i6);&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;1<br>System.out.println(i5.equals(i6));&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;2<br>System.out.println(\"-----------\");<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('92851EA035E6414EA8E15FAA3FC9D818', '<p>获取数组中的最大值,在<span style=\"font-size:8px;\">____</span>上补齐代码( ) ----- 单选<br></p><p style=\"margin-left: 40px;\">public static int getMax(int[] arr) {<br>&nbsp; &nbsp;&nbsp;<span style=\"font-size:8px;\">________________________________</span><br>&nbsp;&nbsp; &nbsp;for (int i = 1;i &lt; arr.length ;i++ ) {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (max &lt; arr[i]) {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;max = arr[i];&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;}&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;return max;<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('92DB061FED0D40088C8A30BC829D753C', '<p>下列说法错误的是(&nbsp;) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('92E5166629224AB5A8A22B7DA6BD9021', '<p>判断一个字符串是否包含另一个字符串的方法是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('93CEA6E6E93541848B24BC750E0EF9E3', '<p>关于StringBuffer和StringBuilder说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('9432D0FE7E164BC6ABC8AD6EA7998CE1', '<p style=\"margin-left: 40px;\">iterator()方法的功能是什么( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('94A2B826758B4D8C86E3EC7C5174342A', '<p>下列对于快捷解释说法错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('954F6308912B4238ADD722EC4CE2E16B', '<p>Java中，用哪一个类来表示TCP协议的服务器Socket对象( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '86CD29E675474B1F922662BF9D093AF8', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('960474F91B394706A50D8267912DA514', '<p>看代码片段给出运行结果( ) ----- 单选<br>public static void main(String [] args){<br>&nbsp; char c = ‘你’;<br>&nbsp; System.out.println(c);<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('961962CDF579482D8DE35AF3DBF31BFC', '<p>看以下代码，老师与学生之间是什么关系？(&nbsp;) ----- 单选<br></p><p>class Person{<br>&nbsp;&nbsp; &nbsp;String name;<br>&nbsp;&nbsp; &nbsp;int age;<br>}</p><p>class Teaher extends Person{<br>}</p><p>class Student extends Person{<br>}<br><br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('963A09F451EC465E88DE1CA98A923D51', '<p>下列关于匿名对象的说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('963BE09C92D540D0A4DF96D78FA84821', '<p>在Java中，如果父类中的某些方法不包含任何逻辑，并且需要有子类重写，应该使用什么关键字来声明父类的这些方法( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('973198C9ED4543FCA96EC7EA3F681392', '<p>下列关于反码说法错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('975765C75BD24411B5B779A0F6ACB87B', '<p>下面可以被重写的方法是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('975BC6CDDFB642DD8B27E54342961BB8', '<p>获取绝对路径，可以通过哪个方法实现( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('979217D547154A34BCF2AFC3EB0DF9A6', '<p>下列程序的输出结果是( ) ----- 单选<br>&nbsp;&nbsp; &nbsp;class Demo {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Scanner sc = new Scanner(System.in);&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int i = sc.nextInt();&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(i);<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;}<br></p><p>从键盘输录入:a 10回车<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('97A38AC863154A1E8605832880A665E7', '<p>以下哪些继承的弊端(&nbsp;) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '2', '4', '0', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('983E3C9038BC4A1D8A531525230D09CA', '<p>class Fu{<br></p><p style=\"margin-left: 40px;\">public void print()｛<br></p><p style=\"margin-left: 80px;\">System.out.println(“Fu print”);<br></p><p style=\"margin-left: 40px;\">}<br></p><p>}<br></p><p>class Zi extends Fu{<br></p><p style=\"margin-left: 40px;\">public void show(){<br></p><p style=\"margin-left: 80px;\">System.out.println(“Zi show”);<br></p><p style=\"margin-left: 40px;\">}<br></p><p>}<br></p><p>class Test{<br></p><p style=\"margin-left: 40px;\">public static void main(String[] args){<br></p><p style=\"margin-left: 40px;\">Zi z=new Zi();<br></p><p style=\"margin-left: 40px;\">_____①____;<br></p><p style=\"margin-left: 40px;\">}<br></p><p>}</p><p>在①处填入哪个代码，可以输出Fu print？(&nbsp;) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('98846009C6134E72903DEECC3E04550F', '<p>以下内容的执行顺序是(&nbsp;) ----- 单选<br></p><p>①构造代码块<br></p><p>②构造方法<br></p><p>③静态代码块</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('993C39252AC244719040FDC5CF7FAF68', '<p style=\"margin-left: 40px;\">观察代码，下列说法正确的是( ) ----- 单选</p><p style=\"margin-left: 40px;\">ArrayList&lt;String,&nbsp;Array&lt;String&gt;&gt;&nbsp;al&nbsp;=&nbsp;new&nbsp;ArrayList&lt;String,Array&lt;String&gt;&gt;();</p><p style=\"margin-left: 40px;\">al.add(“abc”);</p><p style=\"margin-left: 40px;\">ArrayList&nbsp;al2&nbsp;=&nbsp;new&nbsp;Array&lt;String&gt;();</p><p style=\"margin-left: 40px;\">al2.add(“efg”);</p><p style=\"margin-left: 40px;\">al.add(al2);</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('99438713791F4BE5B06AA1C51F25A1E4', '<p>String类中int compareTo(String str)比较两个字符串的返回值一定是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('9AC1FEAD999E41B7AA8BAFCE586A954D', '<p>下列创建序列流SequenceInputStream对象正确的方式为( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('9ACB62DB28C64D218434CA9D817DF19D', '<p>下列对于变量的作用描述正确的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('9B34B88C8C0F4C799AD962B7DC08FB5F', '<p>获取指定目录下的所有文件或者文件夹（不包含子文件夹）的名称数组,如何实现( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('9B5D75894C81487EA56A9955B9159CEF', '<p>for循环格式如下：</p>\r\n\r\n<p>for(表达式1;表达式2;表达式3){</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; //code</p>\r\n\r\n<p>}</p>\r\n\r\n<p>下面描述错误的是( ) ----- 多选</p>\r\n', 'CFB842C51DD44FD99FE7BC41571B8C83', '21B1C588A1A24B81996C1FB2420AF920', '5ABD23506974438EA07AD3C9A91A1E1C', 'E2CAC5CCBBA8450CBDC1630D140E5666', '', '', 'A, C, D', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '1', '2016-01-05 10:29:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('9BA87153A4504A72AA7F8F8AE1E0CD1D', '<p>下列关于Vector说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('9BE0823A56E946E595E5B53ADE7C6B84', '<p>自然排序的好处是( ) ----- 多选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('9C107AB645FE41F38061CA0B661A7700', '<p>当使用客户端套接字Socket创建对象时，需要指定( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '86CD29E675474B1F922662BF9D093AF8', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('9C318EE3C8534C2B87699FB4FDCEB2D7', '<p>下列关于ListIterator说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('9C4236EEC0F247099FCF5268597F055B', '<p>ObjectOputStream类中的哪个方法可以将对象写入到文件中( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('9D751D5474794F8098DAF547D4EE5675', '<p>下面的类是同步的有( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('9D75DFD225904472AD17FB5F9C274603', '<p>下列关于int[][] arr = new int[3][3];的说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('9E1D64F685E34B92A4103F1211B4B95A', '<p>执行下述代码，结果是( ) ----- 单选</p><p>class&nbsp;MyThread&nbsp;extends&nbsp;Thread{</p><p style=\"margin-left: 40px;\">private&nbsp;String&nbsp;data;</p><p style=\"margin-left: 40px;\">public&nbsp;void&nbsp;run(){<br></p><p style=\"margin-left: 80px;\">synchronized(data){</p><p style=\"margin-left: 120px;\">for(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&lt;10;&nbsp;i++){<br></p><p style=\"margin-left: 160px;\">&nbsp;try{</p><p style=\"margin-left: 200px;\">&nbsp;Thread.sleep((int)(Math.random()*1000)&nbsp;);</p><p style=\"margin-left: 160px;\">&nbsp;}catch(Exception&nbsp;e){}</p><p style=\"margin-left: 200px;\">&nbsp;System.out.println(data);</p><p style=\"margin-left: 120px;\">}</p><p style=\"margin-left: 80px;\">&nbsp;}</p><p style=\"margin-left: 40px;\">&nbsp;}</p><p>&nbsp;}</p><p>&nbsp;public&nbsp;class&nbsp;TestMyThread&nbsp;{</p><p style=\"margin-left: 40px;\">&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String&nbsp;args[]){</p><p style=\"margin-left: 80px;\">&nbsp;Thread&nbsp;t1&nbsp;=&nbsp;new&nbsp;MyThread();</p><p style=\"margin-left: 80px;\">&nbsp;Thread&nbsp;t2&nbsp;=&nbsp;new&nbsp;MyThread();<br></p><p style=\"margin-left: 80px;\">&nbsp;t1.setName(“hello”);</p><p style=\"margin-left: 80px;\">&nbsp;t2.setName(“world”);</p><p style=\"margin-left: 80px;\">&nbsp;t1.start();</p><p style=\"margin-left: 80px;\">&nbsp;t2.start();</p><p style=\"margin-left: 40px;\">&nbsp;}</p><p>&nbsp;}<br></p><strong></strong>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('9E473EA8F121455B9F3E561111B15163', '<p>创建对象在内存中的过程，第一步是把类的class文件加载到哪里( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('9EF88C52CDF24EF3B58AF38AB8AF9F64', '<p>关于main方法说法错误的是( ) ----- 单选</p>\r\n', '1BED5C69718F4C6CBC961C8B04D302DF', '8C6BFC0F924A46AB8D96FA07252EE992', '88E43CACD7FE48F286F6BD8963D664D7', '8F54AA5B069D43C79A324201292B4DF2', '', '', 'B', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '1', '2016-01-05 00:08:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('9F2B7FDB50304EE79C9D1F4008F36040', '<span style=\"font-size:14px;\"></span><p><span style=\"font-size:8px;\">关于进程和线程的区别，下列说法错误的是( ) ----- 单选</span></p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A01B816D6C0A473D8CD780F5518299F2', '<p>下列描述错误的是(&nbsp;) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A02BDEB5F5CF41BDA3FEF20195D15152', '<p>关于Eclipse的快捷键对应错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A06316D8090B4479B8E165E59459F067', '<p>下列关于方法格式解释错误的一项是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A0C2880F81BF48F1B52F1FB9877460BB', '<p>String类中将字符串反转的方法是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A0EAA6FC0A3F48239C4F25D5934ADCCF', '<p>如果要一个线程等待一段时间后再恢复执行此线程，需要调用什么方法( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A1A018F0E1ED4528883587F6C4356DF7', '<p>下列哪些不属于赋值运算符( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A1F97FE0127F45279961F704D6E70431', '<p>关于静态变量和成员变量说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A1FFEB9AF0A84C43BB462A7D2A588928', '<p>下列哪种方式可以创建新的线程并执行( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A22444E251D24147A203939C7CF24DD4', '<p>在java中，已定义了两个接口B和C，以下语句正确的是(&nbsp;) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A22FC99A1847414BA590D98DC55DB4E7', '<p>下列关于内存的说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A2666A4C84B147AD8609D748CA52EA04', '<p>下面的哪个类代表字节输入流到字符输入流转换的桥梁( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A324A02D815146AA85681768D985ED0D', '<p>下列关于Demo d = new Demo()的说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A327EF48F62A483BBC718FB369E43458', '<p>下列关于类的说法正确的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A3A2AA41A95148C395A4B962D4D909E8', '<p>下列哪个Thread类提供的方法可以使线程从运行状态进入阻塞状态( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A3C61268AFA4459383DE274E8FB3F6AF', '<p>关于枚举定义的说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, 'C2848E4C98F7463680B35F88166CEC3F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A475F62D72304E93A56EF57E60AB2F49', '<p>位运算符号不包含一下哪一个( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A503A9B328C4481AA283AD65EA13BB20', '<p style=\"margin-left: 40px;\">下面的方法，目的是在TreeSet中对元素进行排序，但是要保留重复元素，补全下面的代码( ) ----- 单选</p><p style=\"margin-left: 40px;\">public&nbsp;static&nbsp;void&nbsp;sort(List&lt;String&gt;&nbsp;list)&nbsp;{</p><p style=\"margin-left: 40px;\">TreeSet&lt;String&gt;&nbsp;ts&nbsp;=&nbsp;new&nbsp;TreeSet&lt;&gt;(new&nbsp;Comparator&lt;String&gt;()&nbsp;{</p><p style=\"margin-left: 40px;\"><br></p><p style=\"margin-left: 40px;\">@Override</p><p style=\"margin-left: 40px;\">public&nbsp;int&nbsp;compare(String&nbsp;s1,&nbsp;String&nbsp;s2)&nbsp;{</p><p style=\"margin-left: 40px;\">int&nbsp;num&nbsp;=&nbsp;s1.compareTo(s2);</p><p style=\"margin-left: 40px;\">补全此处代码</p><p style=\"margin-left: 40px;\">}</p><p style=\"margin-left: 40px;\">});</p><p style=\"margin-left: 40px;\"><br></p><p style=\"margin-left: 40px;\">ts.addAll(list);</p><p style=\"margin-left: 40px;\">list.clear();</p><p style=\"margin-left: 40px;\">list.addAll(ts);</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A5241E29E79E4CB6A49941DDF1EA1E68', '<p style=\"margin-left: 40px;\">下列关于代码中，说法正确的是( ) ----- 单选</p><p style=\"margin-left: 80px;\">ArrayList&nbsp;list&nbsp;=&nbsp;new&nbsp;ArrayList();</p><p style=\"margin-left: 80px;\">list.add(new&nbsp;Person(\"张三\",&nbsp;23));</p><p style=\"margin-left: 80px;\">list.add(new&nbsp;Person(\"张三\",&nbsp;23));</p><p style=\"margin-left: 80px;\">list.add(new&nbsp;Person(\"李四\",&nbsp;24));</p><p style=\"margin-left: 80px;\">list.add(new&nbsp;Person(\"李四\",&nbsp;24));</p><p style=\"margin-left: 80px;\">list.add(new&nbsp;Person(\"李四\",&nbsp;24));<br></p><p style=\"margin-left: 80px;\">list.add(new&nbsp;Person(\"李四\",&nbsp;24));</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A533FB795BFA49E3BBE3BCB8FCA32EC2', '<p>下面程序的运行结果是( ) ----- 单选</p>\r\n\r\n<p>int a=3, b=1;</p>\r\n\r\n<p>if(a==b)&nbsp;<span style=\"line-height:1.6\">{</span></p>\r\n\r\n<p>&nbsp; &nbsp; System.out.println(&quot;a=&quot;+a);</p>\r\n\r\n<p>}</p>\r\n', '6B0175191A0643E49FCE9086A896A494', '55501EBA8D7D4E3E8FCC022D3E6150C0', '7844352BDAFA4D7BBE9A6B64553E4347', 'F959654169184C0E8194C7AD8F9FE3FF', '', '', 'D', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '1', '2016-01-05 10:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A59247A6CE834AC1AC4E101A93C28E88', '<p>关于String类的描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A641933B25CF464988436B71CCC23832', '<p>验证jdk安装是否成功正确的方式(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A6426E3458AD4C76BEB4892CF80C43FF', '<p>下列关于类的使用说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A6439947B71C40CEAD1EC0391779736A', '<p>产生随机数的方法是什么(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A6D87F19B4C7479CA45F91BBF498F78E', '<p><span style=\"font-size:8px;\">下列代码是将类声明为&nbsp;Thread&nbsp;的子类，以创建新的线程并执行。在横线处填入哪些代码可以实现上述目标( ) ----- 单选</span></p><p><span style=\"font-size:8px;\">public&nbsp;class&nbsp;MyThread&nbsp;extends&nbsp;Thread&nbsp;{</span></p><p style=\"margin-left: 40px;\"><span style=\"font-size:8px;\">public&nbsp;void&nbsp;run()&nbsp;{</span></p><p style=\"margin-left: 80px;\"><span style=\"font-size:8px;\">&nbsp;//&nbsp;do&nbsp;something…</span></p><p style=\"margin-left: 40px;\"><span style=\"font-size:8px;\">}</span></p><p><span style=\"font-size:8px;\">}</span></p><p><span style=\"font-size:8px;\">public&nbsp;class&nbsp;MyThreadTest&nbsp;{</span></p><p style=\"margin-left: 40px;\"><span style=\"font-size:8px;\">public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{</span></p><p><span style=\"font-size:8px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;____________________________________</span></p><p style=\"margin-left: 40px;\"><span style=\"font-size:8px;\">}</span></p><p><span style=\"font-size:8px;\">}</span></p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A71138CFF2474222B8E54FF95DDBAFBD', '<p>下列不属于基本数据类型的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A73EB37FB22B47C797DCDB85C32201F5', '<p>byte类型的取值范围是( ) ----- 单选</p>\r\n', '336DDD7B135C425182A724E2B88A1F74', 'C0A047CC1DBA4FBAAF0BDABD5447886D', 'A09DF7BD8D7B46338D9BDCA25D304ABC', '43C447AB359845109B09BEEB77F1D5EE', '', '', 'C', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '1', '2016-01-05 00:03:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A7836608D1E64786A4D85234C5295403', '<p>以下描述恰当的是( ) ----- 多选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A7BD754E6F6A4E4EADAA39E35EABC17A', '<p style=\"margin-left: 40px;\">根据要求，补全代码,让TreeSet能够存储重复的字符串，并且按照正序的方式存储( ) ----- 单选</p><p style=\"margin-left: 40px;\">TreeSet&lt;String&gt;&nbsp;ts=new&nbsp;TreeSet&lt;String&gt;(new&nbsp;Comparator&lt;String&gt;()&nbsp;{</p><p style=\"margin-left: 40px;\">@Override</p><p style=\"margin-left: 40px;\">public&nbsp;int&nbsp;compare(String&nbsp;s1,&nbsp;String&nbsp;s2)&nbsp;{</p><p style=\"margin-left: 40px;\">//在此处补全代码</p><p style=\"margin-left: 40px;\">}</p><p style=\"margin-left: 40px;\">});</p><p style=\"margin-left: 40px;\">ts.add(\"A\");</p><p style=\"margin-left: 40px;\">ts.add(\"A\");</p><p style=\"margin-left: 40px;\">ts.add(\"a\");</p><p style=\"margin-left: 40px;\">ts.add(\"a\");</p><p style=\"margin-left: 40px;\">ts.add(\"a\");</p><p style=\"margin-left: 40px;\">ts.add(\"D\");</p><p style=\"margin-left: 40px;\">ts.add(\"D\");</p><p style=\"margin-left: 40px;\">ts.add(\"A\");</p><p style=\"margin-left: 40px;\">ts.add(\"b\");</p><p style=\"margin-left: 40px;\">System.out.println(ts);<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A7C50291240940ADA8D491315993CB51', '<p style=\"margin-left: 40px;\">根据下面的代码，选出空白处应填写的代码( ) ----- 单选<br></p><p style=\"margin-left: 40px;\">Scanner&nbsp;sc&nbsp;=&nbsp;new&nbsp;Scanner(System.in);</p><p style=\"margin-left: 40px;\">System.out.println(\"请输入一行字符串:\");</p><p style=\"margin-left: 40px;\">String&nbsp;line&nbsp;=&nbsp;补全此处代码;<br></p><p style=\"margin-left: 40px;\">char[]&nbsp;arr&nbsp;=&nbsp;line.toCharArray();<br></p><p style=\"margin-left: 40px;\"> HashSet&lt;Character&gt;&nbsp;hs&nbsp;=&nbsp;new&nbsp;HashSet&lt;&gt;();</p><p style=\"margin-left: 40px;\">for(char&nbsp;c&nbsp;:&nbsp;arr)&nbsp;{ hs.add(c); }</p><p style=\"margin-left: 40px;\">for&nbsp;(Character&nbsp;ch&nbsp;:&nbsp;hs)&nbsp;{ System.out.println(ch);</p><p style=\"margin-left: 40px;\">}</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A8134F8361D145AFBD23EE3D4F730B01', '<p>哪个方法可以将毫秒值转成日期对象( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A896AB991E4A408D8E24F851156CD835', '<p>在main方法中定义int[] arr = new int[3]和int arr1 = new int[3],下列说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A8E88D3C9C5A447BBDD238DF2D320C5C', '<p>已知 海贼王全集.avi 这个文件有20Gb 的大小，下列选项中复制该文件最快的方式是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A986BE7D029D4E8A857D392292B94CE3', '<p>获取文件的最后一次修改时间，可以通过哪个方法实现( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A9BEEC39274143529CAA33482538E62B', '<p>下边两个变量int x=5和int y=15 数据能够互相交换的选项是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('A9C38ABF8F2E4D5E9D90E4D96BB2E652', '<p>下列说法错误的是(&nbsp;) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('AA12F39BE1944F0DBA3C9E853C92CDB6', '<p>请指出下列程序的运行结果( ) ----- 单选<br>class Father {<br>&nbsp;&nbsp; &nbsp;public void print() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(\"father\");<br>&nbsp;&nbsp; &nbsp;}<br>}<br>class Son extends Father {<br>&nbsp;&nbsp; &nbsp;public void print() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(\"son\");<br>&nbsp;&nbsp; &nbsp;}<br>}<br>class Demo {<br>&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Father f = new Son();<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;f.print();<br>&nbsp;&nbsp; &nbsp;}<br>}<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('AA60F98945B64B2A9EA5119DBEE91558', '<p>下列关于Java I/O中字符输入流Reader类中的read方法描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('AA82F2ACF1A347EABA14B929590FC824', '<p>DateFormat类中的parse()方法描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('AA8F784105F34FBEA2BBCDFBC15CEC02', '<p>下面关于IO流中的flush()方法说法正确的是( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('AAF09BCDE78740E69A4B4228C3CD9C15', '<p>下列关于多态的理解哪些正确的( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('AAFF84AD7A244E008ABB512CF54A50CC', '<p>下列程序的执行结果是( ) ----- 单选<br></p><p>class A {<br></p><p style=\"margin-left: 40px;\">public int i = 10;<br></p><p>}<br></p><p>class B extends A {<br></p><p style=\"margin-left: 40px;\">public int i = 20;<br></p><p>}<br>public class Test {<br></p><p style=\"margin-left: 40px;\">public static void main(String args[]) {<br></p><p style=\"margin-left: 80px;\">B b = new B();<br></p><p style=\"margin-left: 80px;\">A a = b;<br></p><p style=\"margin-left: 80px;\">System.out.println(b.i);&nbsp;<br></p><p style=\"margin-left: 80px;\">System.out.println(a.i);<br></p><p style=\"margin-left: 40px;\">}<br></p><p>}<br><br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('AB500DE2A4C343FAB446021D260E2ABF', '<p>下列对于+号运算符描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('AB59FCAF7A41409887272F205C95DB7E', '<p>InetAddress类中哪个方法可实现正向名称解析( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '86CD29E675474B1F922662BF9D093AF8', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('AB80429ED70C4A45916CE9932CAC8E30', '<p>下列关于Object类的hashCode()方法描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('AB8605B532BA425780E3A35C9F84B36F', '<p>并发修改异常的解决方案哪些正确( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('ABEF0B340EC44077AD6C2CEA6561C10F', '<p>关于Java虚拟机(JVM)的启动，下列说法正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('AC5BA8E858B44799AB598A128F9FEC2C', '<p>下面哪个不是java中的关键字( ) ----- 单选</p>\r\n', 'EEC3E7DB88284F319A0B08DE0207B82C', '899514CD8E6447A4913D6B957BE62017', 'BF55563233894B7396401CCFE6F2195C', '5476BBA74F4C44A5866AF35F73845E5B', '', '', 'C', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '1', '2016-01-05 11:11:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('AC6C058ECC3C458C87B81921EDA4B36B', '<p>Math.floor(15.6)运行结果是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('AC77607FFB684A25A91139B91974BBEC', '<p>对final关键字使用错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('AD231382B0D443668FF1125DF016562C', '<p>下面关于打印流PrintStream的描述错误的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('AD289B8E864743678E2885D95CCC40E1', '<p>Collection接口里的addAll()方法的功能是什么( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('AD39D5C392CA47D78330CD05001DC279', '<p>下列关于int[][] arr = int[3][]的说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('AD49D486EFCE47DE9C06F8A847DAD05B', '<p>下列哪些不属于java语言的关键字(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('AD8126F22B9F40CC9BB5622A40D4C415', '<p>下面程序的运行结果是( ) ----- 单选<br></p><p style=\"margin-left: 40px;\">public static void main(String[] args){<br></p><p style=\"margin-left: 80px;\">StringBuffer sb = new StringBuffer();<br>sb.append(\"qq\").append(\"ww\");&nbsp;<br>show(sb,\"ss\");<br>System.out.println(sb.length());<br></p><p style=\"margin-left: 40px;\">}<br>static void show(StringBuffer sb,String str){<br></p><p style=\"margin-left: 80px;\">sb.append(str);&nbsp;<br></p><p style=\"margin-left: 40px;\"><br>}<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('ADF3AC3FB5544E83B88E7FD92458D174', '<p>在使用TreeSet进行排序的时候，以下说法错误的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('AE1170F6E882483EAE0861501243FE82', '<p>在main方法中定义int[] arr = new int[3]和int arr1 =arr,下列说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('AEBD3C1BA9D043C6B8FF5EAA11FA98A1', '<p>下列描述正确的是(&nbsp;) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('AF44665882AD400CB5E5726549B81E7C', '<p>下面语句运行结果为( ) ----- 单选<br></p><p>public static void main(String[] args) {<br>&nbsp; switch (5) {<br>&nbsp; &nbsp; default:<br>&nbsp; &nbsp; &nbsp; System.out.println(5);<br>&nbsp; &nbsp; break;<br>&nbsp; &nbsp; case 0:<br>&nbsp; &nbsp; &nbsp; System.out.println(0);<br>&nbsp; &nbsp; break;<br>&nbsp; &nbsp; case 1:<br>&nbsp; &nbsp; &nbsp; System.out.println(1);<br>&nbsp; &nbsp; break;</p><p>&nbsp; &nbsp; case 2:<br>&nbsp; &nbsp; &nbsp; System.out.println(2);<br>&nbsp; &nbsp; break;<br>&nbsp; }<br>}</p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('AFC04DA743EE46A68DD50A0270409C36', '<p>BigDecimal中的public BigDecimal subtract(BigDecimal subtrahend)方法的作用( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B004E97AF3684BC7957CE2CE6B3C6F29', '<p>下列关于this的说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B033C9EF48E6459E967DA4F5D6B4AF71', '<p>关于内存输出流的描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B142786382A44D27A8AB251F2B4D9CAC', '<p>根据需求补全下列代码( ) ----- 单选<br>把字符串反转<br>&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Scanner sc = new Scanner(System.in);&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(\"请输入一个字符串:\");<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;String line = sc.nextLine();&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;char[] arr = _________&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;String s = \"\";<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for(int i = ____; i&gt;= ____; i--) {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;s = s + arr[i];&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;}<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B1D97BDD72364C67A1D59562EED7F17B', '<p>缓冲流BufferedInputStream的缓冲区大小是多少( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B1E63AA97DFB4DFA97A5940294394DAA', '<p>下面哪些关键字不能用来控制对类成员的访问( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B24E9C9EAB734CF0807C1D219DA66CFA', '<p>关于Collection和Collections的区别，说法正确的是( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B2CE5860E9524DEAAA0D060A666E3D9A', '<p>下面哪些是FileOutputStream这个类的对象可以使用的方法( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B347EE4CED4C4BB190D2329FF3633F55', '<p>下列位运算结果错误的一项( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B3567B790AF24592BE56FD26425BC8B5', '<p>有如下程序，请使用已知变量，要在控制台输出30，20，10，请问程序问号“?????”处应分别填什么代码(&nbsp;) ----- 单选<br>class Outer {<br>&nbsp;&nbsp; &nbsp;public int num = 10;<br>&nbsp;&nbsp; &nbsp;class Inner {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public int num = 20;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public void show() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int num = 30;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(?????);<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(?????);<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(?????);<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;}<br>}<br>class InnerClassTest {<br>&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//创建内部类对象，调用show()方法，此处代码省略，<br>&nbsp;&nbsp; &nbsp;}&nbsp;&nbsp; &nbsp;<br>}<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B35F6BDEC67B4E10B5A979992B175D11', '<p style=\"margin-left: 40px;\">能删除下面集合中所有的字符串“b”的代码的是( ) ----- 单选</p><p style=\"margin-left: 40px;\">ArrayList&lt;String&gt;&nbsp;list&nbsp;=&nbsp;new&nbsp;ArrayList&lt;&gt;();</p><p style=\"margin-left: 40px;\">list.add(\"a\");</p><p style=\"margin-left: 40px;\">list.add(\"b\");</p><p style=\"margin-left: 40px;\">list.add(\"b\");</p><p style=\"margin-left: 40px;\">list.add(\"c\");</p><p style=\"margin-left: 40px;\">list.add(\"d\");</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B365A04AA4394FDD862A972F98CD81BD', '<p>定义如下的二维数组b，下面的说法正确的是( ) ----- 多选</p>\r\n\r\n<p>int b[][]={{1, 2, 3}, {4, 5},{6, 7, 8}}};</p>\r\n', '850D6DC59C904B34BB27DA37678F8355', '481D81741A594F869038F9CC0115A2D2', '91E481E3FEE74E8FA4F6713BFB2551C0', '3CA86A722DC24816AD4DD5C9E005DDFF', '', '', 'A, C, D', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '1', '2016-01-05 10:50:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B373D4F7C8AE4D55B5B2EA8955A474FC', '<p>关于字符缓冲流内部封装的数组大小是1024的整数倍说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B3ABBD0FA917446B92F30996C5B1EE4A', '<p>关于Eclipse的内容辅助键描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B424AB1C98294BDB894AEE8C540FE96B', '<p>如果一个类没有无参构造方法，如何创建该类的对象( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, 'C2848E4C98F7463680B35F88166CEC3F', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B4445D2E69B04FD59F65D3D5BBD5D50E', '<p>下面哪个路径是绝对路径( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B4B90EB2EA6A4AA59B02B7BBC12F4A57', '<p>下列关于成员方法的说法正确的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B4D4DDE23A774B88B59CD3AAF6AC50EE', '<p>下列关于泛型类的说法不正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B4E652C0E40E4D1EB38360856ADFFC21', '<p>关于重载下面说法错误的一项是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B5B711E7C367447CBF57FAB18A88281B', '<p>下列哪一个import命令可以使我们在程序中创建输入/输出流对象( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B61B6856D1C94CD7B2E67FE31B36606F', '<p>以下关于哈希值保证唯一描述错误的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B66CC6E588694071A282A230E094864E', '<p>以下代码输出结果是( ) ----- 单选</p>\r\n\r\n<p>int i=0;</p>\r\n\r\n<p>int sum=0;</p>\r\n\r\n<p>while(i&lt;=10)&nbsp;<span style=\"line-height:1.6\">{</span></p>\r\n\r\n<p>&nbsp; &nbsp; i++;</p>\r\n\r\n<p>&nbsp; &nbsp; if( i%2 !=0 )</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; continue;</p>\r\n\r\n<p>&nbsp; &nbsp; sum+=i;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>System.out.println(sum);</p>\r\n', '391711C818F645DC9C4B9A920F5D2402', '23E50D6FA2C54152AB1A46C3CBA110A1', 'B93C117F1BF844838A8E8106ECC1C99F', '1FAB2D030D0B48C69809A70AC204CDC4', '', '', 'D', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '1', '2016-01-05 11:12:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B6A0D94C0A0D4E0BB083EBD592BFBF8A', '<p>关于Eclipse的功能描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B6A49BDDC51A4CF397E1C43F52F475A9', '<p>以下可以删除StringBuffer对象指定区间字符的方法是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B6D9EF7FF95A4E9D85EF00C6888A59C1', '<p>关于对象成员占用内存的说法哪个正确(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B7250FC6E5D141188C732DDEF690C51D', '<p>下列关于封装的说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B7EC491B45DF45B08BD24F050C11E29B', '<p>泛型固定下边界的格式是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B8257C4E694D4D92AE9E0D6F8727FB99', '<p>以下说法错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B83657E346174DF9A72D84B69D89E74C', '<p>以下能以键值对的形式存储对象的接口是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B8E832318E7E45858627E4128B6C682D', '<p>下面说法正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B93900F368D3426582BF764055F4B820', '<p>以下程序执行的结果是(&nbsp;) ----- 单选<br></p><p>class Fu{<br></p><p style=\"margin-left: 40px;\">public int num = 10;<br></p><p style=\"margin-left: 40px;\">public Fu(){<br></p><p style=\"margin-left: 80px;\">System.out.println(\"fu\");<br></p><p style=\"margin-left: 40px;\">}<br></p><p>}<br></p><p>class Zi extends Fu {<br></p><p style=\"margin-left: 40px;\">public int num = 20;<br></p><p style=\"margin-left: 40px;\">public Zi(){<br></p><p style=\"margin-left: 80px;\">System.out.println(\"zi\");<br></p><p>}<br></p><p style=\"margin-left: 40px;\">public void show(){<br></p><p style=\"margin-left: 80px;\">int num = 30;<br></p><p style=\"margin-left: 80px;\">System.out.println(num);<br></p><p style=\"margin-left: 80px;\">System.out.println(this.num);<br></p><p style=\"margin-left: 80px;\">System.out.println(super.num);<br></p><p style=\"margin-left: 40px;\">}<br></p><p>}<br></p><p>class Test1_Extends {<br></p><p style=\"margin-left: 40px;\">public static void main(String[] args) {<br></p><p style=\"margin-left: 80px;\">Zi z = new Zi();<br></p><p style=\"margin-left: 80px;\">z.show();<br></p><p style=\"margin-left: 40px;\">}<br></p><p>}<br><br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B93B4547F5D342E6ACF1EA2905E7BD8A', '<p><span style=\"font-size:8px;\">编写线程类，可以通过实现哪个接口来实现( ) ----- 单选</span></p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B94EBBCF0DE948F794FBA83978CFF19E', '<p>下面说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B95A2FCC46DC4E41B4B43A6BE35E0BA0', '<p>下列说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B981F6DAD9A940E2A34A6B943FB73FC4', '<p>关于构造方法说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('B9D64DEC92674AEEB98A1D34C9266E16', '<p>下列关于Java中文件输入输出的说法正确的是( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('BA186F671712469ABD11D239EF870550', '<p>下列关于链表数据结构的描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('BA3977A084B145A5BF09684B51B62246', '<p>如下代码创建一个新线程并启动线程：&nbsp;<br></p><p>Runnable&nbsp;target&nbsp;=&nbsp;new&nbsp;MyRunnable();&nbsp;&nbsp;<br></p><p>Thread&nbsp;myThread = new&nbsp;Thread(target);&nbsp;<br></p><p>问:如下哪些类可以创建target对象，并能编译正确？( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('BA5E186DDF7E4012B542FECEA619047C', '<p>下面程序的运行结果是( ) ----- 单选</p>\r\n\r\n<p>class Demo{</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; public static int fun(int c){</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return&nbsp; c+=2; //因为return了，return的是4</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; public static void main(String[] args){</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int temp = fun(2);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(temp);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>}</p>\r\n', '3720C90BAD4945E199B9205AEA1E2C89', '05FD016B6F7543328F07FD5C115BDE30', '9425775A92C3407B8427722F709FFB0A', 'BCC61A0D62FA404388751EC43F576A78', '', '', 'B', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '1', '2016-01-05 10:52:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('BB64C3CA6D374D9F98818871DA2E0E2D', '<p>下列关于进制的表现形式错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('BBA6C034844F4D2A94B5E112DE0EACDC', '<p>下列数据类型转换错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('BC67217855E447C0B7CEF9BF7BEEF3EA', '<p>读下面代码确定k和n的值( ) ----- 单选<br></p><p>int k = 4, n = 0;<br>for (; n &lt; k;) {<br>&nbsp;&nbsp; &nbsp;n++;<br>&nbsp;&nbsp; &nbsp;if (n % 3 != 0)<br>&nbsp; &nbsp; &nbsp; continue;<br>&nbsp;&nbsp; &nbsp;k--;<br>}<br><br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('BC98BD294FDB43BD990D0EFB8078A55E', '<p>剪切的快捷键(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('BD4CA8CD3EE44A24B3F1C1B019FFD1AE', '<p>下列语句执行后，j 的值是( ) ----- 单选<br></p><p>&nbsp;&nbsp; int j = 8, i = 6;</p><p>&nbsp; &nbsp;while (i &gt; 2)</p><p>&nbsp; &nbsp; &nbsp;i -= 2;<br></p><p>&nbsp; &nbsp;--j;</p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('BDDCF8E09A4F471F9285BB85182F9EB8', '<p>读下面一段代码,选择正确的输出结果( ) ----- 单选<br></p><p>class OperatorDemo {<br>&nbsp; public static void main(String[] args) {<br>&nbsp; &nbsp; int x = 3, y;<br>&nbsp; &nbsp; y = (x &gt; 1) ? 100 : 200;<br>&nbsp; &nbsp; System.out.println(\"y = \" + y);<br>&nbsp; }<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('BDF906495C89420D8FE41DB2ABB35FDF', '<p>下列哪个关键字不可以修饰变量(&nbsp;) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('BE14C78DB74B45B98795860138E63D83', '<p>如果我想保留a.txt中原有的内容，在后面追加写入数据，下面创建输出流对象写法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('BF2452AB0C51426BBF9C6577658CE85B', '<p>TreeSet是如何保证元素唯一性的( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('BF47B511F1FA4ABDACFE11DAD30C385A', '<p style=\"margin-left: 40px;\">下列有关泛型的代码中，说法正确的是( ) ----- 单选</p><p style=\"margin-left: 40px;\">ArrayList&lt;Person&gt;&nbsp;list&nbsp;=&nbsp;new&nbsp;ArrayList&lt;Person&gt;();</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('BF68B1AE0B614A3EB4549DE393EA849F', '<p>File类中判断是否是文件用哪个方法( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('BFCF0DE5819E4AD69E0E507950EE35AF', '<p>下面数组定义正确的是( ) ----- 单选</p>\r\n', '6AFEEEA975C74C19AD96F8E6C4968D5D', 'D1040E18CC544366ABE3D8A61205A811', '1A15F14D426F4367A1DEF70B47EAB386', '1271590FB60F4B19B3E9D4519E621DE4', '', '', 'A', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '1', '2016-01-05 10:54:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('C04E8836D56E49C2B5A46E3CCC2CAE7F', '<p>下面关于外部类和内部类成员的相互访问的规则中，正确的选项是(&nbsp;) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('C090E3279C78499FBA2C55109E996B79', '<p>Calendar类中的Day_OF_WEEK可以获取到( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('C0929634BB674A9E9A47634EAABA044F', '<p>下列关于代理模式说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, 'C2848E4C98F7463680B35F88166CEC3F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('C1181970F28C464FA907CE713DCCA70B', '<p>下面不属于基本数据类型的是( ) ----- 多选</p>\r\n', '1053CB9891124C6493DD9B6D0CB3B347', '57548283443B4BA3871574A8E59A24C7', 'FACB774A5557406CA40ED49C4042C5BA', '53EAFCB681B0419086C2DEAC7ADB49D9', '', '', 'C, D', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '1', '2016-01-05 11:10:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('C19074D6CED04C0AB53E2F0A40BC4F3B', '<p>定义变量如下:</p>\r\n\r\n<p>char c=&#39;w&#39;; int i=8; long L=15; float f=8.9f;</p>\r\n\r\n<p>以下赋值语句正确的是( ) ----- 多选</p>\r\n', '952A576A89E14C188AE6EC324EA4A662', 'D0141F12D6D8482A80D8AE39ECF7DA64', '35E30396628B490A901473AF143913F0', '1AC37E355FED4ED696D6A687DF320F91', '', '', 'A, D', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '1', '2016-01-05 11:18:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('C1AD6963B5C944A79F5DBACD1B6440FA', '<p>下列说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('C20E08B1A8874E14A662A03B51934758', '<p>下列方法定义中，正确的是( ) ----- 多选</p>\r\n', '511E7C67804C4E128E05DC57D364143C', 'B5CB09D433BF4CBCBBC8D73E4F000C05', '7E99477CA4124F8AA926B58D142A57EF', '6976DA172F1C41718F4D55B143D5487D', '', '', 'C, D', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '1', '2016-01-05 10:53:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('C227C2AD2B684621A3C11949260EC402', '<p>下列描述错误的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('C2BAE395C1334F0CB54A2470D90568AA', '<p>下面关于return语句说法正确的是( ) ----- 多选</p>\r\n', '4A64A839599E4D1FAB2664C4EC6F8E21', '7C1106953DFB4A5FB5EB3D617376DB1F', 'D44F1066BB5F4F7881F1C8D0F977E9A5', '11B2315B14804F3F91CF1E523E1D34F0', '', '', 'C, D', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '1', '2016-01-05 10:34:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('C30C352232A347CBA31D49BA18A9E785', '<p>下列关于成员变量和局部变量的说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('C335D49C132E41599266BC11F1EDE53C', '<p>下面关于Java接口的说法正确的是( ) ----- 多选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('C37EB787F1314BEB98DC5DCF0DD682AE', '<p>下面关于IO流中close()方法说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('C4866D79B1204FC6936BECD569B51A03', '<p>IP地址192.168.3.100属于哪类IP( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '86CD29E675474B1F922662BF9D093AF8', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('C4DB57BB99F24DBEB13E9519043321C2', '<p>如下代码①处填写什么代码才能完成 双元.jpg 的拷贝( ) ----- 多选<br></p><p>public static void demo1() throws FileNotFoundException, IOException {</p><p style=\"margin-left: 40px;\">FileInputStream fis = new FileInputStream(\"双元.jpg\");&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 40px;\">FileOutputStream fos = new FileOutputStream(\"copy.jpg\");&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 40px;\">①;</p><p>}</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('C6645ED07E5E43D1B02026C53C642B76', '<p>可以获取绝对值的方法是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('C6A225B19F4D45599BC79D4C66D1B27F', '<p>以下代码运行后输出的结果为( ) ----- 单选<br></p><p>public class Test {</p><p style=\"margin-left: 40px;\">public static void main(String[] args) throws IOException {</p><p style=\"margin-left: 80px;\">FileOutputStream fos = new FileOutputStream(\"h.txt\");</p><p style=\"margin-left: 80px;\">fos.write(256);</p><p style=\"margin-left: 80px;\">FileInputStream fis = new FileInputStream(\"h.txt\");</p><p style=\"margin-left: 80px;\">int x = fis.read();&nbsp;</p><p style=\"margin-left: 80px;\">System.out.println(x);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 80px;\">fis.close();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 80px;\">fos.close();</p><p style=\"margin-left: 40px;\">}</p><p>}</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('C720674C0FF943B8931BA0A155B188F5', '<p>切割多个空格的正则规则应该怎么定义( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('C7B29698CF024DB19EFC09C7E2BBA8C8', '<p>”abC”.concat(“e”).toUpperCase()的结果是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('C7DA23A6A4BA42C8B35BA4970157756D', '<p>以下描述错误的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('C7DBA0E790634060BA8E48F26C438FAB', '<p>关于Map.Entry接口说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('C830253B6B7848AC9B8F0FDA92C4A022', '<p>在正则中我想要真实的切割一个点(.)怎么引用( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('C95F3BF8FFDA49918691CE4261CCE135', '<p>将集合转成数组的方法是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('C9941695E82148F68B3F583A562C9A62', '<p>网络编程和下面哪几个技术关系比较大( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '86CD29E675474B1F922662BF9D093AF8', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('C9B9CE0BCC134C44A9DFA1BFB5E2F74C', '<p>下列不属于人机交互的方式(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('C9C731E277614F7587CA1496206D3471', '<p>删除文件的DOS命令(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('CAEE6E9B693D4C5492FCE7A7623C18A1', '<p>关于字符流拷贝非纯文本的说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('CB33FE5453DB4DAF895B84281A6C87D1', '<p>下列语句序列执行后，j的值是( ) ----- 单选<br></p><p>int j = 1;<br></p><p>for(int i = 5; i &gt; 0; i -=2)j *= i ;</p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('CB7D9F80ED264AB5A31D02CFB90BCFCF', '<p>请说出下列程序的运行结果(&nbsp;) ----- 单选<br>class Demo2_NoNameInnerClass {<br>&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Outer o = new Outer();<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;o.method();<br>&nbsp;&nbsp; &nbsp;}<br>}<br>interface Inter {<br>&nbsp;&nbsp; &nbsp;public void show1();<br>}<br>class Outer {<br>&nbsp;&nbsp; &nbsp;public void method() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;new Inter(){<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public void show1() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(\"show1\");<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}.show1();<br>&nbsp;&nbsp; &nbsp;}<br>}<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('CB85CC56285A4818B23686386CFED7BA', '<p>下列哪些不属于关系运算符( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('CB8F89FDA6D94D199548C3ECA0977F93', '<p>下列哪些方法可以创建目录( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('CBE5220D07344E00A659917DFD9CBB58', '<p>对于jdk安装目录下文件解释错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('CC439803EACC4AFCBC25A088871C8F30', '<p>对集合中的元素进行反转，以下那个方法可以实现( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('CCB84B105B274AF4ABBCA1FCD801D927', '<p>下列关于getClass()方法叙述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('CDF0A91CB25D402087422CB8EF9B441B', '<p>关于接口泛型的说法正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('CE396BF9BCF94F6BA3E7B417D0892085', '<p>关于Properties类中的load和store方法说法正确的是( ) ----- 多选</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('CE763E92F64448799744129E04A131E0', '<p>下列关于int[][]&nbsp;arr = {{1,2,3},{4,5},{6,7,8,9}}的说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('CF14E6E17877442E9724C74A118A9D95', '<p>下面说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('CF1F2A699D204A4EA6A220E8024BEB0E', '<p>下列关于对象成员占用内存的说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('CFAD69DD0D5049CA8C1349C029A0514E', '<p>有如下java程序，要想在控制台输出10，请补齐代码(&nbsp;) ----- 单选<br>class Demo1_InnerClass {<br>&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Outer o = new Outer();<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;o.method();<br>&nbsp;&nbsp; &nbsp;}<br>}</p><p>class Outer {<br>&nbsp;&nbsp; &nbsp;public void method() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//【补齐代码】 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;class Inner {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public void print() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(num);<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Inner i = new Inner();<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;i.print();<br>&nbsp;&nbsp; &nbsp;}<br>}</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D012244D06BD4C368EF64A55C01285F9', '<p>打开DOS控制台最快捷的方式(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D03C5B366ED040E59A5EB7F0847BE3FA', '<p>下列关于参数传递的说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D056B5E073414D30AA34FAC661845B39', '<p>下列关于List说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D05C0D691F944D1F9968D276C41994D5', '<p>获取Map集合的长度，可以通过以下那个方法实现( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D072049C8C034D4491432EA58735B4C3', '<p>阅读下面的代码，给出结果(&nbsp;) ----- 单选<br>class HelloWorld {<br>&nbsp; public static void main(String [] args){<br>&nbsp;&nbsp; &nbsp;int a;<br>&nbsp;&nbsp; &nbsp;System.out.println(a);<br>&nbsp; }<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D0CEBD11343C4570937E04BC5926DC7E', '<p>在main方法中定义int[] arr = {1,2,3,4,5},如何获取该数组的长度( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D1239F78C184432CAFB7CED4F941D4B5', '<p>若a和b均是整型变量并已正确赋值，正确的switch语句是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D181F1B5A66B4F80B85A2B96AF4CE0F7', '<p>正确打印水仙花数的选项( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D1BA325130EA460F85F8E56D4406A40D', '<p>方法重写又可以称为以下哪种(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D236ADB4E3D0408CBE101DCA23AC8E77', '<p>下列哪个是并发修改异常( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D2B57A01A9774F96A298B625391C427E', '<p>下列说法哪个错误？(&nbsp;) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D38D5E17D79C4BB7BA018C0FC93996E3', '<p>下列关于List子类对象存储元素的说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D3C8927E157C4962800409D5D21A5F0E', '<p>public void print(Student s){}该方法正确的调用是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D41C9426C4BF4B33BE35AD5885478B07', '<p>下列关于Eclipse的安装与卸载描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D4DE6C245A9440E7A684062758C9C347', '<p>需求：模拟登录,给三次机会,并提示还有几次。 用户名和密码都是admin,根据需求补全下列代码( ) ----- 单选<br>&nbsp;&nbsp; &nbsp;public class Test1 {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Scanner sc = new Scanner(System.in);&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for(inti = 0; i&lt;3; i++) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(\"请输入用户名:\");<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;String userName = sc.nextLine();&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(\"请输入密码:\");<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;String password = sc.nextLine();&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(\"admin\".equals(____) &amp;&amp; \"admin\".equals(____)) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(\"欢迎\" + userName + \"登录\");<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;break;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}else {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(i ==____) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(\"您的错误次数已到,请明天再来吧\");<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}else {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(\"录入错误,您还有\" + (2-i) + \"次机会\");<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;}<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D50355B184A74EAFB20599199DC3C329', '<p>关于Java的jar包描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D525B443A8604299A35D9F61CF559E3F', '<p>补充代码完成二维数组的遍历的是( ) ----- 单选<br></p><p>class Test1_Array {<br>&nbsp; public static void main(String[] args) {<br>&nbsp; &nbsp;&nbsp;int[][] arr = {{1,2,3},{4,5},{6,7,8,9}};<br>&nbsp; &nbsp; for (int i = 0;i &lt; arr.length ;i++ ) {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp; &nbsp; &nbsp;&nbsp;补充代码{&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;System.out.print(arr[i][j] + \" \");<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;System.out.println();<br>&nbsp; &nbsp; }<br>&nbsp;&nbsp;}<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D55A5B0A8D3F401A9E8D9EE820D72B85', '<p>关于方法重写说法正确的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D575FB6A65FA4EA9B1AC66964876F719', '<p>下面的类属于字符缓冲流的是( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D5A0BFEB057D4EB88BB685E54BF0562E', '<p>long类型的包装类是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D5C23625513E46A5B20CC5513DD369E9', '<p>Java I/O流中关闭流的操作应该放在异常处理的哪个位置( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D5CA68DAC00C46709D7913CC0252068C', '<p>下面说法错误的一项是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D5EA2CEE869A44D39A87EB4A3A49838F', '<p>下面的哪个类代表字符输出流到字节输出流转换的桥梁( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D61EA19FB199424B9CCDD97BD2CACAC2', '<p>TreeSet底层是什么实现的( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D673A54F40704922BD0286D2E93546C6', '<p>下列哪项不属于File类的构造方法( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D67896CD244343D09B93FDC307874825', '<p>System.getProperties()的作用是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D6A1F13C773E4C1FA93BE52EBA23D2C8', '<p>基本数据类型的包装类一共有几个( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D6D6796525174C03A446CEFC57093B0F', '<p>读下面这段代码,选择输出结果( ) ----- 单选<br></p><p>public static void main(String[] args) {<br>&nbsp; int a = 3, b = 5;<br>&nbsp; int max = a &gt; b ? a : b;<br>&nbsp; System.out.println(max);<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D72D6374D0A84E4C9F9D56B4703DC4ED', '<p>下列关于FileOutputStream类的write(byte[] arr, int a, int b)说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D7690B5A97EE496F94666765927C8F0B', '<p>假设存在xxx.txt文件,内容为”大家好”,以下代码运行的结果为( ) ----- 单选<br></p><p>public class Test {</p><p style=\"margin-left: 40px;\">public static void main(String[] args) throws IOException {</p><p style=\"margin-left: 80px;\">FileReader fr = new FileReader(\"xxx.txt\");</p><p style=\"margin-left: 80px;\">FileWriter fw = new FileWriter(\"zzz.txt\");&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 80px;\">int c;</p><p style=\"margin-left: 80px;\">while((c = fr.read()) != -1) {</p><p style=\"margin-left: 120px;\">fw.write();</p><p style=\"margin-left: 80px;\">}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 80px;\">fr.close();</p><p style=\"margin-left: 80px;\">fw.close();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 40px;\">}</p><p>}</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D7983AD07843499CA3148A18146E6198', '<p>关于静态注意事项说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D7A4A57FC12E474CBB9AE88C0D135A9D', '<p>获取指定目录下所有的文件对象，可以通过哪个方法实现( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D7C9C9F9A18347739E33E66F88405FB1', '<p>从控制台读取内容时，所使用到的Scanner对象的参数是谁( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D82E262D49964DA5BAD682A347609C27', '<p>关于path环境变量正确的说法是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D8BEF3D0A1954D7FA0AD30A4C8CE1BA4', '<p>下列定义二维数组的格式正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D8C854B6CEFF48A4A93ECEF0580C6ADF', '<p>下面程序的运行后,结果正确的是( ) ----- 单选</p>\r\n\r\n<p>int a=1,b=2;</p>\r\n\r\n<p>int c=(a+b&gt;3?a++:++b);</p>\r\n', 'BE76EA25296E421B8A802DDAD0BD832A', '1B07B4E69F234FA09EC6D598B37EF8BC', '722481370F0749C8BF358A29AA376ED8', '1ADC5E7C10634031AA943804E0345AFC', '', '', 'B', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '1', '2016-01-05 10:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D8D5184E3E7648339A82A7E8DA4E6F2B', '<p>以下关于java异常说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('D909E65D60F44C7B89EBCD3F65C1B5F6', '<p>if表达式的流程如下，请选择描述错误的选项( ) ----- 单选<br></p><p>if(比较表达式){<br>&nbsp; 语句体1;<br>}else{<br></p><p>&nbsp; 语句体2;<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('DA1E40CB8C9D4BA79365EE3900756613', '<p style=\"margin-left:40px\">下列增强for循环的代码中，有关说法正确的是( ) ----- 单选</p><p style=\"margin-left:40px\">for(int&nbsp;x&nbsp;:&nbsp;arr){</p><p style=\"margin-left:40px\">System.out.println(x);</p><p style=\"margin-left:80px\">}</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('DA5004A928AF4E9282094B04A3D69C22', '<p>运行下面代码输入5 、6得到的图形是( ) ----- 单选<br></p><p>public class Test6 {<br>&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Scanner sc = new Scanner(System.in);<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(\"请输入行数:\");<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int row = sc.nextInt();<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(\"请输入列数:\");<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int column = sc.nextInt();<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;print(row, column);<br>&nbsp;&nbsp; &nbsp;}</p><p>&nbsp;&nbsp; &nbsp;private static void print(int row, int column) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for (int i = 1; i &lt;= row; i++) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for (int j = 1; j &lt;= column; j++) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.print(\"*\");<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println();<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;}<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('DAA71957B76C40E5BC543E3FE8E9A8D3', '<p>以下代码运行后输出的结果为( ) ----- 单选</p><p>public class Test1 {</p><p style=\"margin-left: 40px;\">public static void main(String[] args) throws IOException {</p><p style=\"margin-left: 80px;\">DataOutputStream fos = new DataOutputStream(new FileOutputStream(\"h.txt\"));</p><p style=\"margin-left: 80px;\">fos.writeInt(256);</p><p style=\"margin-left: 80px;\">DataInputStream fis = new DataInputStream(new FileInputStream(\"h.txt\"));</p><p style=\"margin-left: 80px;\">int x = fis.readInt();&nbsp;&nbsp;</p><p style=\"margin-left: 80px;\">System.out.println(x);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 80px;\">fis.close();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 80px;\">fos.close();</p><p style=\"margin-left: 40px;\">}</p><p>}</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('DAB3B91EDCEA4ABBBA424F0AB07D8190', '<p>StringBuffer类当中的哪个方法可以获取StringBuffer对象的理论容量( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('DACCE3CDF70A4369877FCA4442FEA708', '<p style=\"margin-left: 40px;\">下列代码list中的元素存储的顺序是( ) ----- 单选</p><p style=\"margin-left: 80px;\">LinkedList&nbsp;list&nbsp;=&nbsp;new&nbsp;LinkedList();</p><p style=\"margin-left: 80px;\">list.addFirst(\"a\");</p><p style=\"margin-left: 80px;\">list.addFirst(\"b\");</p><p style=\"margin-left: 80px;\">list.addFirst(\"c\");</p><p style=\"margin-left: 80px;\">list.addFirst(\"d\");</p><p style=\"margin-left: 80px;\">list.addLast(\"e\");</p><p style=\"margin-left: 80px;\">System.out.println(list);</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('DB704B6ADA424AA29065E34D55EA8425', '<p>下列关于包的描述错误的是(&nbsp;) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('DBA85C4AA13D48568298D942257B447B', '<p>下列程序的运行结果( ) ----- 单选<br>&nbsp;&nbsp; &nbsp;class Person {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;private int age;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;private String name;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public Person(int age, String name) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;super();<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;this.age = age;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;this.name = name;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;public class Demo4_Equals {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;Object obj1=new Person(10,\"张三\");<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;Object obj2=new Person(10,\"张三\");<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;System.out.println(obj1==obj2);<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;System.out.println(obj1.equals(obj2));&nbsp;&nbsp; &nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;}<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('DBBEE1769E404ADCAD4462A129F60758', '<p>下面哪个关键字不是Java中的权限修饰符(&nbsp;) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('DBE23E3CE6D04E4DB47556C816E58864', '<p>下列关于Thread类提供的线程控制方法的说法中，错误的一项是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('DBEF0A429C86455EA9EACB2E98F4EDAC', '<p>关于对象操作流的描述正确的是( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('DBFA1AEEDCD746B7BB2C6FC587226ED5', '<p>下列程序的运行结果是( ) ----- 单选<br>&nbsp;&nbsp; &nbsp;package com.itheima.demo;<br>&nbsp;&nbsp; &nbsp;class Bird{<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;class Demo {</p><p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; Object object = new Bird();<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; System.out.println(object.getClass());<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;}<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('DC03150AE72749B5A74CA278014B2295', '<p>下列哪些选项是Java I/O中字符输出流FileWriter类中的write方法( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('DCD9AD1699694ABFA8E944983F26F017', '<p>下列关于多线程的描述正确的是( ) ----- 多选</p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('DCEA05941DA1408989ACA558273E8284', '<p>下列关于数组数据结构描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('DD3CB7FE0943492EBD0EC6B87478A802', '<p>在main方法中定义Demo d = new Demo();Demo d1 = d;的说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('DD60C385B16445F1931B6C34F5E3A771', '<p>可以将一个字符串转换成StringBuffer的方式,哪个是正确的( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('DDB499346C3541349E943B26C74E6BA2', '<p>下列哪一个类实现了线程组( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('DDC888002C8D4CB7AF2E2977365CD216', '<p>关于下面程序说法正确的是( ) ----- 单选<br></p><p>Scanner sc = new Scanner(System.<em>in</em>);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>System.<em>out</em>.println(\"请输入一个路径:\");</p><p>while(true) {</p><p style=\"margin-left: 40px;\">String line = sc.nextLine();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 40px;\">File file = new File(line);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 40px;\">if(!file.exists()) {</p><p style=\"margin-left: 80px;\">System.<em>out</em>.println(\"呵呵:\");</p><p style=\"margin-left: 40px;\">}else if(file.isDirectory()) {</p><p style=\"margin-left: 80px;\">System.<em>out</em>.println(\"哈哈\");</p><p style=\"margin-left: 40px;\">}else {</p><p style=\"margin-left: 80px;\">return file;</p><p style=\"margin-left: 40px;\">}</p><p>}</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('DE265D253B9F4F8DA1BF8173BE460D09', '<p>下列关于ArrayList的contains(Object obj)方法的作用说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('DE3E588268E544EDAC25B5FE6768DDEF', '<p>Itetator迭代器中的hasNext()方法的作用是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('DE9B7F867EE2467AAB50F96A440F3D06', '<p>使用Socket套接字编程时，为了向对方发送数据，需要使用哪个方法获取流对象( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '86CD29E675474B1F922662BF9D093AF8', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('DED238E982B3409BA7E2767A01A90E29', '<p>如下代码①处填写什么代码才能完成 双元.jpg 的拷贝( ) ----- 单选<br></p><p>public static void demo1() throws FileNotFoundException, IOException {</p><p style=\"margin-left: 40px;\">FileInputStream fis = new FileInputStream(\"双元.jpg\");&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 40px;\">①;</p><p style=\"margin-left: 40px;\">int b;</p><p style=\"margin-left: 40px;\">while((b = fis.read()) != -1) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 40px;\">fos.write(b);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; }</p><p style=\"margin-left: 40px;\">&nbsp; &nbsp; &nbsp; fis.close();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 40px;\">&nbsp; &nbsp; &nbsp; fos.close();</p><p>}</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('DEF376AD9E24405AB29FF39D5CCF73B6', '<p>观察下面程序，以下哪个选项是错误的( ) ----- 单选<br></p><p>①<br>public String test(){<br>&nbsp; return \"\";<br>}<br>②<br>public void test(String a){}<br>③<br>public void test(int b){}<br>④<br>public void test(String a,int b){}<br><br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('DF023BB151E44BD88EF66D5BA9FA5C5E', '<p>通过哪个关键字可以区分属于父类的成员变量(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('DFF41E4B9E094818AD405D0B74BBF898', '<p>UDP协议的发送数据方法是什么( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '86CD29E675474B1F922662BF9D093AF8', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('DFFB2602D6244F6C94FF9520BF0E43C5', '<p>关于RandomAccessFile的描述正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E0006883C7F3414383C990502DBD087D', '<p>下列选项中关于JDK5的新特性错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, 'C2848E4C98F7463680B35F88166CEC3F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E044C868B30B47DF8E38653F878C0DD7', '<p>根据下面一段代码判断其输出结果的次序依次是( ) ----- 单选<br></p><p>public class Test4 {<br>&nbsp; public static void main(String[] args) {<br>&nbsp; &nbsp; System.out.println(\"Hello01\");<br>&nbsp; &nbsp; System.out.println(\"Hello02\");<br>&nbsp; &nbsp; System.out.println(\"Hello03\");<br>&nbsp; &nbsp; System.out.println(\"Hello04\");<br>&nbsp; }<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E0776C47C6974C1983E9E63838AC8011', '<p>下列关于JavaBean类的说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E08D455384A148378FEA239EA4C17C16', '<p>下面能够输出4行5列星星的代码是哪一个( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E08F55F51B3148DCBB8DBC31CD0E2A9A', '<p>关于自定义字符数组拷贝文件的说法错误的是( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E092B7D678094144B90707B4288ED5F7', '<p>在main方法中定义int[][] arr = int[3][3]说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E0A6C161809B45E4A1AE6465A1BE19F5', '<p>BufferedInputStream这个类是哪个设计模式的体现( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E0CBD172F7544F0B8F9967B9B6F41B6F', '<p>下面的哪个流表示内存输出流( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E12729C58134468184A5EB870BD048FF', '<p>下面哪个循环是书写正确的( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E19659CECF6E4E53BD715D31570B7F8D', '<p>下面说法正确的是( ) ----- 多选</p>\r\n', 'A93CBEC076AF471389ED002BFAE6CDB4', 'CC18FDF549D54E56B542769BF9063D23', '1058F848F27542A2A9448DCEA98DB9A0', 'AB11E9D62C7F4CE5A566B44917F4DBE1', '', '', 'C', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '1', '2016-01-05 00:13:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E199B51ED8D7436ABCBC47BFAF515825', '<p>下列关于void的说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E1C51F373914491B8DB8D8BA07AE4CBB', '<p>下面代码输出的结果是&nbsp;( ) ----- 单选<br>public static void main(String[] args) {<br>&nbsp; int x = 3, y = 5, z = 9;<br>&nbsp; int temp = x &lt; y ? x : y;<br>&nbsp; int min = &nbsp;temp &lt; z ? temp : z;<br>&nbsp; System.out.println(min);<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E24407A59AA44399846B7A85F760C4F5', '<p>下列语句序列执行后，r 的值是( ) ----- 单选<br>public static void main(String[] args) {<br>&nbsp; char ch = \'8\';<br>&nbsp; int r = 10;<br>&nbsp; switch (ch + 1) {<br>&nbsp; &nbsp; case \'7\':<br>&nbsp; &nbsp; &nbsp; r = r + 3;<br>&nbsp; &nbsp; case \'8\':<br>&nbsp; &nbsp; &nbsp; r = r + 5;<br>&nbsp; &nbsp; case \'9\':<br>&nbsp; &nbsp; &nbsp; r = r + 6;<br>&nbsp; &nbsp; &nbsp; break;<br>&nbsp; &nbsp; default:<br>&nbsp; &nbsp; &nbsp; r = r + 8;<br>&nbsp; }<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E2525262D08243E38EADD4BF65ACBA41', '<p>Calendar当中对add()方法描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E279B9ABBE7D4388B25EDB69A3610DAC', '<p>给定两个java程序如下，编译运行结果是( ) ----- 单选<br>public interface Face{<br>&nbsp;&nbsp; &nbsp;public static final int counter = 40;&nbsp;<br>}&nbsp;<br>public class Test implements Face{<br>&nbsp;&nbsp; &nbsp;private static int counter; &nbsp;<br>&nbsp;&nbsp; &nbsp;public static void main(String[]args){&nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;System.out.println(++counter);&nbsp;<br>&nbsp;&nbsp; &nbsp;}<br>}<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E29A9AEA6D304ECFA5AB1DF295D2E766', '<p>请在____处补齐下列程序的代码(&nbsp;) ----- 单选<br>class Demo1_InnerClass {<br>&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//补齐代码 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br>&nbsp;&nbsp; &nbsp;}<br>}</p><p>class Outer {<br>&nbsp;&nbsp; &nbsp;static class Inner {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public static void print() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(\"print\");<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;}<br>}</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E3074074B0594D58B0877A11149B5156', '<p>正则表达式中[^abc]描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E370201C092845348D435F665804D228', '<p>下列哪个选项是错误的(&nbsp;) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E38D396B8E074D408FD29D50FAE5C90B', '<p>数组的索引是从几开始的( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E39B53EFE30E439CBE770B296562C2F0', '<p>下列关于Java中Runnable和Callable的区别说法正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E3A82A2134784974A7055D3F90358409', '<p>String类中split()方法描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E3B0235E2A2D4BDDB3F100D9CD28305F', '<p>关于类的命名，正确说法是( ) ----- 多选</p>', '2F59E16FF307463A8ED3CD2120A9AF5A', '43B808E7FE8B45DFBD51FE3A34D7552A', 'A2E82A03EECF41E6890D54453FD2B437', 'C8BF9E06385E498BB6EEF6464C945402', '', '', 'B, C', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '1', '2016-01-05 00:09:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E3BD11B650F54823B2C4587D1C7AC065', '<p>下列关于成员变量的说法错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E46FF59D07254629BFC567C7816BDD44', '<p>下面选项对方法流程描述正确的是( ) ----- 单选<br></p><p>public class Test6 { &nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int sum = add(10,20); &nbsp; &nbsp; &nbsp;①<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(sum); &nbsp; ②<br>&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;public static int add(int i, int j) { &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int sum = a+b; ③<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return sum; &nbsp; &nbsp;④<br>&nbsp;&nbsp; &nbsp;}<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E48D6C8EE79F469E8142C778E0AC2466', '<p>一个线程通过下列哪种方法将处理器让给另一个优先级别相同的线程( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E490CDF3A39043E690E3240AA06BAB4A', '<p>java注释有3种,单行注释,多行注释和文档注释,下列有关注释的说法不正确的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E493D22E863643849AD408D19B0C6E82', '<p>下列关于Java I/O中哪个流可以将多个文件中的内容合并到一个文件中( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E4A02616EFE449F080062EB49D422A8D', '<p>关于DataInputStream和DataOutputStream说法错误的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E4AAC9803A204AECA08B822E958F6BC7', '<p>下列关于sleep()和wait()方法说法错误的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E572A6C1E75146FE892D1951AC55C5ED', '<p>缓冲流是否需要关闭( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E7FF18CD2F914A7489A76964CF88787A', '<p>如下程序，要输出HelloWorld，___处应填什么代码(&nbsp;) ----- 单选<br>class Test2_NoNameInnerClass {<br>&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;______//补齐代码__________<br>&nbsp;&nbsp; &nbsp;}<br>}</p><p>interface Inter {&nbsp;<br>&nbsp;&nbsp; &nbsp;void show();&nbsp;<br>}</p><p>class Outer {&nbsp;<br>&nbsp;&nbsp; &nbsp;public static Inter method() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return new Inter() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public void show() {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(\"HelloWorld\");<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;};<br>&nbsp;&nbsp; &nbsp;}<br>}</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E83B1C8FAA5D4B528EECE56AA955A34A', '<p style=\"margin-left: 80px;\">观察如下代码，以下哪个选项是正确的( ) ----- 单选</p><p style=\"margin-left: 80px;\">void&nbsp;show(int&nbsp;…&nbsp;a){</p><p style=\"margin-left: 80px;\">System.out.println(a[0]);<br></p><p style=\"margin-left: 80px;\">}<br></p><p style=\"margin-left: 80px;\">show(3,2,4);</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E85D40CAE492434BBCA76F3404531777', '<p>下列关于Object类的toString方法描述正确的是( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E9413BB2B1454186AA01B707B2AC9C4E', '<p>int类型的包装类是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E9E403D75C4741D1AA48CBBA3ED841EA', '<p>下列关于常量分类错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('E9FB9E6007C84DA380F98382B484735C', '<p>关于提高Eclipse的开发效率描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('EA0C77D893244729AA6C38CBC9DE7EBB', '<p>当下列哪个方法终止时，能使线程进入死亡状态( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('EA435461E9804BB3BD076299F94596C9', '<p>可以将StringBuffer从指定位置截取到末尾的方法是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('EA62BBDB43914C7284978905E43339C6', '<p>java程序通过javac编译后会生成对应的文件是什么(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('EAC6F8DD5F76422FB9B4EC9FACF0B092', '<p>下面对端口的概述哪个是错误的( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '86CD29E675474B1F922662BF9D093AF8', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('EAFBB0FAF40346CE8DDE217B235265AA', '<p>使用UDP套接字通信时，哪个方法用于接收数据( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '86CD29E675474B1F922662BF9D093AF8', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('EAFC0E3832DA40F7A57A9116F4F520F1', '<p>下面的说法正确的是( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('EB81C87C0CF44DD8B69DB89B7956E0F2', '<p>给定如下Java程序代码，在_____横线处加入哪些语句，可以使这段代码编译通过( ) ----- 单选<br>interface Parent{<br></p><p style=\"margin-left: 40px;\">public int count(int i);<br></p><p>}<br></p><p>public class Test implements Parent {<br></p><p style=\"margin-left: 40px;\">public int count(int i){<br></p><p style=\"margin-left: 80px;\">return i % 9;<br></p><p style=\"margin-left: 40px;\">}<br></p><p style=\"margin-left: 40px;\">public static void main(String[] args){<br></p><p style=\"margin-left: 80px;\">________________<br></p><p style=\"margin-left: 80px;\">int i = p.count(20);<br></p><p style=\"margin-left: 40px;\">}<br></p><p>}<br><br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('EB970D206E3649868C19C270C41904E4', '<p>以下关于setDaemon()方法，说法正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('EBC63FEDFC534B978F58EAC50EC5950E', '<p>下列说法正确的是(&nbsp;) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('EBD6207FD03840779A2B1F3FACF35868', '<p>以下说法错误的是( ) ----- 多选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('EC033C2AC55D4A8C8D14153C9FA79CCF', '<p>列出当前文件夹下所有文件和文件夹的DOS命令(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('EC0F5C6702344101B4BE3027F137FD64', '<p>可以将StringBuffer从指定位置截取,到指定位置结束的方法( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('EC1D818F03CE4BA1B7BF389338A807A0', '<p>定义数组格式正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('ED1C8DF591CB4DF1BD8E4721001C5DF7', '<p>下列关于Scanner的说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('ED9C63FEB43D49AAA6970E24EA92C336', '<p>BigInteger类中的public BigInteger divide(BigInteger val)的作用是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('EEFA517C04AE44C58F1FB91A177EB0BF', '<p>下面哪一段代码能够控制输出2次”黑马程序员”( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('EF20A1F2C88947A09F8FAEE12B66E8EA', '<p>下列关于死锁的阐述，错误的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('EF6415F2F8854DC4973ECADB5D14546B', '<p>下列程序的输出结果是( ) ----- 单选<br>&nbsp;&nbsp; &nbsp;class Demo {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;publicstaticvoid main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Scanner sc = new Scanner(System.in);&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(sc.nextInt()+\" \"+sc.nextLine());<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;}<br>从键盘录入:20回车<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('EFFFA7A3C7D4439E9ACB8A91C58CB8BA', '<p>使用RandomAccessFile类完成随机读写的操作，要想改变读写的位置，使用下列哪个方法( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F013B232A4F24439B78AFC7C747053E2', '<p style=\"margin-left: 40px;\">观察如下代码，下列说法不正确的是( ) ----- 单选</p><p style=\"margin-left: 40px;\">public&nbsp;class&nbsp;Tool&lt;Q&gt;&nbsp;{</p><p style=\"margin-left: 40px;\"><br></p><p style=\"margin-left: 40px;\">}</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F0369D708E5E4DA3A371B2C92AAFDADB', '<p>用于定义类成员的访问控制权的一组关键字是(&nbsp;) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F038CBE9AC384DFEA52E7CA1D0712416', '<p>字符的拷贝可以用下面的哪些方法( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F0BCFB0C0DC640B990467D6472937FAA', '<p>下面的代码能用于输出字符数组ch中每个字符出现的次数，应该填入位置①的代码是( ) ----- 多选<br></p><p style=\"margin-left: 40px;\">public static void main(String[] args) {&nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;char[] ch = { \'a\', \'c\', \'a\', \'b\', \'c\', \'b\' };&nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;HashMap map = new HashMap();&nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for (int i = 0; i &lt; ch.length; i++) {&nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//位置①<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}&nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(map);&nbsp;<br>} <br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F11B456C93F444F1A347EA1E79E7FBC7', '<p>关于反射机制下列说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, 'C2848E4C98F7463680B35F88166CEC3F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F1694C4FD1ED47FBBF31CE352344F49E', '<p>关于Eclipse与MyEclipse的描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F1AFAEA79CC340B2B2BCC378C0F81379', '<p>下面哪项不是TCP的特点( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '86CD29E675474B1F922662BF9D093AF8', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F1B12BA5A25E4B24AF72821832579E3A', '<p>关于构造方法重载说法正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F21472BC32C54433B07816F5A09E80F0', '<p>下列描述错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F26C847CE8BA4DF190702CAC25325E9B', '<p>看代码，选择输出内容( ) ----- 单选<br>Demo {<br></p><p style=\"margin-left: 40px;\">public static void main(String[] args) {<br></p><p style=\"margin-left: 80px;\">Person p1 = new Person();&nbsp;&nbsp; &nbsp;<br></p><p style=\"margin-left: 80px;\">p1.name = “麦克”;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br></p><p style=\"margin-left: 80px;\">p1.country = \"美国\";&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br></p><p style=\"margin-left: 80px;\">Person p2 = new Person();<br></p><p style=\"margin-left: 80px;\">p2.name = \"红杉\";&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br></p><p style=\"margin-left: 80px;\">p2.country = \"韩国\";&nbsp;&nbsp; &nbsp;<br></p><p style=\"margin-left: 80px;\">p1.speak();<br></p><p style=\"margin-left: 80px;\">p2.speak();<br></p><p style=\"margin-left: 40px;\">}<br></p><p>}<br></p><p>class Person {<br></p><p style=\"margin-left: 40px;\">String name;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br></p><p style=\"margin-left: 40px;\">static String country &nbsp;= &nbsp;中国;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br></p><p style=\"margin-left: 40px;\">public void speak() {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br></p><p style=\"margin-left: 80px;\">System.out.println(name + \"...\" + country);<br></p><p style=\"margin-left: 40px;\">}<br></p><p>}</p>​', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F2BA91FEBE1441C69ABE862E9FC110C6', '<p>关于自然排序说法正确的是( ) ----- 多选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F307AA3E5E5B4A10B6616053F4AD8CEF', '<p>下面程序执行的结果是( ) ----- 单选</p>\r\n\r\n<p>int i = 100;</p>\r\n\r\n<p>while(true){</p>\r\n\r\n<p>&nbsp; &nbsp; if (i++ &gt; 100){</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; break;</p>\r\n\r\n<p>&nbsp; &nbsp; }</p>\r\n\r\n<p>&nbsp; &nbsp; System.out.println(i);</p>\r\n\r\n<p>}</p>\r\n', 'B7236E1B74884968804C07ED8AEB8B59', 'B3614E61360E414C9C2308C800E3E4DB', '2388E6DE7BBF4873882DEBAECA11F6D5', '72E8E00498A34326B020B82E18ED4249', '', '', 'B', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '1', '2016-01-05 10:36:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F369BA88280E4A3B85CD6AD676832054', '<p>以下代码运行后输出的结果是( ) ----- 单选<br></p><p>public class Demo8_Digui {</p><p style=\"margin-left: 40px;\">public static void main(String[] args) {&nbsp;</p><p style=\"margin-left: 80px;\">System.out.println(fun(8));</p><p style=\"margin-left: 40px;\">}</p><p>&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 40px;\">public static int fun(int num) {</p><p style=\"margin-left: 80px;\">if(num == 1 || num == 2) {</p><p style=\"margin-left: 120px;\">return 1;</p><p style=\"margin-left: 80px;\">}else {</p><p style=\"margin-left: 120px;\">return fun(num - 2) + fun(num - 1);</p><p style=\"margin-left: 80px;\">}</p><p style=\"margin-left: 40px;\">}</p><p>}</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F372CD79AB23497A9BB444A053550E83', '<p>关于TreeMap集合说法正确的是( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F3A9105F84FF4B619156FD271A5246E8', '<p>下列符合包的命名规则的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F4C9C8EF4BE240C1ADDA7ED299A3B3D6', '<p>关于十进制到任意进制换算说法正确的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F4D8A46773C14661A3D5A4FF4AA4851F', '<p>下列选项哪个正确( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F4F64204867443F6B7BAB2FA70C00131', '<p>关于Eclipse的工作空间配置描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F591CC06732443919C37C2191C470C9A', '<p>以下代码运行后输出的结果是( ) ----- 单选<br></p><p>public class Test {<br></p><p style=\"margin-left: 40px;\">public static void main(String[] args) throws IOException {</p><p style=\"margin-left: 80px;\">Properties prop = new Properties();</p><p style=\"margin-left: 80px;\">prop.setProperty(\"name\", \"张三\");</p><p style=\"margin-left: 80px;\">prop.setProperty(\"tel\", \"18912345678\");</p><p style=\"margin-left: 80px;\">Enumeration&lt;String&gt; en = (Enumeration&lt;String&gt;) prop.propertyNames();</p><p style=\"margin-left: 80px;\">while(en.hasMoreElements()) {</p><p style=\"margin-left: 120px;\">String key = en.nextElement();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 120px;\">System.out.print(key + \"：\");</p><p style=\"margin-left: 80px;\">}</p><p style=\"margin-left: 40px;\">}</p><p>}</p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F5D31655810B4243A0A9FE390258464E', '<p>看代码片段给出运行结果( ) ----- 单选<br>public static void main(String [] args){<br>&nbsp; byte b = 15;<br>&nbsp; b++;<br>&nbsp; b = b + 1;<br>&nbsp; System.out.println(b);<br>}<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F605CEE3377643D4A51B22A59CA20FFB', '<p>对于Arrays类的asList方法说法正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F61953694CE24E6B99668FCA1FE615BC', '<p>下列关于多态描述正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F61A30A255A94840B53AB86B49674CBE', '<p>下列关于命名规则错误的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F62FD53FC2854F519FF92BFFEE905FD7', '<p>已知Son类继承Father类，以下语句正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F6B45AA6D1AD4A4A82C0DA620C638610', '<p>下列说法哪个正确(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F6F150F653AF468E92A847EAB9D32540', '<p>下列关于HashSet描述正确是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F703041585B24DD19CA1C1AFD7B5CDEB', '<p>子类创建对象时，以下内容执行的顺序是(&nbsp;) ----- 单选<br></p><p>①父类构造代码块</p><p>②父类静态代码块</p><p>③子类构造代码块</p><p>④子类静态代码块</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F7B74976A0834AF7B38B52C2952E2CDF', '<p>针对写一个try，多个catch的异常处理代码，catch里边异常类型的顺序是( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F7B83A4A5F414E258FA2BE53B41E5D78', '<p>关于标识符说法正确的是(&nbsp;) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '2', '4', '0', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F7F7D00C082D4DCB94E2CB544ADC2B1D', '<p>如何获取一个类的字节码文件对象( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, 'C2848E4C98F7463680B35F88166CEC3F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F806AC447DBC45629E104EA8150E56E8', '<p>下列程序的输出结果为( ) ----- 单选<br>&nbsp;&nbsp; &nbsp;class Demo {</p><p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;String str = \"adcd\";<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;str.replace(\'d\',\'f\');<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println(str);<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;}<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F8D4337DFAE44C239026362752B65868', '<p>FileWriter类直接继承哪个类( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F8DF29A4DA084A118091C5C9157E7184', '<p>下列不属于面向对象的三大特征的是(&nbsp;) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F8FC413C1E344492BA0171CBBB2B2465', '<p>下列关于对象的说法错误的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '1', '2', '0', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F900394C5F5A4F54939C0CBE54C29761', '<p>以下说法正确的是( ) ----- 多选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F9340C57509444A9AE46E15B4EEAD30F', '<p><span style=\"font-size:8px;\">以下代码是声明实现&nbsp;Runnable&nbsp;接口的类，以创建新的线程并启动，在横线处填入哪些代码可以实现上述目标( ) ----- 单选</span></p><p><span style=\"font-size:8px;\">public&nbsp;class&nbsp;MyRunnable&nbsp;implements&nbsp;Runnable&nbsp;{</span></p><p style=\"margin-left: 40px;\"><span style=\"font-size:8px;\">public&nbsp;void&nbsp;run()&nbsp;{</span></p><p style=\"margin-left: 80px;\"><span style=\"font-size:8px;\">//&nbsp;do&nbsp;something…</span></p><p style=\"margin-left: 40px;\"><span style=\"font-size:8px;\">}</span></p><p><span style=\"font-size:8px;\">}</span></p><p><span style=\"font-size:8px;\"><br></span></p><p><span style=\"font-size:8px;\">public&nbsp;class&nbsp;MyRunnableTest&nbsp;{</span></p><p style=\"margin-left: 40px;\"><span style=\"font-size:8px;\">public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{</span></p><p><span style=\"font-size:8px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ____________________________________</span></p><p style=\"margin-left: 40px;\"><span style=\"font-size:8px;\">}</span></p><p><span style=\"font-size:8px;\">}</span></p>', null, null, null, null, null, null, null, null, '6ADD7CC7AADC4A008362BCADA885D97F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F9C9E3F1CC4049808E592A3A6DA32E59', '<p>下列描述正确的是( ) ----- 多选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F9CD2181E4DA4EA5B6E3930CF18E94C6', '<p>下面创建FileInputStream对象正确的是( ) ----- 多选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F9D20990860D414DA4E4E1F7B04D6F60', '<p>正则表达式中.代表什么( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('F9F75F27924C45FE8FBA6ED8B067242F', '<p>以下描述正确的是(&nbsp;) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('FA00992F4283462EADC6D32A015294D0', '<p>Java虚拟机（JVM）默认是如何来处理异常的( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '5F45982E95EF41CC9F6D57B2A6041385', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:47:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('FA15B559892248939704CFF2784239AE', '<p>下列说法错误的是(&nbsp;) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '2', '1', '2', '0', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('FA85969CBD934CE8B667BC44499BC40B', '<p>补全下列代码( ) ----- 单选<br>统计一个字符串中大写字母字符，小写字母字符，数字字符出现的次数,其他字符出现的次数<br>&nbsp;&nbsp; &nbsp;public class Test3 {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;String s = \"ABCDEabcd123456!@#$%^\";<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int big = 0;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int small = 0;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;intnum = 0;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int other = 0;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for(inti = 0; i&lt;s.length(); i++) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;char c = s.charAt(i);&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(__________) {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;big++;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}else if(c &gt;= \'a\' &amp;&amp; c &lt;= \'z\') {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;small++;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}else if(c &gt;= \'0\' &amp;&amp; c &lt;= \'9\') {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;num++;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}else {<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;other++;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}</p><p>&nbsp;&nbsp; &nbsp;}<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('FA8A7E3C7BAA4C9C9C34C59417EBAC70', '<p>给定如下java代码，要创建Shape类的子类Circle，以下代码正确的是( ) ----- 多选</p><p>abstract&nbsp;class&nbsp;Shape&nbsp;{&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;abstract&nbsp;void&nbsp;draw();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>}</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '4', '2', '4', '0', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('FBC5C3D0FBE747D99EBCCA018866C469', '<p>阅读下面代码段：</p>\r\n\r\n<p>public class Demo&nbsp;{</p>\r\n\r\n<p>　　public static void main (String[] args)&nbsp;<span style=\"line-height:1.6\">{</span></p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int[] arr = new int[10];</p>\r\n\r\n<p>　　&nbsp;&nbsp;&nbsp; System.out.println(arr[1]);</p>\r\n\r\n<p>　　}</p>\r\n\r\n<p>}</p>\r\n\r\n<p>执行结果正确的说法是( ) ----- 单选</p>\r\n', '5E2293A89DE04693B48AB495BD708327', '256B35D681844E78ADA6836FDF181F79', 'F9E198AD016346D7ACDC3A0B1F726EEA', '0A0600DB0EE64486B662607522E56135', '', '', 'C', null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '1', '2016-01-05 11:04:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('FBFD600345C746128474DC1110091CAC', '<p>以下哪个是向StringBuffer对象末尾追加数据的方法( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('FC1DC35DA4B54414A7E561293AEF4723', '<p>HashSet中常见的方法有( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '5457f929d77249029d5c8a03e239763c', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('FC416AC468EC47D88113BBCA9D8353E4', '<p>关于if语句与三元运算符描述正确的选项是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('FC8DEDFB10BE4BDF96606C3AE28D3980', '<p>下列不属于switch语句的特点的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('FE9CC184031F458CABB4A3434A9C2438', '<p>关于接口描述错误的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('FEFAB71B3F2C499DAE2CA8076F1BC0E9', '<p>下列哪些不属于运算符( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '1B7CC8D507D74312A0AD631818B37F91', '400a979ba2fe41e1bf04fd386cfbd493', null, '3', '1', '2', '0', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('FF25F22F71E4413F86B85CD668AAAE1A', '<p>关于实体类Student的描述正确的是( ) ----- 单选<br></p>', null, null, null, null, null, null, null, null, '2F2DF287BC86405E8CCF9AFAE581A92F', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question` VALUES ('FFD83203F8D84B398B12F29349D27B0B', '<p>下列描述正确的是( ) ----- 单选</p>', null, null, null, null, null, null, null, null, '14643F1AA94145788388230A57040C99', '400a979ba2fe41e1bf04fd386cfbd493', null, '1', '1', '2', '0', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);

-- ----------------------------
-- Table structure for tb_test_question_option
-- ----------------------------
DROP TABLE IF EXISTS `tb_test_question_option`;
CREATE TABLE `tb_test_question_option` (
  `id` varchar(32) NOT NULL COMMENT 'ID',
  `option` varchar(3000) NOT NULL COMMENT '选项',
  `is_truth` char(1) NOT NULL DEFAULT '0' COMMENT '是否是正确答案',
  `parent_id` varchar(32) NOT NULL COMMENT '所属试题ID',
  `create_time` varchar(100) DEFAULT NULL COMMENT '数据创建时间',
  `update_time` varchar(100) DEFAULT NULL COMMENT '修改时间',
  `del_time` varchar(100) DEFAULT NULL COMMENT '数据删除时间',
  `del` char(1) DEFAULT NULL COMMENT '删除状态',
  `reserve_field1` varchar(200) DEFAULT NULL,
  `reserve_field2` varchar(200) DEFAULT NULL,
  `reserve_field3` varchar(200) DEFAULT NULL,
  `reserve_field4` varchar(200) DEFAULT NULL,
  `reserve_field5` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tb_test_question_option
-- ----------------------------
INSERT INTO `tb_test_question_option` VALUES ('000101B1C2854BF2A6F40168137735BB', '<p>nextRandom(int&nbsp;i)</p>', '0', '45893D65D9D54B02A3DC7034F68BA22D', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0006AACAD76345639C0D7B1606C27600', '<p>是JDK1.2版本的<br></p>', '1', '910616FE32D74EDF9BE08990793380D7', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('00091D86D34D4917BCC125BD63CA44E8', '<p>查找数组<br></p>', '0', '12F15E24460741489FC9F95F49C8CF6F', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('00206468C87441AA95DD0CDBA0862B20', '<p>保证两个或更多线程同时开始和结束</p>', '0', '60E4ECA445284A43B1F902BE17E8DF56', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('002FE7C8AC124EAE95B0A8AB3FC738B6', '<p>该方法需要一个String类型的参数来指定要获取的属性名<br></p>', '1', '8020AD29906C45B9AF3DAB7E5994FD35', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('00407A8998DC4666836FC9338D905926', '<p>arr.length-1 “]” &nbsp;“,”<br></p>', '0', '4BD5FB6CCBF2416BB66C09067046831D', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0046650BD4B04B8AA2D63447D825330B', '<p>学生具有的属性是成员变量<br></p>', '0', '88B48617FD0D4665B7713D52AA670D39', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('00558893BE04495EA2B45EF7D267D277', '<p>打印数组<br></p>', '0', '12F15E24460741489FC9F95F49C8CF6F', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('00A370D274BF459D8BB81699C28BF381', '<p>LinkedList底层数据结构是数组</p>', '0', '17F1640F63494149AC681672117A2B5F', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('00AD33C531D24BC99805EFD5A4CC3874', '<p>8<br></p>', '1', 'D6A1F13C773E4C1FA93BE52EBA23D2C8', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('00CF4A5304C44301904A391D7F6D3497', '<p>要有继承或者实现关系<br></p>', '1', '760B0E3F38214009B32C614241582927', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('011EBA97046F47ECB918B77E0592F5E2', '<p>运行异常</p>', '0', '5408AD8EEC0946C49B68D68093806F21', '2016-01-02 21:48:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('012964DCA9E64757B823768229C6F8AF', '<p>大于一切排序过程，优先级高</p>', '0', '9BE0823A56E946E595E5B53ADE7C6B84', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('01769E3088504A7A8ED7BCA21A48784A', '<p>底层会调用obj的equals方法</p>', '0', '1E99BC1C9AD140F1AEF70A9684E9288E', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0183DC80BBA64D20B0CCBF0A4237E2E2', '<p>&nbsp;声明抽象类必须带有关键字abstract</p>', '1', '18D60A3738584A2C8AE5FBBCCF6A1A1A', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('018BE1289FE24CA8822F7517ED505AB7', '<p>&nbsp;Inner&nbsp;oi&nbsp;=&nbsp;new&nbsp;Outer.&nbsp;Inner();&nbsp;oi.print();</p>', '0', 'E29A9AEA6D304ECFA5AB1DF295D2E766', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('019F1CDF0B7B4E34BAA616563E62058C', '<p>字符流可以拷贝非纯文本文件<br></p>', '1', 'CAEE6E9B693D4C5492FCE7A7623C18A1', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('01A6FC7F5FC04A1598D94EAD532F77FA', '<p>年中的某一天<br></p>', '0', 'C090E3279C78499FBA2C55109E996B79', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('01D3E18B885545E3A3AEEEA8B3718DB0', '<p>迭代器可以遍历数组<br></p>', '1', '785A48B480A843E38BE9E375C5783B10', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('01D7DC07F35146459E3F12AD38807AC8', '<p>将字符串转成日期对象<br></p>', '1', 'AA82F2ACF1A347EABA14B929590FC824', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('01EC102CBCCF48949BA7432D8D1CFC54', '<p>a<br></p>', '1', '09250F5FB1EB4C31A84BCF7665381BDC', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('01EC61E07C13487C846D736D81803E7E', '<p>2<br></p>', '0', 'AD8126F22B9F40CC9BB5622A40D4C415', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('01EDBF6625B647B99D84FF12C61E2672', '<p>listIterator()方法是Collection里的方法<br></p>', '0', '6127974AD683482896FE2C196127A91A', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('01FD39171F0B4B3A965333DFDEDFDF9B', '<p>获取当前的操作系统的属性<br></p>', '1', 'D67896CD244343D09B93FDC307874825', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('01FFF6D4D0A8432390CD39798AF71B6B', '<p>long<br></p>', '0', 'D5A0BFEB057D4EB88BB685E54BF0562E', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0233AA2EAF484EED8E7C02C32454FE5E', '<p>List<br></p>', '0', 'AD289B8E864743678E2885D95CCC40E1', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('023E8154E79F469CAADB2063AE1C080C', '<p>小明A1<br></p>', '1', '09A95217367F4AD5A804067AE5BC46C5', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0252A93A9A6B42F09B6A1EC5B50D3339', '<p>&nbsp;FileReader类的read()方法可以按照字符大小读取<br></p>', '1', '23A1BC07261E4D148BCFF7800FD73746', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0253EAD42D1F49BB9DC1DB5AD8E9498B', '<p>10<br></p>', '0', '18DAE8B524B54C2FA88584881049C063', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('025C874663FD4708A0E50C3F37001B22', '<p>抽象类中的方法必须都是抽象的</p>', '0', '18D60A3738584A2C8AE5FBBCCF6A1A1A', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('02655C011A6D4C1BB2E6D370CBCDA490', '<p>arr和arr1指向的是同一个数组地址</p>', '0', '82D8B52B82CF44E6AE7EA66A24C6A7F5', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('027593B6288B4D78A559CC18B899060D', '<p>HashMap允许null键和值<br></p>', '1', '54A8D0C2268A4968AE8DEB65F03C3009', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('02846EE0B7B74BD0A57A3F9B92B433E7', '<p>3<br></p>', '0', '3588BD16F3F9415798119AB99396DAD9', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0299040A4E9647E198A6803645794122', '<p>a</p>\r\n', '0', '815707A427DB4395910AA176F36D07B3', '2016-01-05 11:00:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('02B15A3D6B324149924A0D30351E245F', '<p>以上都不对</p>', '0', '11CFABFBD4B24275A59916CA4A4EE08E', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('02D8BFF1C1B941E7A66CD3D48E60BBB6', '<p>Jdk1.7</p>', '0', '05B19DE7153D46E793BA78B89F5D2037', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('02F5409CB2FE47828E7FF5920BCE8CEE', '<p>Hello<br></p>', '0', '5163DBDAA61D403FA64CAADC30589FC2', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('02F8B96CC3CD40C9B08305C0CA07808E', '<p>list集合能存放new&nbsp;String()</p>', '0', '65135771ACA245C1969ED16F8AF18C3C', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('02FA2825FDAD4EF399F0AFE9D2F852E4', '<p>DatagramPacket<br></p>', '1', '21020886B96D43E99B075B11FE939BEB', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('030CF315B29841C0AAC66E9C190A75CD', '<p>该接口里面有抽象方法<br></p>', '0', '8359E963825544A9A9FBEC370ACC95B8', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0320DFC6D5A04E7E9FA5BAB50888DEA2', '<p>匿名内部类对象的本质是一个实现了接口或继承了类的匿名子类对象</p>', '1', 'EBC63FEDFC534B978F58EAC50EC5950E', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0357D4B7EBA647BFB5D29F6380D30B1E', '<p>BufferedReader br = new BufferedReader(new InputStreamReader(System.in));<br></p>', '1', '82A6C18C22BC4ABD853B2791C91EEA8C', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('03755A558EBF4C4290E8843C0BFEFEB8', '<p>void show(){}<br></p>', '0', '3E3E073C2B0D4E6F8BCA838807F0FA64', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('03A244012F3A45F892DA7CA5032E830D', '<p>如果没有任何引用执行该对象那这个对象就是垃圾,但不会马上释放掉<br></p>', '1', 'B95A2FCC46DC4E41B4B43A6BE35E0BA0', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('03B9E025F26D454DAD4C0A87EA1632F8', '<p>匿名内部类的前提是必须先存在一个类或接口</p>', '0', 'F21472BC32C54433B07816F5A09E80F0', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('03C5A7E0234E4ED091646CF901B5E5D2', '<p>int&nbsp;MALE&nbsp;=&nbsp;1;</p>', '1', '7CBA09F92E8243F887A5870A80CC1F46', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('03CAAC84061942FDA9EA6791404B193B', '<p>Serializable<br></p>', '0', '33653C13ED974192B90251FF05593801', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('03D3DDB89CA642A39C05D858EDFC9D23', '<p>栈里面可以存在常量<br></p>', '0', 'A22FC99A1847414BA590D98DC55DB4E7', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('03D4AA2A72E64DA98AA92EC7CC117A91', '<p>不能把数组转成集合</p>', '0', 'F605CEE3377643D4A51B22A59CA20FFB', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('03EC39DF9E2543D1BF0AB3352DFFDB73', '<p>HashSet保证了元素唯一和有序</p>', '0', 'F6F150F653AF468E92A847EAB9D32540', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('03F36C6CE63E4605A7C5761CB416F36B', '<p>int compareTo(String str)正数 负数 0<br></p>', '1', '23CF65229C414EA4AB416B8DD803955A', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0422639961664782BA2A8D06C999AA2D', '<p>由于人的姓名是不确定的，所以属性&nbsp;name可以加abstract修饰</p>', '0', 'A7836608D1E64786A4D85234C5295403', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0429216FD9604CA0AC56E934B080ED14', '<p>int[] arr[] = new int[][3];<br></p>', '0', 'D8BEF3D0A1954D7FA0AD30A4C8CE1BA4', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0436CD2A04894B0AB7F23AD87B77E457', '<p>final</p>', '0', 'BDF906495C89420D8FE41DB2ABB35FDF', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('04424654D2B74F1E8E8E96CA50E4513C', '<p>向下转型需要加强制转换符</p>', '0', 'C227C2AD2B684621A3C11949260EC402', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('046044AD449B40F5A7A971EB23BA83D3', '<p>listen()<br></p>', '0', 'EAFBB0FAF40346CE8DDE217B235265AA', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('046398E5DA954D3A9C198369FDD3DE24', '<p>reverse()<br></p>', '0', 'A0C2880F81BF48F1B52F1FB9877460BB', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('046ACEBEF6724410960397724A8BC089', '<p>==和equals有相同点<br></p>', '0', '69B956F2AF6A4DE9AFD7EF106E672FC0', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('047EBAB9D9AE4CF5A99FD1BC2DD89F7F', '<p>接口也继承Object类</p>', '0', '8C033FDAFFF64DC4991E80BF1DD2E9ED', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('047EBE32477C4811981713CDEDDC3C70', '<p>不要为了部分功能而去继承<br></p>', '0', 'B8257C4E694D4D92AE9E0D6F8727FB99', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('048B81C8DB744E7AA69D0DFD2082D64F', '<p>return可以返回数据<br></p>', '0', '220EC8E9622F4702A57A59C54B932E56', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0492372C40594E2A8C8C3647F466E2F0', '<p>老婆或老公</p>', '0', '8CD09E7AEE354B5986F896355F138795', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('04934C16D9E14A40ACF0B9DF965C6E73', '<p>Comparator</p>', '1', '0C5CBE3D8DDF46E281A0862052AE8890', '2016-01-02 21:48:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('049E8EF86789471D9F9F8F7A0C97E462', '<p>interface&nbsp;A&nbsp;extends&nbsp;B,C</p>', '1', 'A22444E251D24147A203939C7CF24DD4', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('04B076B54ACB49C093DBAF09B13404E1', '<p>Math.PI每次运行结果不一样<br></p>', '0', '525B7C54E37D46EAA896B2EDE0BBDD43', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('04D83CEB72834B7BA16B9CA8768592D5', '<p>int[] arr =new int[3]{1,2,3};<br></p>', '0', '3E074807A73A4601A9335B2CAF606171', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('050CDF12CB8E43FBACC716FFC149F1DA', '<p>局部内部类访问局部变量，局部变量需要加static</p>', '0', 'EBC63FEDFC534B978F58EAC50EC5950E', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0511EF6A364646C79423C0229BF7A4F3', '<p>compare()<br></p>', '0', '7A08FE2B04404496B27C9CBA0CAAC095', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('051A0B979E8F4FA2BBD5E1EEDE7F7303', '<p>&nbsp;jre<br></p>', '0', '8C77818A90E64208AE970DEFE35BE7B7', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('051DD89353EE48E6BAEFA95D88766167', '<p>6</p>', '0', '0025D65731D14DFF95E7955327D0DC27', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('052740F790B0447084C217083817C8F0', '<p>List是单列集合最顶层的接口<br></p>', '0', 'D056B5E073414D30AA34FAC661845B39', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0528BB81C3FE4D81914C219BD5BC2C0F', '<p>read()方法的返回值类型为int类型<br></p>', '0', 'AA60F98945B64B2A9EA5119DBEE91558', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('053AAFC1356D4B458EB38C22C1D39F95', '<p>4</p>', '0', '47F0A171A3524570A88D5B5DC293A113', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('05423CAD15124E928EF40BF374802A8C', '<p>Father&nbsp;f&nbsp;=&nbsp;new&nbsp;Father();</p><p>&nbsp;&nbsp;Son&nbsp;s&nbsp;=&nbsp;f;</p>', '0', 'F62FD53FC2854F519FF92BFFEE905FD7', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('05439AE741F2491A99F2FEB9388CF538', '<p>匿名内部类就是内部类的一种简化写法</p>', '0', 'F21472BC32C54433B07816F5A09E80F0', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('054933FF74DA4BF584429826B5FFAA13', '<p>API即Application Programming Interface缩写<br></p>', '0', '2CE1787CC2B9461CA64313EB9F496F3F', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('054963C33ADE47898949333283732B7E', '<p>put()<br></p>', '0', '905526DA178944C08A4FD5638923A5E1', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0553B1BFC52C4B0E95C89A73E54A9690', '<p>按照特定的顺序开发软件<br></p>', '0', '60AC22B4D0DA47718930B4F98369C472', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('057B82B317554CADB99A6B7A6D5E91CE', '<p>代理模式就是创建一个工厂，让工厂代替我们做事情<br></p>', '0', 'C0929634BB674A9E9A47634EAABA044F', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('05CC5367DFE147A6B32ABF026CB79DD7', '<p>[0-9]<br></p>', '1', '023743024EA94486BBC98B4E82A7E7AC', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('05E78B916CCB43BABA6152A63D6205BB', '<p>lengt<br></p>', '0', '2070C53ECECD4956AD117A097BCFC1EB', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('05FD016B6F7543328F07FD5C115BDE30', '<p>4</p>\r\n', '1', 'BA5E186DDF7E4012B542FECEA619047C', '2016-01-05 10:52:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('06116C98452C4E5FA30F8B52388E4F89', '<p>系数★基数的权次幂<br></p>', '1', '7C1CDDC0805F406D981C6B36FBF433D4', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('061274C3492D4DAFBA6D661878807768', '<p>class<br></p>', '1', '5163DBDAA61D403FA64CAADC30589FC2', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('061D009777EF4E8794E4D04A4156A517', '<p>两种循环任何时候都不可以替换</p>\r\n', '0', '1219DAFEA6724A5DA10B6474B81430E1', '2016-01-05 11:13:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('061F693692334F1DA929097AD26395E2', '<p>内部类可以通过super关键字访问外部类的成员</p>', '1', 'A01B816D6C0A473D8CD780F5518299F2', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0625D99CBECF4D3DAE20964867117F0B', '<p>获取集合中的上一个元素<br></p>', '0', 'DE3E588268E544EDAC25B5FE6768DDEF', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('062EE2EEBA44402FA56406DF58FB2DCA', '<p>? super E<br></p>', '1', 'B7EC491B45DF45B08BD24F050C11E29B', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0643D2F0F7704844A23F4F1142580893', '<p>底层是链表数据结构<br></p>', '0', '6A4FE26E975A4078BE9413A5335FF96E', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0646305C2C1B45A19440AD69FCF453ED', '<p>lookObject()</p>', '0', '75FDCF83B5864E2C94E3A434D9BE535C', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('068225E3683E4DE9827C304CC762E4C0', '<p>isEmpty()<br></p>', '0', '92E5166629224AB5A8A22B7DA6BD9021', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('069760F51EC24C2B99790E9E90EA9C97', '<p>栈<br></p>', '1', '8D00691B69E84B08A222DC27CFCEF295', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('06B743B856364CC6A1CAB80DE5D4CDA7', '<p>对字符串操作<br></p>', '0', '91E0524D0BCF45A0BE1B8C8D312DECD3', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('06C6458701564BBB82562BE830821A42', '<p>一个源文件可以没有package语句</p>', '0', '547D0BCFEA684F93847AD81A8F6FA523', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('06D0AE79276649CC8637834BB512BBA1', '<p>Eclipse一次只能导入一个工程<br></p>', '0', '8257B99B2060481195BD179F11E876BB', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('06E42E2D65FA4783937C7944B9E408B9', '<p>print(Student);<br></p>', '0', 'D3C8927E157C4962800409D5D21A5F0E', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('06F4106FB7A5410B86634223A6F0293E', '<p>成员属性的数据类型既可以是基本数据类型，也可以是引用数据类型</p>', '1', 'C1AD6963B5C944A79F5DBACD1B6440FA', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('074930BE66F74AEDA97DDD06A5795306', '<p>DatagramSocket ds = new DatagramSocket(port);<br></p>', '0', '542E4E11A78E42C4B90361B6A797B712', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0753842D4B8F466BA351D01DE53E1D83', '<p> 张三：18912345678</p>', '0', 'F591CC06732443919C37C2191C470C9A', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('07541554043B494D8320D885AF23C062', '<p>该类具体3个成员变量和2个成员方法<br></p>', '0', '6AA23DF2F0914A0394513EB052C500A7', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0755945AFE3C45FD9FC8D0A57AE9D59B', '<p>implements</p>\r\n', '0', '285E75587454458A8F4974FE0301A961', '2016-01-05 00:04:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('07597964BFE842CEA245C66584A607A4', '<p>RandomAccessFile类不属于流，是Object类的子类。但它融合了InputStream和OutputStream的功能。</p>', '1', 'DFFB2602D6244F6C94FF9520BF0E43C5', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('077B65B19E0B44ED8300B4D25983CC29', '<p>length()是List特有的方法<br></p>', '0', '51ABBF707F47415C82F43F64DDC49AF2', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('078B9A3D55A24DCAB87DE684228406BF', '<p>①②④③</p>', '1', '8CC5F2AD665846FD94B11045D6D4BB6B', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('07C40691EF284544BA779ECF0B4CD8E1', '<p>z.print();</p>', '0', '983E3C9038BC4A1D8A531525230D09CA', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('07C9FA76F754435F9F4B14662F919814', '<p>switch对具体的值进行判断<br></p>', '0', '8876473BE2CE4F08BDFEB8E09451105B', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('07CC788B09134A2E8CC53081C6BD4A46', '<p>final&nbsp;int&nbsp;MALE&nbsp;=&nbsp;1;</p>', '1', '7CBA09F92E8243F887A5870A80CC1F46', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('07D1F500B15F42AFA7A6315B05BD0292', '<p>小数常量<br></p>', '0', 'E9E403D75C4741D1AA48CBBA3ED841EA', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('07F794F88DDC4866B2707E8653A8ACA9', '<p>int indexOf(String str)<br></p>', '0', '6FC6703501074930A7659F20DE08FEF7', '2016-01-02 21:48:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('07FCC8381672472F8A14C888F8BB04BE', '<p>String&nbsp;line&nbsp;=&nbsp;sc.newLine();</p>', '0', 'A7C50291240940ADA8D491315993CB51', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('082DAB8E4BD14FCE80E9B44404ED7777', '<p>int<br></p>', '0', 'E9413BB2B1454186AA01B707B2AC9C4E', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('084025F689C54631A38D5383CCE6E744', '<p>服务器名称和文件<br></p>', '0', '9C107AB645FE41F38061CA0B661A7700', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0848CF719783427E834853AAE6F6F0F6', '<p>arr[0]里面存放的是1，arr[1]里面存放的是0</p>', '1', '1083B83DE4EE4DC4A824866A1BB7C7AF', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0893231C1F8543DCA6C4C8CFE8BEDCE6', '<p>System.out.println(arr[0]);会输出0<br></p>', '0', '38F24C79B28E4739949A918808B2CA05', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('08961348C04649E48EB466E3DBFD4D8E', '<p>writeInt()表示写一个int类型的数，readInt()表示读取一个int类型的数据</p>', '0', 'E4A02616EFE449F080062EB49D422A8D', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('08B600EBECBE4B819D1C79D5CCB6E341', '<p>sum = sum+arr[j][i];<br></p>', '0', '723FBF5D4AFE456CA69CA953ED84DDEE', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('08B990BC84D64C1FB9B68D0FBCB54026', '<p>正常运行，输出flag=false</p>\r\n', '0', '853F4AB89C774AB6917F098E243F5515', '2016-01-05 00:21:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('08C19A5DC2C54DF2ADE5510A04EEAE59', '<p>1 &nbsp;-1 &nbsp;0<br></p>', '0', '99438713791F4BE5B06AA1C51F25A1E4', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('08C55CBA3ECF418CAECC30B3D3AD11AA', '<p>getByName()<br></p>', '0', 'AB59FCAF7A41409887272F205C95DB7E', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('08CF3961C7E945F8973F386765C1151D', '<p>i&nbsp;=&nbsp;10</p>', '0', '6AC0DEC2F5444E62B028483DE5F98584', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('08DE7568D6004C059A8C5020E2179AD4', '<p>abstract</p>', '1', 'BDF906495C89420D8FE41DB2ABB35FDF', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('08E6A44DF112436B8433D9677B599BBB', '<p>5<br></p>', '0', '3588BD16F3F9415798119AB99396DAD9', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('08FEEFE9E25946C0BCE93CA4CF780CE3', '<p>arr[3]的值是null<br></p>', '0', 'CE763E92F64448799744129E04A131E0', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('091B95109EC24B83BF56440A8CF56ABB', '<p>Ctrl+N 新建<br></p>', '0', 'A02BDEB5F5CF41BDA3FEF20195D15152', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('091DCB8AEB884FEAAD63FE283AA1EF1A', '<p>list（）<br></p>', '1', '9B34B88C8C0F4C799AD962B7DC08FB5F', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('092EAAF7AF1847B08FA544850F670E2C', '<p>time()</p>', '0', 'A986BE7D029D4E8A857D392292B94CE3', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0939AFD73D134FCAADBE237E2FE0AD74', '<p>成员方法不可以被public修饰<br></p>', '0', 'B4B90EB2EA6A4AA59B02B7BBC12F4A57', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('093A486FBA5145B596BAA79BF8334064', '<p>静态修饰的成员变量和成员方法随着类的加载而加载<br></p>', '0', 'D7983AD07843499CA3148A18146E6198', '2016-01-02 21:48:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('09498F5BA5A8421D8A9ACD7629FF15C5', '<p>抽象方法的作用是可以强制要求子类去重写抽象方法</p>', '1', '4E965A2AACDB4C5DBC3B366338FC4F95', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('097D03FC31CD49DA9B1003E5E421A42B', '<p>以上都不对<br></p>', '0', '91E0524D0BCF45A0BE1B8C8D312DECD3', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0989831A9DBC467794F8F0EAE16A95B3', '<p>不可以保证怎么存就怎么取</p>', '0', '7D9D826A9FC2477AAD979030DC8F76D2', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('099042250A854F5CB3FC78963A65C71C', '<p>打印流只操作数据目的</p>', '0', '9210201370134A3A8A4087A6DF243726', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0A0600DB0EE64486B662607522E56135', '<p>输出空</p>\r\n', '0', 'FBC5C3D0FBE747D99EBCCA018866C469', '2016-01-05 11:04:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0A112E99AE314F498FB81B13FE510140', '<p>同一个区域无效<br></p>', '0', '61D46B50A90E46DF8BA35FCC5F8F2015', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0A1AFE4D3D794E3386D378155E38A332', '<p>必须通过super指定调用父类中的哪个带参构造函数<br></p>', '1', '652C0A56A0BB40B493178CDD2B038717', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0A1EF156E706476EAABE5709E11DFB6D', '<p>append<br></p>', '0', '403BCD4E74E34D9F9ED4961F931A6ECF', '2016-01-02 21:47:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0A56A990A93F472A93C25EFAD88D032D', '<p>ccc<br></p>', '0', '807293A3E5584E6FAD4E4C5A9C3E9E33', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0A597050BFE34148B811A2AF298A553E', '<p>输出null<br></p>', '0', '4576014BC221460894B8283B2945D4F4', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0A614E027BBA4956814B3AF8B266C5F4', '<p>arr.length “]” &nbsp;“,”<br></p>', '0', '4BD5FB6CCBF2416BB66C09067046831D', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0A873AF2F4304EB695F0B9F086FE5E46', '<p>代理模式不需要抽取接口，只要有代理类就可以了<br></p>', '0', 'C0929634BB674A9E9A47634EAABA044F', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0A986AF3A29C441989BDB3E68D2F5082', '<p>如果异常存在子父类关系，父类一定要放在最后<br></p>', '1', 'F7B74976A0834AF7B38B52C2952E2CDF', '2016-01-02 21:47:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0AA1B692F5B248598593E593ADBE7FA2', '<p>load方法从流中读取属性列表，键值对，加载到Properties对象中<br></p>', '1', 'CE396BF9BCF94F6BA3E7B417D0892085', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0ABFDD53DBC34354A6235392E220E9DF', '<p>数组的初始化时只能由程序员指定数组的长度<br></p>', '0', '3D1A1274B7544CC9B107AD516C9EFAEE', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0AC67184FAF54645B61BCAAE0654D5B8', '<p>read(Object obj)<br></p>', '0', '75FDCF83B5864E2C94E3A434D9BE535C', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0AE062785413467DBBF68FC2297B669D', '<p>throw用在方法体内</p>', '0', '423F61937F2A4392B4BBAF948573B129', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0B092BFA24D74F2D926CC8174A9BC7E2', '<p>如果被重写的方法没有异常抛出,那么子类的方法绝对不可以抛出异常,如果子类方法内有异常发生,那么子类只能try,不能throws<br></p>', '0', '8E2BEB381D974F468C78B55204EE35C6', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0B1FE18729B44DEDB05CC5A543E263E5', '<p>isFile</p>', '1', 'BF68B1AE0B614A3EB4549DE393EA849F', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0B3CE91BD8B54A39A94415606276F071', '<p>运算器，控制器，存储器，输出设备，输入设备<br></p>', '1', '7D055CB4494043AEA4E9430901957716', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0B6CC013287A4A128E2BCA38CE3C6739', '<p>String&nbsp;line&nbsp;=&nbsp;sc.readLine();</p>', '0', 'A7C50291240940ADA8D491315993CB51', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0B8D0379425A4CD3B75DB1E4CBDACF59', '<p>switch a &nbsp;{ ...... }<br></p>', '0', 'D1239F78C184432CAFB7CED4F941D4B5', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0BB28D76BE6E4B5ABFE7CAD860DB9297', '<p>输出结果依次是 \"Hello01\"，\"Hello03\"，\"Hello02\"，\"Hello04\"<br></p>', '0', 'E044C868B30B47DF8E38653F878C0DD7', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0BB36BF17DC54548B29236DF47927E80', '<p>提高了代码的扩展性<br></p>', '1', 'B7250FC6E5D141188C732DDEF690C51D', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0BDF1962D7254EEC8382F159560DEB2D', '<p>成员属性可以是普通变量，也可以是常量</p>', '0', '08DAEDCB974649E492F3DD65AADEE648', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0C12F14449654A8781D0CD4CACE25261', '<p>抽象方法的返回值类型为void</p>', '1', '44AA838BFF29477A89185E72CFC2A059', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0C466649B1A74BAE896169424EDA7505', '<p>true true<br></p>', '0', 'DBA85C4AA13D48568298D942257B447B', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0C4D1FFF83874CE594E22A8BF1CC0EF8', '<p>①②③<br></p>', '0', '98846009C6134E72903DEECC3E04550F', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0C52B838443F4EAFA3AB80AC5A5CC5DB', '<p>s<br></p>', '0', '01CF3AB7BBBD428BBAC7AB947756FE36', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0C63DD2BCFB446E59B0C4A95DEBD2D86', '<p>arr[6] =1;能正常编译通过<br></p>', '0', '38F24C79B28E4739949A918808B2CA05', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0C94848DEBB844EB86D34D0C8C3DA398', '<p>主函数写错<br></p>', '0', '07D3FBF723F944EAA25CB8196E646934', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0C955806BB084E338B1D2119F8CABD94', '<p>Socket<br></p>', '1', '84612FE6BD5747EFA99A92FA929E0743', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0CBC2D11476843ABBB7327196ED50D1D', '<p>ArrayIndexOutOfBoundsException</p>', '0', '8C5CAC4A30FF45C4AFE115782F8C0145', '2016-01-02 21:48:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0CC1B0CE7AD040A1A7574D2DC2429110', '<p>arr&nbsp;可以是字符串数组</p>', '0', 'DA1E40CB8C9D4BA79365EE3900756613', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0CD0FDD761D949F5AC677B58C907941F', '<p>定义一个成员变量，记住被包装类的对象的引用<br></p>', '0', '4FCCEBA8910343FE9C3EB81A472B76C3', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0D152AA9C10E4649BC382063A798CF70', '<p>read()<br></p>', '1', '8D239F6A1D3F400EB9B0C583E9582508', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0D1F72A262204301B318DAAF2EA5FB8D', '<p>程序运行时必须要有源文件<br></p>', '0', '4B8EE8199AA543C8A168C7D7E14ED783', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0D2B6BE55F58443386F6D0A31BCE5D4B', '<p>List子类对象可以存储基本类型的数据&nbsp;<br></p>', '0', 'D38D5E17D79C4BB7BA018C0FC93996E3', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0D36E465006F466A8E56FCBB1C2BBFEE', '<p>图片</p>', '1', '90F2897E8C544479888DE47DBBB731E7', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0D3A7275D37341B0B7CE16EEFEB20B2E', '<p>1<br></p>', '0', '8D04E113F7054CFCBE6C6BB20C5EBD8A', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0D5EB5B408424FBCBC245A3DBA0AA975', '<p>int x = sc.nextInt();获取到键盘录入的数据<br></p>', '0', '164036900FC0455CAD6AA96796D9044F', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0D69A98A205444CCA1151D7A94307732', '<p>括号一定要匹配(括号要成对出现)<br></p>', '1', '6069A2B7B4654ED2985E41F0E40DC1AE', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0D6BE6A5B414454580729575208B5137', '<p>set方法是为对象中成员变量赋值的<br></p>', '0', '67496E8CD2A4412C8A9DA508ED2DA2F2', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0D7D54674C03476591D1BA7138D427A2', '<p>减法运算<br></p>', '1', 'AFC04DA743EE46A68DD50A0270409C36', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0D86FC1191E84E698552C1CAF470CEB1', '<p>去除字符串首端的空白<br></p>', '0', '6AECA4D395874C1DA874D0C88C1A7AE1', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0D942B79094E409998AC20F0FA758814', '<p>对抛出的异常的处理必须放在try块中<br></p>', '0', '78690A146BD14FEF922F73FFB7F2B4DE', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0D95B7B0CA0D432D84630AD0218B98CC', '<p>将C盘已有的文件demo.txt中追加写入abc<br></p>', '0', '241C001A59B44737A1F152EB8D0235BB', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0D99FFDB6E014734A6CC0F35F9BD7806', '<p>list（）<br></p>', '0', 'D7A4A57FC12E474CBB9AE88C0D135A9D', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0DB6DA97F1E8487CA3E9F608468157EB', '<p>run</p>', '1', 'EA0C77D893244729AA6C38CBC9DE7EBB', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0DBB38CD86D04CC9999DCBF75D60AD31', '<p>int<br></p>', '0', 'A71138CFF2474222B8E54FF95DDBAFBD', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0DBC5B2EF3214DD7B95EF1C055799851', '<p>成员变量存放在堆中<br></p>', '0', 'A1F97FE0127F45279961F704D6E70431', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0DBE4EF4BE4442C3BBB6A6F5FEE5A1E1', '<p>Serializable接口<br></p>', '1', '57854E20FA3D475EABD579CBB09CCFEA', '2016-01-02 21:47:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0DD8C86304D34BA98A6629427A98E3AC', '<p>黑马好a<br></p>', '0', '09250F5FB1EB4C31A84BCF7665381BDC', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0DDA1E5BD0BF404C8608EE4DFC28B545', '<p>%=<br><br></p>', '0', 'A1A018F0E1ED4528883587F6C4356DF7', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0DEBC80E74664B1A9DE4679379566654', '<p>它没有返回值<br></p>', '0', '7C9DAB2CBC5841A4BA9F98553E894DB4', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0E41448454624A26B57018894BD48FD7', '<p>listFiles()<br></p>', '0', '975BC6CDDFB642DD8B27E54342961BB8', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0E53596B37874E058E720CA383450275', '<p>栈的特点是先进先出</p>', '0', '5DE260DDA01C460499AD950A91F41948', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0E6B537DDA9C4942A448A0EB8A547591', '<p>输出null<br></p>', '0', '69F4B6F8166F4BFAA865CD6E16216B2C', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0E7304A4065C4D559D1F9042F8AD2FC9', '<p>reverse(String str)<br></p>', '0', 'A0C2880F81BF48F1B52F1FB9877460BB', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0E786BEDBD94418AB6E3170F6168C477', '<p>arr[0]的值是0<br></p>', '0', 'E092B7D678094144B90707B4288ED5F7', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0E80D9D36E0F4CBAB4856B6837FCCD58', '<p>&nbsp;Eclipse<br></p>', '0', '0F9A40D26D524697ABDA4A524D7E1C8E', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0E8370323C6C4307A3ACDA3BF34A4097', '<p>DatagramSocket<br></p>', '0', '21020886B96D43E99B075B11FE939BEB', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0E993BBD80BC4925B027DB3882E3F30A', '<p>Java API蕴含了面向对象封装思想<br></p>', '0', '2CE1787CC2B9461CA64313EB9F496F3F', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0EB0818CD96A44ACA378B010F52F5B49', '<p> objectWrite（Object obj）</p>', '0', '9C4236EEC0F247099FCF5268597F055B', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0EB4A28B92744F599DE7A1AB4634A811', '<p>在java中，高优先级的可运行线程会比低优先级线程获得更多的执行资源</p>', '0', '68867F39CC7F46FA8D1316B7F3B811E0', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0EB76D7AD1D5481CAAF5902070BB2F45', '<p>InputStreamReader<br></p>', '1', 'A2666A4C84B147AD8609D748CA52EA04', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0EBA87FDB1AD4012961F9ED394E8A1C6', '<p>BuffferedWriter内部没有封装字符数组，无法实现缓冲功能<br></p>', '1', '8FCBC819AB19401D9FA03CAF9F98E774', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0ED21B08EFD14C4D995DD7EA52E5BCDC', '<p>return&nbsp;num&nbsp;==&nbsp;0&nbsp;?&nbsp;-1&nbsp;:&nbsp;num;</p>', '0', '1FEDB9888FF844ED8CB40D0CE8306829', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0EF810FD7B5D46019C94BC035C3BD82A', '<p>capacity()<br></p>', '1', 'DAB3B91EDCEA4ABBBA424F0AB07D8190', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0F07F8B6B5A44A5C90D213CFC035E168', '<p>该方法可以获取私有属性，但使用前必须先调用setAccessible(true)<br></p>', '0', '8020AD29906C45B9AF3DAB7E5994FD35', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0F2E126656A94467A8A5D404F2734497', '<p>不用指定调用父类的哪个构造函数<br></p>', '0', '652C0A56A0BB40B493178CDD2B038717', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0F40755403D54339B46F25FF794E513B', '<p>字节流拷贝文件时一次读取一个字节<br></p>', '0', '48A3DBAA47A245569C1A9B7B0DCDBE2A', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0F50C8742B354DEF868881174DB4A6BA', '<p>7 ^ 2的结果是 3<br></p>', '1', 'B347EE4CED4C4BB190D2329FF3633F55', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0F5CC3F6028A4321BBA2E26C4519F16F', '<p>输出结果 246<br></p>', '0', '6E42BEF6CEFE44948D4E7E5A6D3BC0CB', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0F6E049B5DF6452AB6E03217D9A5768F', '<p>protected</p>', '0', 'DBBEE1769E404ADCAD4462A129F60758', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0F9792FEAE6546F287809994DD04C321', '<p>System.in</p>', '1', 'D7C9C9F9A18347739E33E66F88405FB1', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0FB677751E154CFDB18E904699DEE73E', '<p>createNewFile()</p>', '0', 'CB8F89FDA6D94D199548C3ECA0977F93', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('0FCFB5FA0DE14EA2B4784D6B135049A9', '<p>字符输出流的根类是Writer,该类是抽象的,不能直接创建对象<br></p>', '0', '79E7F90ACD63403EA18EF9DE987A6104', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1003982ABCDC45D9BEF819C9EA06E6C4', '<p>arr[0][0]的值是0<br></p>', '0', 'AD39D5C392CA47D78330CD05001DC279', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('100B671E052741EAB6AB7C04A363F147', '<p>package语句就算放在.java文件的最后一行，也会最先执行</p>', '1', '547D0BCFEA684F93847AD81A8F6FA523', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1016E424445D4036A7E2C69C414CC439', '<p>java.lang包<br></p>', '0', '52CCF2D7B39D49A4B3DE9F4BC984AD46', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1025BAC9E9CE4F9A80135CCEC3AE6F7C', '<p>Long<br></p>', '1', 'D5A0BFEB057D4EB88BB685E54BF0562E', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('10460B3FC99542429D7EB16F3155DB9A', '<p>通过Class类的getConstructor()方法获取有参数的构造器，然后创建对象<br></p>', '1', 'B424AB1C98294BDB894AEE8C540FE96B', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1052816895D0413A9554A98850705099', '<p>都可以通过类名.调用<br></p>', '1', '7E0BDD89EB604900962EBA838DD41CC3', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1053CB9891124C6493DD9B6D0CB3B347', '<p>int</p>\r\n', '0', 'C1181970F28C464FA907CE713DCCA70B', '2016-01-05 11:10:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1055AE88ACBB40ABBD539FAED57E95AA', '<p>以上说法都不正确<br></p>', '1', '7F26954476384AE180AB99B83770644B', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('10582E3BC34B4A3B9A4F6332D125524F', '<p>getDay()<br></p>', '0', '3DD40B0051E5410BAC65E7777FA277DF', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1058F848F27542A2A9448DCEA98DB9A0', '<p>JDK就是java开发环境，javac是其中的一个工具</p>\r\n', '1', 'E19659CECF6E4E53BD715D31570B7F8D', '2016-01-05 00:13:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('106F9937DF704ED79873A161195E77C5', '<p>电子计算器<br></p>', '0', '1F144C304C6D46DBB9E559D2E4BBA481', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('10707418704D4877BA9A4CCAA3F531C9', '<p>子类在创建对象时需要先初始化父类<br></p>', '1', '916D511C49184BD182E2138EF748B917', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('109DDBCC191340EE9B003CA7927B2EB0', '<p>参数中的b 表示需要写入文件的字节个数<br></p>', '1', 'D72D6374D0A84E4C9F9D56B4703DC4ED', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('109F1AB7759D442EA71988FE557257BA', '<p>之所以要导包，是为了调用类的时候不用写带包的全类名</p>', '1', '5110A7A94F6C4F7A9FC8E8013D6E7B30', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('10A9829D885F48A1A5CBD4374D7D71DB', '<p>判断File对象封装的是否是目录<br></p>', '1', '1B0B7BDF4F2D44F0A59E54240A227218', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('10B745B66C2D48EFA37906BE2A38C822', '<p>都不是<br></p>', '0', 'E38D396B8E074D408FD29D50FAE5C90B', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('10C7CA8DC000481CA268B02155319132', '<p>成员变量，编译看父类，运行看父类</p>', '1', '2CEB58B718AF4C14B43FB3F1349ABE3C', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('10DA1A75EF2A4C858C09C48E3FA61F17', '<p>面向对象的设计其实就是在管理和维护对象之间的关系<br></p>', '0', '3D8FCCCE165E488FA2BD34F2DBCD6A80', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('10E4CDEC6AB5483EA9D7C67658CFAA5A', '<p>abcd<br></p>', '0', 'F806AC447DBC45629E104EA8150E56E8', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('10E4F672A0414625820DA422C25BC412', '<p>Map</p>', '0', '8716AB4860FF450C82F1877CB38DEC6E', '2016-01-02 21:48:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('10EA8E24893443678DB0F524FC71B354', '<p>Scanner sc = new Scanner(System.in)<br></p>', '1', '82A6C18C22BC4ABD853B2791C91EEA8C', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('10EB761817E240998506F803D3E43456', '<p>只关闭流<br></p>', '0', 'AA8F784105F34FBEA2BBCDFBC15CEC02', '2016-01-02 21:47:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('111331BEA2AF442C9276BF707BAD7614', '<p>调试可以帮助我们查看程序的执行过程<br></p>', '0', '76B5E33B8CAE4BFF9AAB27B328F99122', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1114E91F27B240A6BA18391FA96093BF', '<p>可以按照自己想要的方式进行排序</p>', '0', '18956523012A47378205856CFB075AF9', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1119F1E739BB4265A553BF018884601A', '<p>将整数变成字符串<br></p>', '0', '577A0399B4CE42D08044BB0726034354', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1127101A6A554AA58B0DAB899EE59EC6', '<p>getInputStream()<br></p>', '0', '0AB1A30AC8D84D2EA68853FED6B1CC3D', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('113EE8CF75CA475597764BCD35B765A0', '<p>Scanner sc = new Scanner(System.out)</p>', '0', '82A6C18C22BC4ABD853B2791C91EEA8C', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1145A596034544868C40AC59197C5945', '<p>import&nbsp;static&nbsp;java.util.Arrays.toString;</p>', '0', '3A5A4A1B904E468D9C12FC86476F3A06', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('116E871234D14660A7506B2BF9192A0E', '<p>若线程A调用方法isAlive()返回值为true，则说明A正在执行中</p>', '0', 'DBE23E3CE6D04E4DB47556C816E58864', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1183BF17B73643359ACF0A5AE85C3CB6', '<p>num&nbsp;=&nbsp;10;</p>', '0', 'CFAD69DD0D5049CA8C1349C029A0514E', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('11A0386E2AE04BAFBF5FF58EFBEFD875', '<p>面向对象<br></p>', '0', '396CE78AC3B44CC4B6158FDB69A9DEF0', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('11A04D7F5C0945B7A5F72CAC6E3DFAAC', '<p>不可以通过ByteArrayOutputStream和ByteArrayInputStream实现文件的复制</p>', '1', 'B8E832318E7E45858627E4128B6C682D', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('11AF2157F9884B4186A190DFAACE2B6D', '<p>1024</p>', '0', 'B1D97BDD72364C67A1D59562EED7F17B', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('11B2315B14804F3F91CF1E523E1D34F0', '<p>可以用来返回数值以外的类型</p>\r\n', '1', 'C2BAE395C1334F0CB54A2470D90568AA', '2016-01-05 10:34:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('11BBFA0B32A34BEC97414A7C5C84ADBC', '<p>wait</p>', '0', 'A0EAA6FC0A3F48239C4F25D5934ADCCF', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('11BD0F6FA9944E3CB2148F9C66045BAD', '<p>次要条件在主要条件结果为0的情况下才可以进一步发挥作用，否则会影响结果</p>', '0', 'ADF3AC3FB5544E83B88E7FD92458D174', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('11D086DFE4004FC1A247B6E60B1C9BD9', '<p>就是给类,接口,方法,变量等起名字时使用的字符序列<br></p>', '1', 'F7B83A4A5F414E258FA2BE53B41E5D78', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('11F3E16D57A04009B50CEB9E5BA17BC2', '<p>如果想看这个体系的共性功能,看最顶层的基类<br></p>', '1', '78302AFDADD148AAB10C3089529E8BB7', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1208DA8B371C40C7B16DAF69A46F7F27', '<p>通过类可以创建对象</p>', '0', 'A6426E3458AD4C76BEB4892CF80C43FF', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1239F560427141F08B6E95B24175008F', '<p>配置path环境的目的是为了编写好的java代码可以在任意的盘符下执行java和javac命令<br></p>', '1', 'D82E262D49964DA5BAD682A347609C27', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('123C0DCC36F5422F98A89668E1FFDAE9', '<p>-12<br></p>', '0', '7CC4B66DB3914722823B6F357800EAC5', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('125355DCB6984F56B7DECD9CF7CE8580', '<p>可变参数的格式为【数据类型&nbsp;…&nbsp;变量名】</p>', '0', '7F6F232F51E74EDB9127624A3053E707', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('126F8DFE1C1040DE9C09A6B0AC9FAAF3', '<p>false false<br></p>', '0', '823179523FAB487E9D13AEC598CC4560', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('12700A0E9C2B45D3A38E817DF2961C84', '<p>0</p>', '1', 'C6A225B19F4D45599BC79D4C66D1B27F', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1271590FB60F4B19B3E9D4519E621DE4', '<p>int [] arr={&quot;a&quot;,23 ,45,6};</p>\r\n', '0', 'BFCF0DE5819E4AD69E0E507950EE35AF', '2016-01-05 10:54:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('12878B107B3C4B7597DAF922F85DC7DB', '<p>void</p>', '0', '963BE09C92D540D0A4DF96D78FA84821', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('128CEAD8FADD471594577388C4DFAE27', '<p>提高了代码的复用性<br></p>', '0', '399128C1C0874BDCB334AB6018236F6F', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('129800535C7A4C079FD000BAE6984548', '<p>数组只能存储1个元素<br></p>', '0', '6A4CEEBF9CC94157B1ED6D436ECC44AB', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('129D6A12BFBC49C7832B5DF176C4BCBB', '<p>字符流一般不可以拷贝非纯文本的文件<br></p>', '0', 'CAEE6E9B693D4C5492FCE7A7623C18A1', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('12C503C6902B42DB801462AE1980430C', '<p>2</p>', '0', '705874FDB44C420A8231A237E1DC37B2', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('12D636EB3AC74C11BB23BE655EA53A4D', '<p>外部类可通过创建内部类的实例来访问内部类的私有成员</p>', '0', 'C04E8836D56E49C2B5A46E3CCC2CAE7F', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('12F25197563848DE9785384FF9BB4C23', '<p>Reader类<br></p>', '0', '5895335F73064D669D62BB222B4E288B', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('12F54D626C73451A9C6D9A48D246FAE0', '<p>通过代码Scanner.nextInt();获取到键盘录入的数据<br></p>', '0', 'ED1C8DF591CB4DF1BD8E4721001C5DF7', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('130E5DA6703841199AA2749B20F55474', '<p>当成员变量和局部变量同名,访问采用就近原则<br></p>', '0', 'B004E97AF3684BC7957CE2CE6B3C6F29', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1318D6E77DE34AA9B6C2235CB044F9CE', '<p>&nbsp;Java接口中定义的是扩展功能</p>', '1', 'C335D49C132E41599266BC11F1EDE53C', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1319853748574934A46F998F752E9C49', '<p>LinkedList底层数据结构是链表</p>', '1', '17F1640F63494149AC681672117A2B5F', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('13199E4B39074B4285A6CA3101CF48F9', '<p>private<br></p>', '0', '916FD7975C0748C1B977091139AE2920', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('13279B78203E4A579798C5B85FB125B8', '<p>int compareTo() &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp;-1 &nbsp;0<br></p>', '0', '23CF65229C414EA4AB416B8DD803955A', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1336B511FC454E0889BFAFDF1F03667B', '<p>class java.lang.Object<br></p>', '0', 'DBFA1AEEDCD746B7BB2C6FC587226ED5', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1343EA8364C54C318BF5E7D8EB5AC9DB', '<p>2</p>', '0', 'AF44665882AD400CB5E5726549B81E7C', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('137A7DBB1AEB4AC0A72F4589366E8D2E', '<p>同一个区域不能够使用相同的变量名<br></p>', '1', '61D46B50A90E46DF8BA35FCC5F8F2015', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('137E87E2CB5E471AAA86240C68727AE2', '<p>不包含</p>', '1', '8A7E9A9E4E9140F7AF6250B16AA59E89', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('138A0AA5F4B445E9B2D5623B2B7E2B4F', '<p>public StringBuffer replace(String start,String end)<br></p>', '0', '78BFA4A094004746B07D8F7ED682B30C', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('13957AB76F864E368AEEFA5AA51775C6', '<p>使用字符输出流,该流不用关闭<br></p>', '1', '79E7F90ACD63403EA18EF9DE987A6104', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('139A6673C47B440895335BFEA044E6CA', '<p>start</p>', '0', 'A3A2AA41A95148C395A4B962D4D909E8', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('13AB04B797054AF1B48B67370416FF7D', '<p>package语句可以没有，表示无包名</p>', '0', 'E370201C092845348D435F665804D228', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('13AF187F494F4C2BA20A52AE33F93620', '<p>$和_也可以当做合法标识符<br></p>', '1', 'F7B83A4A5F414E258FA2BE53B41E5D78', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('13C359AC84854061BADC5B4C3181E6EE', '<p>Eclipse的内容辅助键可以对某些关键字进行提示<br></p>', '0', 'B3ABBD0FA917446B92F30996C5B1EE4A', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('13D2546DFFF044928B970B799B157BC9', '<p>这两个方法都在Thread类中定义。</p>', '1', 'E4AAC9803A204AECA08B822E958F6BC7', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('13E080C715BE4AC1A36D217BAFD479F8', '<p>将字符串变成字节数组<br></p>', '1', '577A0399B4CE42D08044BB0726034354', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('13EE22E43A4E45C9A1F06D4727E53BF1', '<p>i&nbsp;=&nbsp;++10</p>', '0', '6AC0DEC2F5444E62B028483DE5F98584', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('13F2F3902AD54C1D835E6437C164A7D7', '<p>switch &nbsp;ch &nbsp;{ ...... }<br></p>', '0', '34A040350A9349EE8F1C2C852648058A', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('13F3F84EF24A4F3194CF3948FE7F3A22', '<p>this(…)用于在构造函数中调用本类中的构造函数<br></p>', '0', '5465ACE300EF4C29920B87FE41EF9082', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('140EFE2C937149509723F9C566FF80DA', '<p>不同对象的，hashCode()的返回值一般不同<br></p>', '0', '7A48391745034D779414787C58D3C0ED', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('142F6528DBA54CDCA880421856DEB91A', '<p>可以利用LinkedList来模拟一个栈结构</p>', '1', '4CEED7721F1E403CAEDC40CA76136CD1', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('14344413CF3149BAB82A32DB04CBA8DF', '<p>基本类型，是值不能被改变<br></p>', '1', '68F041CDD39E4CA8B37588E30C716131', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('14369084C21D49139E2AFC57DF9DC58E', '<p>获取数组的长度<br></p>', '0', '637B02298C46445AB08CD99A898ED2E4', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1440F201B892469BBDA6395F35E2A311', '<p>abcde</p>', '0', 'DACCE3CDF70A4369877FCA4442FEA708', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1481840EDBED490BB6C6FB97311B1D59', '<p>打印结果是0<br></p>', '0', '46BD27AD911848CEAA2EC19F2414C98C', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1483D3CD3263481FBAA069A87DC00E6C', '<p>zi&nbsp;method&nbsp;fu&nbsp;show</p>', '0', '37F2ECEE038043979CE8C2DA2E9105DE', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1484C643636B49D193D3E16D5219D821', '<p>这已经是所有程序员约定俗成的习惯了<br></p>', '0', '8A8D43DD798849E6A3BEBDA063EEBC25', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('148E6E5C8CBF441B960899386D546BF7', '<p>栈的特点是后进后出</p>', '0', '5DE260DDA01C460499AD950A91F41948', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('149C690795B649508608F0A89CB40777', '<p>Demo d = new Demo(); Demo.method(d);<br></p>', '0', '5804B07031A8461DA0E59F3CB518D8D5', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('14ACF2DEF5C0409599BDD01C71D2B53C', '<p>在多行注释中,能够嵌套多行注释<br></p>', '1', 'E490CDF3A39043E690E3240AA06BAB4A', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('14B429B0F1D344649BC26A34F3F32DAB', '<p>饿汉式单例模式是只有在使用该类对象时才创建，否则不创建<br></p>', '0', '65A071C9BBFD4961A61AEE7FFBDA7E6F', '2016-01-02 21:47:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('151B8DADCE384FEC810A15B39D65FB34', '<p>120</p>', '1', '0025D65731D14DFF95E7955327D0DC27', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('151BBFDF7E204E5EBFFAE8149E2217FA', '<p>(byte)b1/b2</p>\r\n', '0', '4E6F877880184D5998E9581F020AB5F7', '2016-01-05 00:11:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1529FBD69FE14EC98280B636432DB5C4', '<p>读取的时候是按照字符的大小读取的,不会出现半个中文<br></p>', '1', '778CCB9CFF80475699111D9E6EA4DED4', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('152B891722D44E1DBFF2F90C519542B2', '<p>DatagramSocket ds = new DatagramSocket();<br></p>', '0', '542E4E11A78E42C4B90361B6A797B712', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1533EA09D5384581ABA248E7DBC58F47', '<p>Map是Collection的子类<br></p>', '0', '2415971B99164573BBD7B3D73E85FBEE', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('153DE67D1955454186F42697828D85A2', '<p>黑马好97<br></p>', '0', '09250F5FB1EB4C31A84BCF7665381BDC', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1549450FFB48419B96897A6C5EE4EF98', '<p>entrySet()<br></p>', '0', '666B224A81A14522A8B34757E05F7E7E', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('154C2BA86FF34005900826984EDD3B1A', '<p>如果一个类中没有抽象方法，也可以把类定义为抽象的</p>', '0', '44AA838BFF29477A89185E72CFC2A059', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('155479B17F014710AD6E3A61977F6755', '<p>false &nbsp; true<br></p>', '0', '54EE8161EB9D4BE4B957C6893CA832C4', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1557068BB122483994C99A483B68135D', '<p>return可以停止循环<br></p>', '0', 'D5CA68DAC00C46709D7913CC0252068C', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1571A31EB33C45AD9B145236FD960518', '<p>BuffferedReader内部封装了字符数组，实现缓冲功能<br></p>', '0', '8FCBC819AB19401D9FA03CAF9F98E774', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('15BAA4B0B29247BD8FBCE82B291B3714', '<p>2&gt;&gt;2<br></p>', '0', '30751AC1CA3B4F27B32085193F56732D', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('15D208637C29499BA0803A837DB30509', '<p>adcf<br></p>', '0', 'F806AC447DBC45629E104EA8150E56E8', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('15D9F85D79164CA7B9F8CE24E86C85B6', '<p>private</p>', '0', '270639BBB31840FA98D5A37240A91DE9', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('15EDAEB3D4414DC3AD6BACFDD7D01F4C', '<p>static&nbsp;import&nbsp;&nbsp;java.util.Arrays.toString;</p>', '1', '3A5A4A1B904E468D9C12FC86476F3A06', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1607A37BEE494753895D7821AFA705F9', '<p>对转换后的数组进行遍历<br></p>', '0', '637B02298C46445AB08CD99A898ED2E4', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1624839FB1ED4A4EA24A850C9F9FEFC1', '<p>抽象类和接口中都有抽象方法，用谁都一样</p>', '0', 'FFD83203F8D84B398B12F29349D27B0B', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('162822A47A1E4D3D80DA449DEE146ECF', '<p>如果想用这个体系的所有功能用最顶层的基类创建对象<br></p>', '0', '78302AFDADD148AAB10C3089529E8BB7', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('164BBC625A9E475FAB240AAF775FB16F', '<p>电子计算机<br></p>', '1', '1F144C304C6D46DBB9E559D2E4BBA481', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('164F132299F2430CB8DBDAD54E345E6A', '<p>方法：一个单词都小写，多个单词从第二个单词开始每个单词的首字母都大写<br></p>', '0', 'F61A30A255A94840B53AB86B49674CBE', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('16794D43BC034FABBE3C02BFAC10E142', '<p>TreeSet作用是去重复排序</p>', '1', '1BDB4E7917E84F359A9EF2B8B9EEED07', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('167C66067DC34B79AB1FAEA6A94320D9', '<p>“ +”<br></p>', '1', 'C720674C0FF943B8931BA0A155B188F5', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('168218A1B23A4DE29238534FC063773D', '<p>以上说法都正确<br></p>', '0', 'F7F7D00C082D4DCB94E2CB544ADC2B1D', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('16EC76B023014AEBB2F3B76E6DBC7D56', '<p>局部代码块<br></p>', '1', '44B0AB0854214465BE5B6A7DBDE23B89', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('16FB022356F247ABBDFE5FF225FB42CF', '<p>属性必须是基本数据类型<br></p>', '0', 'C1AD6963B5C944A79F5DBACD1B6440FA', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1714B83EDFA54A3DA1574575C0C3EEBD', '<p>相同对象的hashCode()一定相同<br></p>', '1', '7A48391745034D779414787C58D3C0ED', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('172F2081A14A436EB210A3B9D8784D5A', '<p>Ctrl+Alt+上箭头可以对选中的代码向上复制一行<br></p>', '0', '523FBB764ED8414C816C9C437824DFC3', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('173D09210DE24E278AC6A9D783C86903', '<p>对象是类的实例化<br></p>', '0', 'F8FC413C1E344492BA0171CBBB2B2465', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('173EFA05D4784314B5E3CCD6F2955DBB', '<p>程序中的断点可以通过双击该断点取消<br></p>', '0', '111B56589A6D4100A4FB075A697424D6', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1740FE1B32954B9ABC270895BB72BBAF', '<p>在子类中可以直接访问</p>', '0', '436F40CD84154E6CB2148FC15B8328F0', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('175553C42FDC41EE951774FAC7355906', '<p>abstract</p>', '1', '963BE09C92D540D0A4DF96D78FA84821', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1788D90A7ADE4F5CA4611B03D5E2D40B', '<p>System.out.println(4 ^ 10 ^10); 输出结果为10<br></p>', '0', '337556C3125C4549BF2B6D566AC19D17', '2016-01-02 21:47:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('179C7D1157A94A8F8957820797690373', '<p>line.toCharArray() &nbsp;arr.length-1 &nbsp; 0<br></p>', '0', 'B142786382A44D27A8AB251F2B4D9CAC', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('18163E6ABC7241B2B53B50DA10874E9A', '<p>匿名对象的属性进行赋值但是没有实际意义<br></p>', '0', '963A09F451EC465E88DE1CA98A923D51', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('182F910BB7E1461FB8740DC551EDA192', '<p>如果异常是平级，没有顺序关系。<br></p>', '1', 'F7B74976A0834AF7B38B52C2952E2CDF', '2016-01-02 21:47:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1832E80BA7B54ACD92E25A6D3EE5D02F', '<p>栈里面存储局部变量</p>', '1', 'A22FC99A1847414BA590D98DC55DB4E7', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('183EE27E8374460F9BEFB7F8E76BBEBB', '<p>多态<br></p>', '0', 'F8DF29A4DA084A118091C5C9157E7184', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('186CE89C6464493D8716C81A8E48DF77', '<p>成员变量属于对象，随着对象的创建存储在堆中<br></p>', '0', 'A1F97FE0127F45279961F704D6E70431', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('186FAB79C0DC4936BE38D1F8C7CC2EF8', '<p>程序正常运行,但是没有生成zzz.txt文件<br></p>', '0', 'D7690B5A97EE496F94666765927C8F0B', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('187AB3726E5D4740BD7813BFD1B779BA', '<p>常量表示常见的变量<br></p>', '0', '75906B56A6B8419BBF1E9248577BF821', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('18879956953443A2BCAE73FBDDB2AEA7', '<p>List体系<br></p>', '1', '2869700F7F8447529486E00C338F28E5', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1897EEAE2CFA45ADAB9AAB1589FC0A89', '<p>FileInputStream fis = <strong>new</strong> FileInputStream(new File(\"双元.jpg\"),true);<br></p>', '0', 'F9CD2181E4DA4EA5B6E3930CF18E94C6', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('18D8CDA3813D404295E1D5F43A9B80CE', '<p>java程序的后缀名可以是任何后缀<br></p>', '0', '6069A2B7B4654ED2985E41F0E40DC1AE', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('191238C60FA045B4AF92554C4D851D20', '<p>运行错误<br></p>', '0', '3E9665E3DA3044A7B21EEE97452696A8', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1915A6FD973D45CBBBF31B5A9E180EFD', '<p>被private修饰的成员不可以在其他类(不包含内部类)中被访问<br></p>', '1', '239108173BE64DFF86B3B0CD9EE51377', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('19819466C0054555B03E07B0CA2341A0', '<p>图灵<br></p>', '0', '9044D413056A4004B095EC7E13C4CF4A', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('198D54D4AC104C5C8143DE8A2098A1C9', '<p>结束<br></p>', '0', '747AF21CDC7541C98292D04A6AD6E15A', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('19A24A11E70B4B069518ADD244B871AA', '<p>实体类一般重写Object类的hashCode方法<br></p>', '0', 'AB80429ED70C4A45916CE9932CAC8E30', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('19BCE6FAAF8A475A98E368CCE83B87F1', '<p>DateInputStream<br></p>', '0', '786FF8D3E04D43B08B08F3810BCE9E9A', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('19C1D04BE6AF46E783C79D330737923E', '<p>每次创建对象都会在堆内存中开辟空间<br></p>', '1', '1FCE0BB2F27348CFA2D9EAB10980038D', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('19EE4FB2065044949713FC0CDC10B677', '<p>&nbsp;Outer.Inner.print();</p>', '1', 'E29A9AEA6D304ECFA5AB1DF295D2E766', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1A15F14D426F4367A1DEF70B47EAB386', '<p>int [] arr=new int[4]{3,4,5,6};</p>\r\n', '0', 'BFCF0DE5819E4AD69E0E507950EE35AF', '2016-01-05 10:54:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1A1DBE2F28E74B3A97D4F8CD2EE794EE', '<p>其中的T可以使用String来代替，表示只能接收字符串类型参数</p>', '1', '70EFE4CF216445AA99F14BB8FB7BF79C', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1A44362416DD4118B0066CC6169B7742', '<p>得到图形<br>******<br>*****<br>****<br>***<br>**<br>*<br></p>', '0', 'DA5004A928AF4E9282094B04A3D69C22', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1A489326EFCD448A864B8CF6731C10CA', '<p>自然顺序:属于事物本身的排列规则</p>', '1', '4C2A73111D6E416EAB9047FF3051521E', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1A5B88AC7ED94050ACBE709C75D23B8A', '<p>方法只有调用才会被执行</p>\r\n', '0', '2BEB9B564FB94C61B355D7438B21AEAA', '2016-01-05 00:01:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1A6961F1D023442DBE63E879592E16B4', '<p>子类创建对象时，先调用完父类的构造函数，再调用子类的构造函数<br></p>', '1', '916D511C49184BD182E2138EF748B917', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1A826F0533A1496783C5C232F2C05B07', '<p>无限次<br></p>', '0', '62B73B2E710C427D8CC060B7B937C9DA', '2016-01-02 21:47:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1AA5A60A203B4457BF5BC586E60DF5E4', '<p>list集合里面能存放字符串</p>', '0', 'BF47B511F1FA4ABDACFE11DAD30C385A', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1ABD8241406D422CA4E8EAF9EFC2E7EB', '<p>class&nbsp;Demo&nbsp;implements&nbsp;Inner&lt;Student&gt;{}</p>', '0', '002959145FF740F19D81782709F7BE4A', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1ABFDF408AA84A168653269AE2AC7D41', '<p>new SequenceInputStream（in1,in2），in1和in2为已经创建好的FileInputStream对象</p>', '1', '9AC1FEAD999E41B7AA8BAFCE586A954D', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1AC37E355FED4ED696D6A687DF320F91', '<p>f=i+L+f;</p>\r\n', '1', 'C19074D6CED04C0AB53E2F0A40BC4F3B', '2016-01-05 11:18:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1AC75BE9AEC54E4CBBA1CF919887C697', '<p>并行需要多核CPU，而并发不需要。</p>', '0', '6E6B8269595945248D9A567970A1F006', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1AD02DBE73B947B29B12D458A69E4D07', '<p>给类中的属性赋值,但属性必须private所修饰<br></p>', '0', '6045FECE4B5A45C9AC20DA97721F9B8D', '2016-01-02 21:47:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1AD19788EBAC4554A4F2B26C7E0F9C2D', '<p>close<br></p>', '1', '4297FC8F0BE7432AB131FA9F1D9C1A1D', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1AD3EA52D10246BE91CDEF06B7DAA933', '<p>执行顺序:代码按照其逻辑，实际运行时代码运行轨迹.</p>', '1', '4C2A73111D6E416EAB9047FF3051521E', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1ADC5E7C10634031AA943804E0345AFC', '<p>c=2</p>\r\n', '0', 'D8C854B6CEFF48A4A93ECEF0580C6ADF', '2016-01-05 10:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1AF5D6FA25A84860A8654C06FAC83DE2', '<p>OutputStreamWriter<br></p>', '1', 'D5EA2CEE869A44D39A87EB4A3A49838F', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1AFF8DEF0DF44E699A91ABDDD423631D', '<p>将缓冲区中的字符串删除<br></p>', '0', '2F878C45E88947E7B097C5601AFA8184', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1B00026BD99D43C0B80242FD52E4B0C0', '<p>getBytes()<br></p>', '0', '6D28595A62734E56AC3C6B291A789DD0', '2016-01-02 21:47:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1B045971B14B4563B1CAB38A89A7C6D1', '<p>&nbsp;Java程序允许用户使用指针来释放内存。</p>', '0', '01C7A074D47A4ACCBE08BED40078E82E', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1B07B4E69F234FA09EC6D598B37EF8BC', '<p>a=1,b=3</p>\r\n', '1', 'D8C854B6CEFF48A4A93ECEF0580C6ADF', '2016-01-05 10:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1B21F1E408A641A09C65E65CA53B9E5E', '<p>如果想用这个体系的所有功能用最底层的实现类类创建对象<br></p>', '1', '78302AFDADD148AAB10C3089529E8BB7', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1B2674DF4DB348479E81682BB3D61BE9', '<p>Comparable接口<br></p>', '0', '57854E20FA3D475EABD579CBB09CCFEA', '2016-01-02 21:47:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1B2A6DFAFDED4DF5A41E259F2C42C79B', '<p>将数字格式的字符串转成整数<br></p>', '1', '486BDBB1E1774281923B41E3971B85D6', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1B39A15471B74651BE1807FF04809CCB', '<p>33</p>', '0', '47F83E0A130743B7A82307BFB89CDC48', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1B676F2683F443039BA3C7871888600F', '<p>5</p>', '0', '705874FDB44C420A8231A237E1DC37B2', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1B9A1365F9FF4DCB9532D9ECDA9B771E', '<p>new Demo().method(new Demo());<br></p>', '1', '5804B07031A8461DA0E59F3CB518D8D5', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1B9D11E24DFD465AB4976BF6BBAEF246', '<p>false false<br></p>', '0', '3962C2674C4A445394AFD8E290EB3F6E', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1BA3E5DC60FC4A718A8D039D2DDE9D76', '<p>成员变量描述的是事物的属性<br></p>', '0', 'E3BD11B650F54823B2C4587D1C7AC065', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1BB1E161DA844627BA411AFDAA1C8286', '<p>判断File对象中封装的是否是根目录<br></p>', '0', '1B0B7BDF4F2D44F0A59E54240A227218', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1BB34D576E3E4FFE8BD738E61817C040', '<p>&nbsp;一个进程中可以包含多条线程</p>', '0', '9F2B7FDB50304EE79C9D1F4008F36040', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1BCC5CD6035549BE8B0FD5F58572F49E', '<p>short<br></p>', '0', '0B9F88745EBA4854A16F1B71E2EDFE20', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1BECA3BDD11A40B0B466BF6169E377B3', '<p>private</p>', '0', 'DBBEE1769E404ADCAD4462A129F60758', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1BED5C69718F4C6CBC961C8B04D302DF', '<p>main方法是java程序执行的入口</p>\r\n', '0', '9EF88C52CDF24EF3B58AF38AB8AF9F64', '2016-01-05 00:08:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1C2BA9E6B51D4D3BA611AEC9389E425A', '<p>编译错误<br></p>', '1', '8D04E113F7054CFCBE6C6BB20C5EBD8A', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1C475862FC924081AFFEC0A9950599C8', '<p>Windows + r 输入cmd再按下Enter键<br></p>', '1', 'D012244D06BD4C368EF64A55C01285F9', '2016-01-02 21:47:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1C594D9E75D34BC391912987F57F1B10', '<p>&nbsp;final&nbsp;void&nbsp;aMethod();</p>', '0', '6DDC9DBD20474961BA8433E665F28363', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1C6A00D345464909A1AEFEA90D49B6EE', '<p style=\"margin-left: 40px;\">for（String&nbsp;str&nbsp;:&nbsp;list）{</p><p style=\"margin-left: 40px;\">if(“b”.equals(str)){</p><p style=\"margin-left: 40px;\">list.remove(str);</p><p style=\"margin-left: 120px;\">}</p><p style=\"margin-left: 40px;\">}</p>', '0', 'B35F6BDEC67B4E10B5A979992B175D11', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1C7CDA9262B94A72A6BC3AC385C56C8B', '<p>①④②③<br></p>', '0', '8CC5F2AD665846FD94B11045D6D4BB6B', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1C9A8E00AD2842DAA61BABAC958D2CD8', '<p>端口<br></p>', '0', '10CE2076CEB349AB96447415C0DCA62E', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1CDB9DAF3DF34B11B39AB6656EF57037', '<p>add()<br></p>', '0', 'FBFD600345C746128474DC1110091CAC', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1D03DEBBE9164C289D79DE65367F75FD', '<p>toArray()<br></p>', '1', 'C95F3BF8FFDA49918691CE4261CCE135', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1D18AD98036C4560A38D5D327867CD35', '<p>bit<br></p>', '0', '731403B23CAD463E91A5FB776C1FAB55', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1D289B70F08A4B179602836C27878DE3', '<p>class com.itheima.demo.Bird<br></p>', '1', 'DBFA1AEEDCD746B7BB2C6FC587226ED5', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1D2A80F8973C4C9EA04D92235D327FAF', '<p>重复结构<br></p>', '1', '5C80F57C23D2411286CC72CABC31BF67', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1D3799C22A264DE988442C1A34B09CBA', '<p>视图里面配置<br></p>', '0', '63CD6355C720440587CD2CD2A10C85C4', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1D7015FAF36B4D00B99A678E051AC509', '<p>TreeSet作用是排序</p>', '0', '1BDB4E7917E84F359A9EF2B8B9EEED07', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1D7637239CAB4D6FB683385B845B2A39', '<p>重载参数个数不同<br></p>', '0', 'B4E652C0E40E4D1EB38360856ADFFC21', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1D856B95EBC141ADBA5ACEEA7EBF23CA', '<p>Ctrl + A<br></p>', '0', 'BC98BD294FDB43BD990D0EFB8078A55E', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1D8DE7DD77E64069BF95186BAC3C9E5D', '<p>1</p>', '0', 'CB33FE5453DB4DAF895B84281A6C87D1', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1D9D71C5085F4D518E94EA6C6512B77C', '<p>TreeSet构造函数什么都不传,&nbsp;默认按照类中Comparable的顺序，没有就报错</p>', '1', 'F900394C5F5A4F54939C0CBE54C29761', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1DD879BD5AB642AAB1A5770A313155EC', '<p>arr和arr1存储在堆内存中<br></p>', '0', '40D8ABB364214CD59F300501FAE4FDBD', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1DD933CE62AF4BB881152ABED0120FE1', '<p>StringIndexOfBoundsException<br></p>', '0', 'D236ADB4E3D0408CBE101DCA23AC8E77', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1DE5291ADE884297AAB021C3F421481F', '<p>使用Eclipse的快捷键可以提高开发效率<br></p>', '0', 'E9FB9E6007C84DA380F98382B484735C', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1DEDD6C54DB742ECA6C526D353FE7A4D', '<p>相对于封装而言,get/set是对外提供公共访问方式的形式.<br></p>', '1', '6045FECE4B5A45C9AC20DA97721F9B8D', '2016-01-02 21:47:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1DF0DEA3B8B3462ABA77E6B30A9CEAE9', '<p>根据需求写出类所包含的字段(成员变量)<br></p>', '0', '53972A8A8B14458C8341799FFA6FD180', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1E22ABAD34B0414ABC90E197F327CBE0', '<p>arr.length “]” &nbsp;“,”<br></p>', '0', '4BD5FB6CCBF2416BB66C09067046831D', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1E350C1AFCB240A4AAE8F79BA9D27B62', '<p>yield</p>', '0', 'A0EAA6FC0A3F48239C4F25D5934ADCCF', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1E7AF7770AC245468343AA4EB7F2AFD3', '<p>nextInt(100)<br></p>', '1', '4888C8C80F244B59B3446020061767FA', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1E7F5117CBB54DAF8392B29031F8DDE8', '<p>方法void不需要返回值<br></p>', '0', '220EC8E9622F4702A57A59C54B932E56', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1E7FFA2634134CD8945C8A706F57B945', '<p>Outer.Inner&nbsp;oi&nbsp;=&nbsp;new&nbsp;Outer.Inner();&nbsp;oi.print();</p>', '1', 'E29A9AEA6D304ECFA5AB1DF295D2E766', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1E8EC98EA4E9446B884F85FAD1792F24', '<p>new ByteArrayOutputStream（）利用空参构造创建对象时，内部的数组的大小为32<br></p>', '0', '2B1328117B79429EBD1E9D91D4ADDA0D', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1E8FADFD5A49488A84ACF1E6376CE73E', '<p><code>Math.round(double a);</code><br></p>', '0', 'A6439947B71C40CEAD1EC0391779736A', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1EBA8A1B72694CEB963F96B727F041F4', '<p>1<br></p>', '0', 'E38D396B8E074D408FD29D50FAE5C90B', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1ED8111013E346E5B626594D5E305E59', '<p>变量只能存放short类型的数据<br></p>', '0', '9ACB62DB28C64D218434CA9D817DF19D', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1EE0395C6FE041C4B99C7F7A51F8EA24', '<p>字符输入流是可以直接读字符的IO流<br></p>', '1', '23A1BC07261E4D148BCFF7800FD73746', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1F083387C3B244A2A82C62EB54722C5B', '<p>InputStreamReader<br></p>', '0', 'E493D22E863643849AD408D19B0C6E82', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1F28CA42AB2C4B3CACC6B3DE1FA617F9', '<p>int max = 0;<br></p>', '0', '92851EA035E6414EA8E15FAA3FC9D818', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1F3B513F3B2C4CD4A3BF990E6F29D978', '<p>lastModified()</p>', '1', 'A986BE7D029D4E8A857D392292B94CE3', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1F4C2ECCE7EB479B94D0B31625B275A8', '<p>public&nbsp;class&nbsp;MyRunnable&nbsp;implements&nbsp;Runnable&nbsp;{void&nbsp;run()&nbsp;{}}</p>', '0', 'BA3977A084B145A5BF09684B51B62246', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1F68188B598C42D0A5F7EF0A9EFCC37A', '<p>必须定义在类里面</p>\r\n', '0', '2BEB9B564FB94C61B355D7438B21AEAA', '2016-01-05 00:01:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1F6D8FCE4B414283BE6CCEF353BAC653', '<p>arr.length();<br></p>', '0', '07B7C320E8814F87961A54500C335EA3', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1F7DDC0983FD4399A902C348D4A91860', '<p>put()<br></p>', '0', 'CC439803EACC4AFCBC25A088871C8F30', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1F85EB4880A54DF3BC80EA92298F498A', '<p>定时关机<br></p>', '0', '250F9DE779A24CF591EFD2662443FF2C', '2016-01-02 21:48:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1F8FEFD9B1FF4690A1A3C7CF5C418D90', '<p>将小数转换成整数<br></p>', '0', '486BDBB1E1774281923B41E3971B85D6', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1F9FADB1070A430F833220E2D31C256D', '<p>Hashtable线程不安全，效率高<br></p>', '0', '54A8D0C2268A4968AE8DEB65F03C3009', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1FAB2D030D0B48C69809A70AC204CDC4', '<p>30</p>\r\n', '1', 'B66CC6E588694071A282A230E094864E', '2016-01-05 11:12:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1FB0B6EB3CDC45EDA5F8ED69C37F3CEF', '<p>path环境在配置的时候一定要配置到jre的路径<br></p>', '0', 'D82E262D49964DA5BAD682A347609C27', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1FC086001F534785872BEAD9885139E1', '<p>java.util.Hashtable<br></p>', '0', '31839F2DFE7844D7B2D244FBDF93D4BB', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1FC180A240B14AE082BC9C3267819480', '<p>底层是链表数据结构<br></p>', '0', '1DA52701C92B497CB51ECFF3DA659599', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1FCCE0F041B24824B8659F9FBAFF8249', '<p>15</p>', '1', 'CB33FE5453DB4DAF895B84281A6C87D1', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('1FFBCE85E31840B38334652B8E8EDE0F', '<p>c是最大值<br></p>', '0', '0EF6FB630044444EB4987440FD362DA7', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('200D917995B94D40831315103EA23B4D', '<p>int a =10,byte b = 20; a = a + b;<br></p>', '0', 'BBA6C034844F4D2A94B5E112DE0EACDC', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('20160B05062F4537AA3F5824E9B95B13', '<p>cccbbbaaa<br></p>', '1', '807293A3E5584E6FAD4E4C5A9C3E9E33', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('201A4E2799B24900B141724419780F52', '<p>在新建一个类的时候选择要继承的类<br></p>', '0', '7107FBB15B1342D18A4C100AD383FDE4', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('201D35ACEE2140888F9A280F6354F6FD', '<p>麦克…美国&nbsp;&nbsp; &nbsp;红杉…中国<br></p>', '0', 'F26C847CE8BA4DF190702CAC25325E9B', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('202ADE3BDD3E4786AA0F74A750EF2BDC', '<p>substring(int start)<br></p>', '1', 'EA435461E9804BB3BD076299F94596C9', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2041D528788D46148A73B10749DF3BCC', '<p>Eclipse在调试的过程中不能查看变量的值<br></p>', '0', '59F7BF9A637B45ECABCE864AD03E1C10', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2062F1A950BD4B1696ACEDED73CABC15', '<p>多线程<br></p>', '1', 'C9941695E82148F68B3F583A562C9A62', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('206A0A08A0AC405CA229D972A5462D14', '<p>s.charAt(i-1)<br></p>', '0', '01CF3AB7BBBD428BBAC7AB947756FE36', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('207485F558D745EDB3C48C8AD1D3A2D6', '<p>它是接口<br></p>', '1', '42C225CF6FAD46BA95AF3285E380BA0E', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('208F68CEE070410781B788158B4E681F', '<p>&amp;<br></p>', '1', '02A7752C2C3540CDA19331A0A6A4C066', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('209F76B395F94C8DBDC6B4C956ECCBEE', '<p>&nbsp;\' \'代表一个字符常量<br></p>', '0', '75906B56A6B8419BBF1E9248577BF821', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('20BF3FDCE3754AD498B250C5D6E0AD3F', '<p>不能出现数字<br></p>', '0', '7FDB670A43DE44DC903E2528F9E95D8E', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('20EDDCA9354145FCA9554DDF8A94A8D4', '<p>Eclipse的内容辅助键能够关闭<br></p>', '0', 'B3ABBD0FA917446B92F30996C5B1EE4A', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('20F7B538EFD24D0589359A64B3E850FF', '<p>SUN公司<br></p>', '1', '080FDAD8D4874AF3B15A83F0591A2163', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('20F947448D674299970E5A50D0F32B5B', '<p>端口是有范围限制的<br></p>', '0', 'EAC6F8DD5F76422FB9B4EC9FACF0B092', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('210E3F24946942BC92A3E75F3E2BB66F', '<p>break可以跳出多层循环<br></p>', '0', 'D5CA68DAC00C46709D7913CC0252068C', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('212314F449924A21999768078B77D362', '<p>FileReader是使用默认码表读取文件, 如果需要使用指定码表读取, 那么可以使用InputStreamReader(字节流,编码表)<br></p>', '1', '5C991C62665541F3B187E735E201A4EF', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2151E44E17964721B72201A51993C2E5', '<p>自然排序底层调用的是comparator方法</p>', '0', 'F2BA91FEBE1441C69ABE862E9FC110C6', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('216E87AF47854687A3F38CCDD27E5D17', '<p>Writer是个接口<br></p>', '0', 'B94EBBCF0DE948F794FBA83978CFF19E', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('21AC2B2076C849A1A43A3D6A1F75339D', '<p>setProperty(String key,String value)将键key对应的值改为value</p>', '1', '70960B5A0F474ADBA008B51B72CB209B', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('21B1C588A1A24B81996C1FB2420AF920', '<p>表达式1处可以定义变量</p>\r\n', '0', '9B5D75894C81487EA56A9955B9159CEF', '2016-01-05 10:29:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('22110581194245D1A6767F1608C9D8D2', '<p> DataInputStream</p>', '1', '40488E49581B4BA5B66F9E7B5B6D6490', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('222B41695F984DA991E4E76BE930B4C8', '<p>返回值类型为int<br></p>', '0', '02057E92DC3840A79ED42A411E2D26B5', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2237D06E4352419A84CB65FB23DBCA6C', '<p>equals()比较字符串中的内容，区分大小写<br></p>', '0', '7F26954476384AE180AB99B83770644B', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2238D587AF8645FDBF0A70E66F3968AC', '<p>static<br></p>', '0', 'AD49D486EFCE47DE9C06F8A847DAD05B', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('22415253DD63491CA490A83C0F02F56A', '<p>迭代器是取出集合元素的方式<br></p>', '0', '0969B6C5716B4F1ABEC65C7AE62E9A0E', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('224C2D2326D84046A433555279B05082', '<p>keys()<br></p>', '0', '666B224A81A14522A8B34757E05F7E7E', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2256E56F00F3444396858F17EE3DE256', '<p>向集合中添加数据<br></p>', '0', 'E2525262D08243E38EADD4BF65ACBA41', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('225E52028B854ED8ACFB9E56082BE84E', '<p>代码在JDK6中会报错</p>', '0', '65135771ACA245C1969ED16F8AF18C3C', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('22624CF299F84A2F8127129208072725', '<p>nextDouble()<br></p>', '0', '4888C8C80F244B59B3446020061767FA', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('22C9EB791AF544098BB0C199DC68AA2C', '<p>60</p>', '0', 'CB33FE5453DB4DAF895B84281A6C87D1', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('22E7AF651B9647A1A12C4603E7E18670', '<p>List是一个接口<br></p>', '1', 'D056B5E073414D30AA34FAC661845B39', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('22FE5CE1F39B4D109729C9F5252A5026', '<p>Scanner类不可以被继承<br></p>', '0', '10DEC256C8D84F0EA9EDEB62BCBE01D4', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('230D8B2DBE6F4BD799DAE88BAB811DDB', '<p>匿名内部类也是一种局部内部类</p>', '0', 'A01B816D6C0A473D8CD780F5518299F2', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('23477A1F18544BC093E413996DE5697F', '<p>如果想用这个体系的所有功能用最底层的实现类类创建对象<br></p>', '1', '1EA120BF3FE04991B16A5CADE159A2EC', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('234A111339444FF4ACBE19ABAAA7A96B', '<p>arr[2]表示的是3<br></p>', '0', '53FFB5CEF5B74A0AAAC32872249A1EFC', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('23669EC2F7214BE69967582FE9468E00', '<p>-128</p>', '0', 'C6A225B19F4D45599BC79D4C66D1B27F', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2388E6DE7BBF4873882DEBAECA11F6D5', '<p>102</p>\r\n', '0', 'F307AA3E5E5B4A10B6616053F4AD8CEF', '2016-01-05 10:36:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('238E1DDBB87449AEB19CD910C2029FFD', '<p>write(String str)写入字符串<br></p>', '1', 'DC03150AE72749B5A74CA278014B2295', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('23933E7C65D941B191AAE28E63D5179C', '<p>编译失败<br></p>', '1', '241C001A59B44737A1F152EB8D0235BB', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('239F47ABDE21492A8801EC047C01FFD6', '<p>nextInt(int&nbsp;i)</p>', '1', '45893D65D9D54B02A3DC7034F68BA22D', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('23BAB67EE86F4F8AA24C6AB718DE1FF1', '<p>类是一组相关的属性和行为的集合<br></p>', '1', 'A327EF48F62A483BBC718FB369E43458', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('23BE25B2D3974E719DFCC616B185C129', '<p>7</p>', '0', '79B602AAD637488BAFB1D62CBA7CA463', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('23C00B2C655F45B4BB5251C7103CADCB', '<p>return&nbsp;num&nbsp;==&nbsp;1&nbsp;?&nbsp;1&nbsp;:&nbsp;num;</p>', '0', '1FEDB9888FF844ED8CB40D0CE8306829', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('23C0DC0E092A4F20B8AA27061DDABD40', '<p>Hashtable</p>', '0', '76408DB7AA0D4B369FFEAB1BB73AFA4E', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('23C629C48F7F4B639AB083B5161FE9D8', '<p>学生信息表.xlsx<br></p>', '0', '0B4FD060189A4B7BB285C9A375F22E21', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('23D179DD2DF94AA8ACEE11090C46885B', '<p>LinkedHashMap</p>', '0', 'D61EA19FB199424B9CCDD97BD2CACAC2', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('23D5AD1107C04B259530CA750AE085B8', '<p>本地方法区<br></p>', '1', '8D00691B69E84B08A222DC27CFCEF295', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('23E317021FEA4492A4FE2359877102B0', '<p>音频</p>', '1', '90F2897E8C544479888DE47DBBB731E7', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('23E50D6FA2C54152AB1A46C3CBA110A1', '<p>45</p>\r\n', '0', 'B66CC6E588694071A282A230E094864E', '2016-01-05 11:12:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('23EC7407D17F4F04A55EE1B9F5128881', '<p>该方法会暂停当前正在执行的线程，并执行其他线程。</p>', '1', '8F1AA4FB4A414E7EB5D9BE30B03CFD8D', '2016-01-02 21:47:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('23EF5BBE1E0C450AA58A4EE96B9F6A65', '<p>输出结果246123<br></p>', '1', '6E42BEF6CEFE44948D4E7E5A6D3BC0CB', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('23FE2D00EECB4B67BBC266A0385DEDD1', '<p>30</p>', '0', '6A287735F4D844A187A6A62A63377CBB', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2402AF927F0C4F69864C8F053B369F77', '<p>一次也不执行<br></p>', '0', '74FDBB5D7BDD414AA3B230749EB17314', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('24166C92FA8548C7BA32A9AC55CE02C6', '<p>true &nbsp; false<br></p>', '0', '0410F6FBDC46487E961BF860ECEF3FAD', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2429546158DE4CD3939F32059478250C', '<p>谭浩强<br></p>', '0', '9044D413056A4004B095EC7E13C4CF4A', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('24340E28A439434C983121A40C86180E', '<p>传输速度慢<br></p>', '0', 'F1AFAEA79CC340B2B2BCC378C0F81379', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('243896394FC24E19A8B8EC91D2BBDCD8', '<p>int&nbsp;x=0;x&lt;list.size();x++</p>', '0', '16E4716E3627450DB9D3608C877DAAED', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('243BCC47238E4B47B5C75384D37D7C09', '<p>输出HelloWorld<br></p>', '0', '07D3FBF723F944EAA25CB8196E646934', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('245CB66AA1E846EFB32181FD4C15A990', '<p>mysql: 3306<br></p>', '0', '8827C46562E9440BB80871F6406C8135', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('247146EF6C2A48FAB0D2E062F204B7B7', '<p>OutputStreamWriter&nbsp;<br></p>', '0', 'E493D22E863643849AD408D19B0C6E82', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('249835FD7F2C413D8D59989D940CC56C', '<p>我爱</p>', '0', '30E2F61D607D43FCA7B2D203D82452C3', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('24A0D52200024C619D8DB3B4A2741075', '<p>执行三次<br></p>', '0', '62B73B2E710C427D8CC060B7B937C9DA', '2016-01-02 21:47:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('24A1B1703BC145A09053242E8182F6E8', '<p>sum = arr[i];<br></p>', '0', '723FBF5D4AFE456CA69CA953ED84DDEE', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('24C56893077941FE8841795ED1BD5F22', '<p>键盘录入数据不能为空<br></p>', '0', '336BDAE1204B458EB770E6667344FC24', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('24C7BE52122C424AA421CFB0AF536516', '<p>10&nbsp; 10<br></p>', '0', 'AAFF84AD7A244E008ABB512CF54A50CC', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('24D90C3AE4C142B2A87AE6DC225FB96F', '<p>左大括号前需要有空格<br></p>', '0', '59DC01D2DDD7479DAAA00AF27A2A9201', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('24DFF03383E14FC49686B7449A0FAF3E', '<p>底层采用二叉树结构<br></p>', '1', 'F372CD79AB23497A9BB444A053550E83', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('24FA636A9B404CC087B35684D49072C8', '<p>局部变量随着方法的调用完毕,会马上变成垃圾，等待回收<br></p>', '0', '6BD060F37CA8461E8BADCCBB01F5E5EE', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('251E4DED02C64897B980924ED38866CC', '<p>father&nbsp;son</p>', '0', 'AA12F39BE1944F0DBA3C9E853C92CDB6', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2521A2B04EC14F9390BD5DF2B2FE71B8', '<p>Eclipse是一款纯Java编写的软件<br></p>', '0', '0D9A8E62FBE541EBA102263994E43699', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2523138036F44816840C11C3E83E8003', '<p>System.out.println(isEqual);<br></p>', '0', '093164F779F84F12A6592CD451E8CD72', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('256B35D681844E78ADA6836FDF181F79', '<p>编译时正确，运行时将产生错误</p>\r\n', '0', 'FBC5C3D0FBE747D99EBCCA018866C469', '2016-01-05 11:04:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('25726C009B5A4465BF04F2F6D8600385', '<p>super可以调用本类中的成员变量，也可以调用父类中的成员变量<br></p>', '1', '1260425F964E43A885DEF47F72190014', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('25766AD43BC44AC6997D46AB1F3A2635', '<p>由于Math类在java.lang包下，所以需要导包<br></p>', '0', '9249DAA6C0ED483F982C0959E0F90EAE', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2577121759FE4FE4835A4E32B6792999', '<p>2<br></p>', '1', '3E9665E3DA3044A7B21EEE97452696A8', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('257DDA2DF3F24B1AAAADCE1705B2A72E', '<p>能够同时具有去重复和排序功能</p>', '1', '8366C52BC4454EAB89F2B674A19235C8', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2589044E0836462581729EA0BC6F795F', '<p>以上都不对<br></p>', '0', 'B1D97BDD72364C67A1D59562EED7F17B', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('258ADFE003C5474A9AD0B21E39F5C940', '<p>按照平台默认的码表将字节转换成字符串<br></p>', '0', '3594B84AFBE84CA7B5EB04EB744A0113', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2590A44B2B384CC8AD31F73561422F01', '<p>Iterator继承了ListIterator<br></p>', '0', '9C318EE3C8534C2B87699FB4FDCEB2D7', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('259130626E0049ED9228635FED81547B', '<p>values()<br></p>', '0', '005A1DFF0D044DB08C8AE85D8A358C7C', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('25D61C4FD8944C39880D3CB0E70083E1', '<p>ListIterator继承了Iterator<br></p>', '1', '9C318EE3C8534C2B87699FB4FDCEB2D7', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('25FE49EBAD794F6FA66E36AD78B6E5DC', '<p>必须先有类才会有对象<br></p>', '0', 'F8FC413C1E344492BA0171CBBB2B2465', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('260709764D104BF78BAA20B0EDA9EEC4', '<p>服务器地址和文件<br></p>', '0', '9C107AB645FE41F38061CA0B661A7700', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('26126503EA2A40248631422D56448116', '<p>void show(){}<br></p>', '0', '0BB77E63B8B54AB7AE7F8B315B6EB5D4', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2612FA7C3971421FA27FA44D15E5554F', '<p>以上方式都可以。</p>', '0', 'A1FFEB9AF0A84C43BB462A7D2A588928', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2626ADFD9BF74298A0CB978A526BA8A8', '<p>一个接口可以实现另一个接口</p>', '0', 'AEBD3C1BA9D043C6B8FF5EAA11FA98A1', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('263131EB0802457C9D5CB07348F1976A', '<p>集合的长度是不可变的<br></p>', '1', '68C9BD499C284A208690688ABBDB0226', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('263752E9A85C4F189ED0E820CF48F847', '<p>代码加入异常处理是为了尽可能的让流关掉<br></p>', '1', '5C58ACF8E5AE4C2AB1E30FA2098ACC32', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('26411B6E6DB3474D8F3A9BDF53C72D80', '<p>打开一个应用程序，比如QQ<br></p>', '1', '4075D5322C2B441D928A1E40D456EE19', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('264EBFFDE86C4729A8708DA06BD9D85E', '<p>Eclipse的Console可以显示程序的运行结果<br></p>', '1', '1871BE8CAFCF45989ADF9A9F8EAAA4E4', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('265EE50FE3D24B48867127C5C64E14CC', '<p>File(File parent, String child)<br></p>', '0', 'D673A54F40704922BD0286D2E93546C6', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('265EE6A4A14F46458ED54F3DEE7D2F6E', '<p>main函数自己处理，然后程序继续运行<br></p>', '0', 'FA00992F4283462EADC6D32A015294D0', '2016-01-02 21:47:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2660B2C600194449B5AF873DF640B7ED', '<p>&nbsp;同步代码块使用synchronized关键字修饰，且可以使用任意对象作为锁对象。</p>', '0', '474C9456A2D04ED29D8C2EDCA8B46124', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('266C84D4D7074B05BED312B1B5590823', '<p>static&nbsp;int&nbsp;num&nbsp;=&nbsp;10;</p>', '0', 'CFAD69DD0D5049CA8C1349C029A0514E', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2688B19F773F467088A1681158FD6262', '<p>成员变量存储的是对象的属性值，如果不加private的话，其他类可以访问该类的属性并修改，所以不加private会导致数据不安全<br></p>', '1', '90A84EEEF72F4854AAE28BAE929EFCEE', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('26949B18A17D41FD8C189889CE0BA449', '<p>static&nbsp;final&nbsp;int&nbsp;MALE&nbsp;=&nbsp;1;</p>', '1', '7CBA09F92E8243F887A5870A80CC1F46', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('26A0BC2490C34BB198571E0AAF58F676', '<p>当导入的方法和本类的方法重名时，只会执行本类中的同名方法</p>', '0', '80EC425FA3714F388A1197AF6EABB575', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('26D9C42F46074C34BFB9FF795E4B419F', '<p>运行错误<br></p>', '0', '1704CF5FE5D3469DB943E64C1D6DE4C2', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('26FCA39386FE4A099BDB862C8FFA870D', '<p>Serializable</p>', '0', 'B93B4547F5D342E6ACF1EA2905E7BD8A', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2709233D8A7D4347BD740EA2169063E4', '<p>使用Eclipse可以在子类中自动生成要重写的方法<br></p>', '1', '42A26E2F819042C18518600FACE18619', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2717A138F9B04D54AE93F0B9A43E12D2', '<p>1</p>', '0', '30C0DFD41E144EF790498E8055558384', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2717C49872CA42BF932790095AB3FC9A', '<p>equals()<br></p>', '0', '74AB41356CA14C88BFFE6D2188ED6E37', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('27198D26D5FE47178BD6F288055D7F4F', '<p>此方法将读取到的字节强制类型转换为int类型并返回<br></p>', '0', '7F6C3B9BF0854F5CA036D7F5DE7565C5', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('272FDD8ECB344FE9B71A54AA8A4CFBF1', '<p>abstract</p>', '0', '45240CAAA08A471F984E11DF7D191CB8', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('273A3CBD1AE84E5CBFC1F45F1DE672F0', '<p>getTime()</p>', '0', 'A986BE7D029D4E8A857D392292B94CE3', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2749BAFDB9AA40EE967D20F16A028514', '<p>判断集合中是否还有上一个元素<br></p>', '0', 'DE3E588268E544EDAC25B5FE6768DDEF', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2773D21564864F49AA780F25C484A691', '<p>==<br></p>', '0', 'CB85CC56285A4818B23686386CFED7BA', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('27A0B5F93CCE4D8794DD1CC0ADFB02AA', '<p>当持有锁的线程对象调用了构造方法时，线程将释放其持有的锁</p>', '1', '6862677813E9439F9BB235FE0C983BBF', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('27A82ADF66494CCB8198213A7D16DB99', '<p>s.charAt(i+1)<br></p>', '0', '01CF3AB7BBBD428BBAC7AB947756FE36', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('27BA57E165574FA88714719A335BA7C9', '<p>1 &nbsp;-1 &nbsp;2<br></p>', '0', '99438713791F4BE5B06AA1C51F25A1E4', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('27E3223858C44B7985CCC929694B7C70', '<p>-12.0<br></p>', '1', '7CC4B66DB3914722823B6F357800EAC5', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2816D46A3205453481DE0235AAC22DE6', '<p>Integer<br></p>', '1', 'E9413BB2B1454186AA01B707B2AC9C4E', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('281C6B10C6F145128AB86BE9EFCA34AD', '<p style=\"margin-left: 40px;\">if (map.containsKey(ch[i])) { &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;map.put(ch[i], (Integer) map.get(ch[i]) + 1); &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} else { &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;map.put(ch[i], 1); &nbsp;<br>&nbsp;&nbsp; &nbsp;}<br></p>', '1', 'F0BCFB0C0DC640B990467D6472937FAA', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('285006659A594C259CD6EB521BD497C0', '<p>循环结构<br></p>', '0', '5C80F57C23D2411286CC72CABC31BF67', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2868DBF522BC46E3B626449DB6D07B5F', '<p>al含有6个元素对象</p>', '0', '685DFB0453F440FEBE66AC2422839BE6', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2869C07981374036B2865E2B5EE79D34', '<p>提高代码利用性<br></p>', '0', '5C1B8766AA0849039A4E25E64A8B5BD9', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('28784A2A156B43609679E91BA746588A', '<p>成员变量在堆内存中,局部变量在栈内存中<br></p>', '0', '6BD060F37CA8461E8BADCCBB01F5E5EE', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('288A2807F12F4A6092B333A1AB06925D', '<p>以上说法都错误<br></p>', '0', '239434072AC84FF89E0E2A017BD34DF6', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('28969C57BC694CAFB4E952F7512F0A4B', '<p>外部类不能访问内部类的成员</p>', '0', 'C04E8836D56E49C2B5A46E3CCC2CAE7F', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2899132C6D75489D92B75255B91145AB', '<p>256</p>', '1', 'DAA71957B76C40E5BC543E3FE8E9A8D3', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('28A32D586DAF4C5192F20BD38E7D600A', '<p>true true<br></p>', '0', '24A6885B91CB4F26A77FD0A15FC87CC2', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('28A3C9E0F7DF41ECA49CB1BFCD5FA164', '<p>图形化界面<br></p>', '0', 'C9B9CE0BCC134C44A9DFA1BFB5E2F74C', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('28C936434203497691C638C2FE848B4E', '<p>read()方法的返回值类型为char类型<br></p>', '1', 'AA60F98945B64B2A9EA5119DBEE91558', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('28CDD5FDDF6E44988A5A26C01F093E82', '<p>乘法运算<br></p>', '0', 'ED9C63FEB43D49AAA6970E24EA92C336', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('28D7F811CEFB4CB48F8ED2176367E09D', '<p>deleteCharAt(int index)<br></p>', '1', '68B2BC19D7FB4B349E744A7044540A0A', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('28EF2FAC8FA64902B1EBEB07D2367A91', '<p>输出语句写错<br></p>', '1', '07D3FBF723F944EAA25CB8196E646934', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('291CCD5774D042CC97954ED7E7E4EAE3', '<p>以上说法都不正确</p>', '0', '4CEED7721F1E403CAEDC40CA76136CD1', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('29230A88AAF94A5788630C35E84BA9FA', '<p>DatagramPacket packet = new DatagramPacket(bys, bys.length);</p>', '0', '542E4E11A78E42C4B90361B6A797B712', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('292559002C92433E8A818B0693CA5275', '<p>增删快</p>', '0', 'DCEA05941DA1408989ACA558273E8284', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('292877DD648F436789E6959589E90C2C', '<p>8</p>', '0', 'BD4CA8CD3EE44A24B3F1C1B019FFD1AE', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2944F77439404FF29BD1C99AEDB6B5C2', '<p>b</p>\r\n', '0', '815707A427DB4395910AA176F36D07B3', '2016-01-05 11:00:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2982AF2D13084DD688BF09F9B798C232', '<p>mkdir()<br></p>', '1', 'CB8F89FDA6D94D199548C3ECA0977F93', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('299756C7E7284F9196D39F709743FE1A', '<p>arr[5]它表示数组第五个元素的值<br></p>', '0', '1C0C0B2696524EFFB6EBC9F4C62563E9', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('299855E031EE4255B998D31844510B3E', '<p>Eclipse导入的工程不能与当前工作空间已有的工程重名<br></p>', '1', '8257B99B2060481195BD179F11E876BB', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('299EAE103DE94F19B2A35F70D6B73D3D', '<p>定义格式错误，参数列表应该改为(T,Q&nbsp;t)</p>', '0', '2B10E85490784C558198CD8CAFEAB066', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('29A91F6F0E2D4BB186C1F2D3A979ECE2', '<p>在同一个区域里只可以定义一种类型的变量<br></p>', '0', '61D46B50A90E46DF8BA35FCC5F8F2015', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('29AFCFAAFB2F4B22BE1F9F3C801DFCE2', '<p>堆内存当中<br></p>', '0', '9E473EA8F121455B9F3E561111B15163', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('29B4C03A02FC4B65BACF851A882EE23F', '<p>Fu.print();<br></p>', '0', '983E3C9038BC4A1D8A531525230D09CA', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('29E461A847634691B070F7D4F74C9095', '<p>如果我们没有给出构造方法，系统也不会提供无参构造方法。<br></p>', '1', '27F0DB3629724236AFCAAC9D331E9B7B', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2A2C0C448FAD440898D2FE2469293DBE', '<p>将list中的内容加载到LinkedHashSet类对象中</p>', '1', '678167F74A8242F682DAD56C6ECA1108', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2A4847965D814F58BDDA7FDA4B90A112', '<p>控制台第四行肯定是我<br></p>', '1', '26E774C543914673B7AB71AB09B53885', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2A4DD6A870B54E858CF0825798E3BBFC', '<p>ob10010010<br></p>', '0', '8E0656F4C648464F955A1F1397EA26E1', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2A5F255ED41A4CEDB72D74762D8224B5', '<p>15<br></p>', '0', 'AC6C058ECC3C458C87B81921EDA4B36B', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2A7C3590CB114254829D279E50AB38B9', '<p>class&nbsp;Demo&nbsp;implements&nbsp;Inner&lt;T&gt;{}</p>', '1', '002959145FF740F19D81782709F7BE4A', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2A7EAED106FA467EB0FABE6FF28E58E4', '<p>接口中所有方法都是抽象的，所有接口需要加abstract修饰</p>', '0', '4E965A2AACDB4C5DBC3B366338FC4F95', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2A812A91B6E549D9910ACB303531054D', '<p>1</p>', '0', '848C122FCDF54222A12F365187AB580E', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2A8C69A22D0A44D58DED298C75EF4BF6', '<p>硬件+软件<br></p>', '0', '7D055CB4494043AEA4E9430901957716', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2A8FE9836EDD41B6B735CFCAD3D53C08', '<p>无限次<br></p>', '0', '60A51680B62D4AC88B2DB8D2FD22F207', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2AA37C6460714A3481581765CFD7C2CD', '<p>增删快<br></p>', '1', 'BA186F671712469ABD11D239EF870550', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2AAF0E4373B04C9E8BFF504EAD195F07', '<p>false false<br></p>', '0', '9251C7A13D474CD28C7CB5E4E869441B', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2AC22883509F4C48BC6F1796136AD346', '<p>可以通过ByteArrayOutputStream和ByteArrayInputStream实现文件的复制</p>', '0', 'B8E832318E7E45858627E4128B6C682D', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2ADA5B70DD204C9F8635C84BA472C159', '<p>因为Java规定,必须这样写<br></p>', '0', '90A84EEEF72F4854AAE28BAE929EFCEE', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2ADBEA30A18C40E7B16D5F23A4384B42', '<p>BufferedWriter<br></p>', '0', '694054E43A514284AD1CE42B86917259', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2ADE0BB8990F40828FA9807483EFAC1C', '<p>编译报错</p>', '1', '6A287735F4D844A187A6A62A63377CBB', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2AE3A207CC744E7B84A4D44601A876DB', '<p>&nbsp;abstract&nbsp;Animal{&nbsp;abstract&nbsp;void&nbsp;sleep();}</p>', '0', '44A49A9EF03A4EA6998B38348D7009DD', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2AE4D2ADA4C94760811F092152E3F028', '<p>把一个类定义一个{}里面，就是内部类</p>', '0', '92DB061FED0D40088C8A30BC829D753C', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2B04CEC6F7824975A60D6C1D6B9F9771', '<p>getInputStream()<br></p>', '0', 'DE9B7F867EE2467AAB50F96A440F3D06', '2016-01-02 21:47:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2B1CCA91BD7442EEA3E100A92EA4B18C', '<p>通过实现Serializable接口<br></p>', '0', 'BF2452AB0C51426BBF9C6577658CE85B', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2B5E0F7549054C6D89D7832BB498EF57', '<p>&nbsp;FilterInputStream</p>', '0', '1F61674539B34419942625A04F4AD41E', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2B63F7E009044B3896BDC5C6724CFE93', '<p>Ctrl+Shift+F可以快速格式化代码<br></p>', '1', '5C059B1C4AC14AFBB2362D864314C2E6', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2B6FD502A7BE472AB1BE3409EA24B894', '<p>if后表达式的值如果为true则执行if体内容<br></p>', '0', '6801C0F41E3C422A8D4E054B17ED5250', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2B79FD2F48D74B6B9E226ADF2E059889', '<p>方法重写与返回值无关<br></p>', '0', 'D55A5B0A8D3F401A9E8D9EE820D72B85', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2B9579B10686449BAAFF0BFC9F290A88', '<p>try块后通常应有一个catch 块，用来处理try块中抛出的异常<br></p>', '1', '78690A146BD14FEF922F73FFB7F2B4DE', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2BBCEB55BEBF416D9156249CCB2043F3', '<p>clear()</p>', '0', '2CE29EB738E0494B851E80649D5CFDA6', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2BCCE37B4FB84ADCBDD2A67445962CA7', '<p>StringBuffer是线程安全的<br></p>', '0', '2EA8E15740084D309085376DC7913C8A', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2BD9FAE0A14B42F0B89A8CCD40EFA267', '<p>5</p>', '1', 'AF44665882AD400CB5E5726549B81E7C', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2BDFE7E8A6F44AA08F8E3AF7A5A894BB', '<p>arr[6] =1;会出现NullPointerException<br></p>', '1', '38F24C79B28E4739949A918808B2CA05', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2BF9108F8DDC4CDAB3B840F7514595FA', '<p>al里面只有abc这个元素</p>', '0', '993C39252AC244719040FDC5CF7FAF68', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2C020F31D5D14291BCB07B097D42D4BD', '<p>返回一个新的字符串<br></p>', '0', 'E3A82A2134784974A7055D3F90358409', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2C38D86C8C1D40B581AD7B3095D134BF', '<p>++<br></p>', '0', '02A7752C2C3540CDA19331A0A6A4C066', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2C3C62EC002041F5B45C544540C088F4', '<p>输出结果aaabbbccc<br></p>', '0', '457E231D07BD4B05AD8087790868B821', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2C4D8828DEBF43E7AA0AFFB7793529BD', '<p>getName()<br></p>', '0', '3CA9A912222A4EF6B38F4C23582285E8', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2C6134B3CC914AA6A22C954C22F3FA81', '<p>数组只能存储基本数据类型<br></p>', '0', '6A4CEEBF9CC94157B1ED6D436ECC44AB', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2C989DC9084F4202853C0D37E715D6F4', '<p>获取日期对象<br></p>', '0', '02057E92DC3840A79ED42A411E2D26B5', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2C9C5BAB971A4E4FA67138E2701D0717', '<p>15</p>', '0', '5C0EAF5A51694E2FA4ABC35E4A865191', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2C9F1BA88AF242DEAFD0F948F830DE33', '<p>final是个关键字，用来修饰成员变量(此变量就为常量)、成员方法(此方法不能被重写)、类(此类不能被继承)<br></p>', '0', 'CF14E6E17877442E9724C74A118A9D95', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2CA35161C3D741E481FD1C7E2DCA60CD', '<p>add()是List里特有的方法<br></p>', '0', '51ABBF707F47415C82F43F64DDC49AF2', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2CAE8C10F6F54D20B1EC8174F83379DC', '<p>arr和arr1存储在堆内存中</p>', '0', 'A896AB991E4A408D8E24F851156CD835', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2CB68A8C373040C28CF6848FCFDC1528', '<p>Java API中很多类都重写了Object类中的toString()方法<br></p>', '1', 'E85D40CAE492434BBCA76F3404531777', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2CC99E29C0D14096A6AE05D81E3554F9', '<p>代码移除了所有的张三</p>', '0', '2D893DF5AD2D4BA38B380E261540BC4F', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2D06001D28884E4381010E0DC9C258BC', '<p>一个汉字占三个字节，第一个字节一定是负数，第二个字节正负都有可能</p>', '0', '05891635210E477EB6CD9E35F89DE0F8', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2D093F85297C406A9E2851E2BCF5B03A', '<p>&lt;&lt;&lt; 无符号右移,无论最高位是0还是1,左边补齐0<br></p>', '0', '73175E9E137A4486BDB17BAA2BE0C394', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2D66481C5050407F916619E4CF9D91CC', '<p>Date d = new Date();<br></p>', '0', '84D76288A25E41189383050ED586A9E8', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2D749648B1F640CD8AB7304A88853ADF', '<p>4</p>\r\n', '0', '3C802AF0274E4FCB97401CA6E5FDD722', '2016-01-05 11:17:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2D7D0736DBA94EB4BCA27CBC912F2087', '<p>选择结构<br></p>', '0', '5C80F57C23D2411286CC72CABC31BF67', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2D7FC38576244B24AB1AD79E8B218EE1', '<p>有get和set方法<br></p>', '0', '6BF856C9C89F45229B4F4F1EAC4B4FEA', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2D864A4B67A746E3B38799658E68DF1A', '<p>匿名内部类的格式：new&nbsp;普通类/抽象类/接口(){…}</p>', '0', 'F21472BC32C54433B07816F5A09E80F0', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2DB85DAB47EC497FB981A28A25E51824', '<p>&nbsp;Throwable</p>', '0', 'B93B4547F5D342E6ACF1EA2905E7BD8A', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2DFC599C75554057BCB632C5019AB250', '<p>bin目录下都是存放一些可执行的程序<br></p>', '0', 'CBE5220D07344E00A659917DFD9CBB58', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2E526B0C050146ADB75C9D93A401399A', '<p>截取索引从start+1到end的字符<br></p>', '0', '328DFDBB71764E95BE1C7F5CF17E38F0', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2E58D9DEF821490AB1E68E53BB2B68CE', '<p>ArrayList线程不安全效率高，Vector线程安全效率低</p>', '0', '6DB438E43B7D4B4493A4DF8BC65A09E0', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2E6DA7E967184201AB79CF6AA1D06E1F', '<p>protected</p>', '0', '270639BBB31840FA98D5A37240A91DE9', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2E842440E294431792A02938197FD316', '<p>一次也不执行<br></p>', '1', '60A51680B62D4AC88B2DB8D2FD22F207', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2E8EA4E64CB542388C270C388EB423B2', '<p>编译错误<br></p>', '0', '960474F91B394706A50D8267912DA514', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2EAA5650B8B34941A6D2CA463BDAB780', '<p>非静态常量<br></p>', '0', '525B7C54E37D46EAA896B2EDE0BBDD43', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2ED052D13CF9417A9668945E1EC17D60', '<p>DateOutputStream</p>', '0', '786FF8D3E04D43B08B08F3810BCE9E9A', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2EDE1EF41F6944EBB1AE55E7ADC72DBA', '<p>java语言编写的程序，一次编译后，可以在多个系统平台上运行</p>\r\n', '0', '524AD33A76AA4111AD4DE86132E49DCA', '2016-01-05 10:46:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2EEAE8A5912641D5886EA79927692DC5', '<p>隐式类型转换也叫做强转类型转换<br></p>', '0', '31EDA5FF01BF4F90912E7E69883F341B', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2EF48E1093234B6ABDC63CA83F8143AC', '<p>finla修饰的类不能被继承<br></p>', '0', '33239BCD1BD044E0A316F6AE2072E271', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2EFEF9E6C7F7468E851893F19EA4E3CA', '<p>InputStream类<br></p>', '0', '89E2B9BACB054CAB8EF91B0D95A40520', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2F078221DDC34C4BBD2D54D3B3321A37', '<p>public&nbsp;void&nbsp;aMethod();</p>', '1', '6DDC9DBD20474961BA8433E665F28363', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2F1BBF4397F441109289E883903DA053', '<p>构造代码块随着对象的创建而执行<br></p>', '0', '39CAE2CBBD9F4A20984DC823D3B6A0B9', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2F3B72EBBF1A4B9A9939BB36E8F6BBB0', '<p>项目中合理的运用设计模式可以解决很多复杂问题，每种模式都有相应的原理与之对应，并且具有普适性，这也是设计模式被广泛接受的原因。<br></p>', '0', '4AA86A7960B84562BE0A1F96D081064C', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2F59E16FF307463A8ED3CD2120A9AF5A', '<p>可以由数字和英文拉丁字母组成，且可以任意排序</p>\r\n', '0', 'E3B0235E2A2D4BDDB3F100D9CD28305F', '2016-01-05 00:09:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2FA5ACB79D2946528A66D3204835B762', '<p>add,remove.get,size</p>', '0', 'FC1DC35DA4B54414A7E561293AEF4723', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2FB13C804433448EAB00F753E3D2214C', '<p>break只能跳出本次循环<br></p>', '0', '86F3841E6C6945C4B90EE3FD5BE6E2F9', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2FBD5D654D1848928BBF5C82CBEA175E', '<p>TreeSet如果传入Comparator,&nbsp;就优先按照Comparator</p>', '1', 'F900394C5F5A4F54939C0CBE54C29761', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2FBD98F5E2464851ACF97F05C77006C1', '<p>char,&nbsp;extends,&nbsp;float,&nbsp;double</p>', '0', 'F0369D708E5E4DA3A371B2C92AAFDADB', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2FDF658C4B7043B582788ACAA2F22F5D', '<p>int[] arr = new int[];<br></p>', '0', 'EC1D818F03CE4BA1B7BF389338A807A0', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('2FF38FDB1EBC4E45A6E579ACE1525524', '<p>toString()<br></p>', '0', '905526DA178944C08A4FD5638923A5E1', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3010F0D1D6B740F29739BB46DB91576E', '<p>属性既可以是基本数据类型，也可以是引用数据类型<br></p>', '1', 'F6B45AA6D1AD4A4A82C0DA620C638610', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('303F827109AD4CDB821BD3C680236612', '<p>&amp;逻辑与：有false则false<br></p>', '0', '7432E8CC7F344DED9CB52A709EAEE68C', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('305180023790492CB673A5584C2910C4', '<p>PrintStream fos = new PrintStream(\"copy.jpg\");<br></p>', '1', 'DED238E982B3409BA7E2767A01A90E29', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('305C78ECD85A42C89FD487D4292C9428', '<p>由于Vector是比较古老的类，所以它获取长度的方法是length()<br></p>', '0', '0AD033E697B148A4896ADE14CEAD8D3C', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('305E5F01F34C4C63AE2ECA0A7CB149A7', '<p>只能出现0或9<br></p>', '0', '7FDB670A43DE44DC903E2528F9E95D8E', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('30670632DD814BFBB67456DF448F174F', '<p>被final修饰<br></p>', '1', '18753E1650F441928BBA0651272ECBEA', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('306965AAA3F84A5798087D82167DBD71', '<p style=\"margin-left: 40px;\">int&nbsp;num=s1.compareTo(s2);</p><p style=\"margin-left: 40px;\">return&nbsp;num==0?1:num;</p>', '1', 'A7BD754E6F6A4E4EADAA39E35EABC17A', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3079D6527D0844058129F119BE74FAC4', '<p>增强for循环可以操作Collection集合<br></p>', '0', '48D417D143DA43BF8049449D7082C6FA', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('30865B88DBB84C0EA7481172C7D86B10', '<p>equals(Object obj)<br></p>', '0', '92E5166629224AB5A8A22B7DA6BD9021', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('309B141C34A64382AA8964175EA2EF12', '<p>Reader类<br></p>', '0', '89E2B9BACB054CAB8EF91B0D95A40520', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('30AA65896AE34D47A71A4D59513CC79C', '<p>适配器模式<br></p>', '0', 'E0A6C161809B45E4A1AE6465A1BE19F5', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('30CF59E856234B5598ABAB854D8E562E', '<p>不影响去重复功能的同时具有排序功能</p>', '0', '18956523012A47378205856CFB075AF9', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('30D0125E3F5742BCBECB72F542DDBE50', '<p>Student [sno=null,gender=男]<br></p>', '0', '71B1BD5CC78744DB82CE4AC38EF7D6AF', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('30D284EC98B14A34A8028B99030EB6D5', '<p>提高效率</p>', '0', '73047572C7644AEB8FC9503F8E65DCA9', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('30D4BA11FDDE4F159E5E5FA0702E4B0A', '<p>Scanner sc = new Scanner(System.in);<br></p>', '0', '093164F779F84F12A6592CD451E8CD72', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('30F28FD8302A4F01A8E8F49130AD0310', '<p>for(int x=1; x&lt;=10; x++) {<br>&nbsp; if(x%3==0) {<br>&nbsp; &nbsp; System.out.println(\"黑马程序员\");<br>&nbsp; &nbsp; break;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp; }<br>&nbsp; System.out.println(\"黑马程序员\");<br>}<br></p>', '0', 'EEFA517C04AE44C58F1FB91A177EB0BF', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3103492D24644D179DD0B449465DE3F6', '<p>将字符串转换成任意类型数据<br></p>', '0', '6AA2F10795F34A4BAA87AF5B5D33982A', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3103E57406E248799026C955E630ABE1', '<p>注释不会被编译到class字节码文件<br></p>', '0', 'E490CDF3A39043E690E3240AA06BAB4A', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3108B19D9A3048E885DA7C9849899679', '<p>Inner&nbsp;oi&nbsp;=&nbsp;new&nbsp;Inner();</p>', '0', '748BEB1A7CC144BA88388F9AE6534C6A', '2016-01-02 21:48:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('312F394A92044878A2A3E7512865BF78', '<p>我们可以使用Alt+Shift+N抽取一个方法中<br></p>', '1', '523FBB764ED8414C816C9C437824DFC3', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('31572FF7AFA842A79AA5868748C8D394', '<p>局部内部类访问局部变量，局部变量必须用final修饰</p>', '0', 'A01B816D6C0A473D8CD780F5518299F2', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3163EC168FAB419B965D9C52EA14BF14', '<p>基本类型，值能被改变<br></p>', '0', '68F041CDD39E4CA8B37588E30C716131', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3170C84FD3F64482BA7B628C212B45C9', '<p>getClass()返回值为Class,Class类是对Java中的类的共性进行描述<br></p>', '0', 'CCB84B105B274AF4ABBCA1FCD801D927', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3191AA5CD6764471BDED3775B7ECF5F3', '<p>以上都不对<br></p>', '0', '436F40CD84154E6CB2148FC15B8328F0', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('319E5574787E46F8912C4E112BE63AD4', '<p>renameTo<br></p>', '0', 'BF68B1AE0B614A3EB4549DE393EA849F', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('31ADB689678E4ACC9A3DFB9C13CB9232', '<p>先找子类本身，再找父类。<br></p>', '1', '239434072AC84FF89E0E2A017BD34DF6', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('31BA082EBA5F46D394286128267C31E0', '<p>Enter<br></p>', '0', '3E18BF9C7CF74C649891D16DEF8662EC', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('31C196A7AF0D46C79362F4C53DBAC078', '<p>可以使用FileReader类的available()方法的返回值作为数组的大小<br></p>', '1', 'E08F55F51B3148DCBB8DBC31CD0E2A9A', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('31CD153DE0094942B5806A91883C4D79', '<p>2</p>', '1', '47F83E0A130743B7A82307BFB89CDC48', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('31D4E23FEAA347CAA4A0E3E2632713B8', '<p>Arrays的asList方法，如果传入的是一个int类型的数组时，会把整个数组对象，当作返回值的一个元素</p>', '0', '43EA319D8CE04500B43BB2FBA8B36C0E', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('31EF39B37C964CAA8374D4F6A54D1312', '<p>输出结果 b &lt; c &nbsp;和 a &lt; c&nbsp;<br></p>', '0', '457E231D07BD4B05AD8087790868B821', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('31EFE276230841A8917249C24AA0CA00', '<p>0b10001001<br></p>', '0', '8E7722FDC1E1400588AAC2FFC69316B1', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('31EFFA8754404A62BB3FC63DE86D1350', '<p>.class</p>\r\n', '1', '5C193B5B31B3474C9B3DF2399A0DC00C', '2016-01-05 10:51:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('31F73BECA29F47AA8214D7388C4B0ED0', '<p>得到的结果是70<br></p>', '1', '12FBDA3104CB47028FD6489140714F01', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3201D40F80534EDE80BF8850D12478D3', '<p>java.util.Map<br></p>', '1', 'B83657E346174DF9A72D84B69D89E74C', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3204EEE5D7F14449A15C25D289A3CA6C', '<p>true &nbsp;true<br></p>', '1', '0410F6FBDC46487E961BF860ECEF3FAD', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('32077A6DE0BC48E88C8FE3E30CFA92F8', '<p>定义一个方法之前要明确该方法需要的参数和返回值类型</p>\r\n', '0', '2BEB9B564FB94C61B355D7438B21AEAA', '2016-01-05 00:01:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3208050C62064C6B865B312164AFC3A1', '<p>海贼王/路飞大战白骨精.avi<br></p>', '0', 'B4445D2E69B04FD59F65D3D5BBD5D50E', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('323B4939E28549EF95DB6582A993AA48', '<p>派生类<br></p>', '1', '58F85976654D4BBA9A70FD3B3AB6F5B7', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('32461FF62ED2426CB72E66E65DEE8720', '<p>\\r<br></p>', '0', '8C96C499F57C46CCBF96C27956FAFD7A', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('324B42C28727478D9F1C1C58517459D3', '<p>返回0或是1<br></p>', '0', '581EF8E195424FE98A00D3F5CA044413', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('324FE5D3C3B74CDD9527991EDA46C2AE', '<p>/.<br></p>', '0', 'C830253B6B7848AC9B8F0FDA92C4A022', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('325BAAA4691B4D778D6F46559E785762', '<p>2Ab<br></p>', '1', '8F5830CF5FD9464E8FF252F79D1A320C', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('329B61979C47479B965721D30C1B5FAF', '<p>AutoCloseable<br></p>', '1', '4B4C72449AEA4C26B147B90D9D21F282', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('32E45B76EA094AF08F34DD85A4E22485', '<p>键盘录入数据只能值int类型<br></p>', '1', '336BDAE1204B458EB770E6667344FC24', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('32F0AA534520403DA01B7A3A81EA7D70', '<p>Integer范围内的数据进行运算<br></p>', '0', '91E0524D0BCF45A0BE1B8C8D312DECD3', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('33039674310749AC9AA5153D5AD21B1F', '<p>Java 语言具有可移植性，是与平台无关的编程语言</p>\r\n', '1', '8CC03243EAD84A56826C7EFF09FC7A5D', '2016-01-05 00:12:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('332261747E7948419A8637D27A22D37B', '<p>运行报错，因为list里面只能存放Object，不能存放Person对象</p>', '0', '2FF773FFEE944FC292F92C6B09F338E3', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3327F9543DDB4B9EAA3DEE7566A06F43', '<p>可以对元素进行排序</p>', '1', '79EFB9A028004FD78E0172C1D10E333A', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('332922FBBC484F9198A5425A41D60E2F', '<p>return&nbsp;num&nbsp;==&nbsp;1&nbsp;?&nbsp;0&nbsp;:&nbsp;num;</p>', '0', 'A503A9B328C4481AA283AD65EA13BB20', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('334A85D6C213468990285D6A1BE5C3D2', '<p>DatagramSocket<br></p>', '0', '8AE3D46240074A02B35AD25E2286C158', '2016-01-02 21:47:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('334D94E90DFD4638A8F0FADF61116285', '<p>size()<br></p>', '0', '2070C53ECECD4956AD117A097BCFC1EB', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('335E803DB4FF4748B2D2433362A200FA', '<p>2<br></p>', '0', '45C35EF208D84B21A0898129B87180A7', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('33697A4BC8CF48A68799C042CD37E4E0', '<p>Object<br></p>', '0', 'AD289B8E864743678E2885D95CCC40E1', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('336DDD7B135C425182A724E2B88A1F74', '<p>-256至255</p>\r\n', '0', 'A73EB37FB22B47C797DCDB85C32201F5', '2016-01-05 00:03:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3381A6838BCC4932A0437809D33C5B27', '<p>SocketServer<br></p>', '0', '85489CF01E1344DF87DC15CA75ECAF89', '2016-01-02 21:47:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('338CC8FC7970433098C65D40D9A3115E', '<p>new Demo(),会在栈中开辟空间<br></p>', '0', 'A324A02D815146AA85681768D985ED0D', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('33B2F8C323E04FD799F4EABBEDCD42AF', '<p>length()<br></p>', '0', '8DF1BB6A6A7C4B32800826424E607400', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('33BE5FB3328E47BAA288F9885D677746', '<p>以上都不正确</p>', '0', 'E3A82A2134784974A7055D3F90358409', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('33CD929D0B8344219B27E31749F0A243', '<p>该方法只能获取私有属性<br></p>', '0', '8020AD29906C45B9AF3DAB7E5994FD35', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('34002CCF7EA6472CA3D1E78F5B6498E3', '<p>abstract可修饰类、方法</p>', '1', '267C44DEC8724C72BB1700B9C3B8FE2A', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3407D3DD6E074BBAB4DEB7C4983191E6', '<p>getAbsolutePath()<br></p>', '1', '975BC6CDDFB642DD8B27E54342961BB8', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('34289455D87C42E2B9EDD9E4F4A68A17', '<p>&nbsp;new&nbsp;Thread(new&nbsp;MyRunnable()).run();</p>', '0', 'F9340C57509444A9AE46E15B4EEAD30F', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('345D9032E34C4212B06CE43FC1EEAFFC', '<p>C类</p>', '1', 'C4866D79B1204FC6936BECD569B51A03', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3476FB69D6A54B0B938ED55094A6C1B1', '<p>子类重写父类方法时，子类的方法只能抛出与父类相同的异常或父类异常的子类<br></p>', '0', '8E2BEB381D974F468C78B55204EE35C6', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('347823CB98F244D28A9C687B5F0A3C9F', '<p>原生常量<br></p>', '1', 'E9E403D75C4741D1AA48CBBA3ED841EA', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('34939C6364C74F1E830FEFA141246A39', '<p>switch语句选择的类型只有四种：byte , short , int ,char<br></p>', '0', 'FC8DEDFB10BE4BDF96606C3AE28D3980', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('34AD28F1F5224076ABE868E16E9AEAD6', '<p>定义抽象类时，应该考虑的是这个类有哪些共性的属性和行为</p>', '1', 'A7836608D1E64786A4D85234C5295403', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('34B24A4409FB46EB9A4DF8643E2260B2', '<p>FileInputStream<br></p>', '0', '1F61674539B34419942625A04F4AD41E', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('34B62A0625AF489AACCB17BF4A47F56F', '<p>我们也可以自己写帮助文档<br></p>', '1', '5C15B35EA1F44D5582CCD8EF298A7799', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('34B9D51EC3A848E9BF96A0E4A5940A1C', '<p>自定义的数组越大越好<br></p>', '1', 'E08F55F51B3148DCBB8DBC31CD0E2A9A', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('34D207072C5E4E83B3B624C28239C673', '<p>如果这个方法的返回值是true，就说明集合中含有obj这个元素</p>', '0', '1E99BC1C9AD140F1AEF70A9684E9288E', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('34D7BC271725433CACFD06DCF5FC9126', '<p>20 \\n<br></p>', '0', 'EF6415F2F8854DC4973ECADB5D14546B', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('34E09AB6C6CB47B98C3B82099110D36D', '<p>new Object().getClass()与new Object().getClass()将返回不同的字节码对象<br></p>', '1', 'CCB84B105B274AF4ABBCA1FCD801D927', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('34E286D4204B4F2690A6B1ED894FBD62', '<p>通过put()方法<br></p>', '0', 'DD60C385B16445F1931B6C34F5E3A771', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3507846B8B6A4FABB0ACA83B12A1B1D0', '<p>float占两个8个字节<br></p>', '1', '723775BD54D8497D88F659B14BBB32F3', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('35114F5F39534A2BBBCFAB490E930546', '<p>char类型占2个字节<br></p>', '0', '723775BD54D8497D88F659B14BBB32F3', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('35120708F3364E82899E8C475F81F375', '<p>Inner&nbsp;oi&nbsp;=&nbsp;Outer.new&nbsp;Inner();</p>', '0', '792F6FADFBA249779275F57A33C37FAB', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('356879D99A834D008D3D37CCA26B27E8', '<p>list集合里面含有6个元素对象</p>', '1', 'A5241E29E79E4CB6A49941DDF1EA1E68', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3580E028DFDE4D3AA4FED35D2CD8EEAC', '<p>byte 所占1个字节，取值范围为-128 ~127<br></p>', '0', '723775BD54D8497D88F659B14BBB32F3', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('358FEBD4EB2848E0A22CC3FB93EB7B9C', '<p>数组的最大索引就是数组的长度<br></p>', '0', '37890E00DE1B4C458A90287102070D7F', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('35937E919D5B4410A33429D95A781312', '<p>hashCode方法是一个本地方法<br></p>', '0', 'AB80429ED70C4A45916CE9932CAC8E30', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('35945842962D400399E0452AE1F3ADD0', '<p>Socket<br></p>', '0', '954F6308912B4238ADD722EC4CE2E16B', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3595454593034E6FBB833F6D23E3C28E', '<p>利用系统工具和英文制作软件<br></p>', '0', '60AC22B4D0DA47718930B4F98369C472', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('35A66A69E4F74C88BA08D6496746FA44', '<p>重载返回数据类型必须相同<br></p>', '1', 'B4E652C0E40E4D1EB38360856ADFFC21', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('35AC9C1845914BCBA5831117BDC23E72', '<p>isFile()<br></p>', '1', '830CBF1972EB42AC80B957B23A06296B', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('35DD8C2EBA7E4E5BA16879174B0599E0', '<p>正常运行，输出flag=</p>\r\n', '0', '853F4AB89C774AB6917F098E243F5515', '2016-01-05 00:21:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('35E30396628B490A901473AF143913F0', '<p>L=f+L;</p>\r\n', '0', 'C19074D6CED04C0AB53E2F0A40BC4F3B', '2016-01-05 11:18:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3602164925FD4BCE9E56406692155B2D', '<p>this.成员变量可以这样进行调用<br></p>', '0', '7AEE9BAED57949AE9023535451C9CD2A', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3614C03795BC46AEA5A828B7852EB216', '<p>语音识别<br></p>', '0', 'C9B9CE0BCC134C44A9DFA1BFB5E2F74C', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('36215878F0FB4389B3F982C2ADD7B28D', '<p>Eclipse是绿色免安装的<br></p>', '0', 'D41C9426C4BF4B33BE35AD5885478B07', '2016-01-02 21:47:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3626430042014303AB0F8FFA7EF82F1F', '<p>以上都不对<br></p>', '0', 'E3074074B0594D58B0877A11149B5156', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3626E8E713C14A778D44BC684D1CE32C', '<p>Collection</p><p><br></p>', '0', '1BE12F8B802B4621BF60F5D3D05F0D73', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('364F84084B1347A687931C4CE5B5E14C', '<p>接口的子类(实现类)必须重写接口中所有的抽象方法</p>', '1', 'FA15B559892248939704CFF2784239AE', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('366774448F92494B8FE80BE4D3A4E367', '<p>0;<br></p>', '0', 'D072049C8C034D4491432EA58735B4C3', '2016-01-02 21:47:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3667B075BDEA4B8398720DB4BA99F23D', '<p>java.util.HashMap<br></p>', '0', '9D751D5474794F8098DAF547D4EE5675', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('367483E39FE34D5EB83EDE1560EB735D', '<p>arr和arr1指向的是不同的数组地址<br></p>', '0', '40D8ABB364214CD59F300501FAE4FDBD', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('36A759B3DEB543CCA2F20DD024006C38', '<p>在堆内存中开辟了1块空间<br></p>', '0', '3B4943BA3A69445F9E93E7D526925372', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('36AD9BF6D0134235B53CDDE9978B5D4D', '<p>将字符串转换成整数<br></p>', '0', '6AA2F10795F34A4BAA87AF5B5D33982A', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('36AF8CDEC69D4D75B2B619DAD75E71EE', '<p>new Object().getClass().getName()<br></p>', '1', '82F3B36967DC4361BA036A1EB7EAAFFA', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('36B748DFEADA4562BF46FDDEA71B468F', '<p>+=<br></p>', '0', 'A1A018F0E1ED4528883587F6C4356DF7', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('36B9B3CDBB094057A703D489D7E413CD', '<p>面向连接<br></p>', '0', 'F1AFAEA79CC340B2B2BCC378C0F81379', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('36DCAC26EA7742CEB48639FEADFF0BF3', '<p>以上答案都不对<br></p>', '0', 'E572A6C1E75146FE892D1951AC55C5ED', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('36E4FB4BBC9E4C7482D87835CEDE9543', '<p>binarySearch()方法只能操作Map集合<br></p>', '0', '2CBA15AF85F1403A895C4FE0F565A4CF', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('36FC74EF8EED46F1BD634AE9C833CC4F', '<p>接口不能实例化</p>', '1', '8C033FDAFFF64DC4991E80BF1DD2E9ED', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('36FDB1A58DA94EFD9DBC60E284622804', '<p>ClassCastException</p>', '0', '8C5CAC4A30FF45C4AFE115782F8C0145', '2016-01-02 21:48:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('370CF9450D1E4EA6B77A9100C6E99A1B', '<p>要存储的类实现Comparotor</p>', '0', '77EA5743DA954BF8A0F5901E7AE17F65', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('37195B91822B4DACAC97AC4264EF49FC', '<p>局部代码块随着对象的创建而执行<br></p>', '1', '39CAE2CBBD9F4A20984DC823D3B6A0B9', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3720C90BAD4945E199B9205AEA1E2C89', '<p>2</p>\r\n', '0', 'BA5E186DDF7E4012B542FECEA619047C', '2016-01-05 10:52:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('372726565FD54EEE91D695026A29AAB0', '<p>成员变量可以定义在方法中<br></p>', '1', 'E3BD11B650F54823B2C4587D1C7AC065', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('376E19D548DC4E7F8EE588F7C53C2EAB', '<p>Zi.print();</p>', '0', '983E3C9038BC4A1D8A531525230D09CA', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3795CC06F603467A92A56F791528A420', '<p>c</p>\r\n', '1', '815707A427DB4395910AA176F36D07B3', '2016-01-05 11:00:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('37AE736820994C5F844B0194EF7F7A90', '<p>静态代码块随着类的加载而执行<br></p>', '0', '39CAE2CBBD9F4A20984DC823D3B6A0B9', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('37BB202081A34F0289913438F2D53062', '<p>if语句后的表达式有且只有一个<br></p>', '1', '1BECAC261E36474791552E2DAA633661', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('37BDED03B05D4D5A9EDB514BC1B9AF50', '<p>size()<br></p>', '0', '6D28595A62734E56AC3C6B291A789DD0', '2016-01-02 21:47:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('37C61702D68845C7AA0DF42E4C93B4AE', '<p>代理模式就是让别人帮我们做事情，别人就是代理<br></p>', '1', 'C0929634BB674A9E9A47634EAABA044F', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('37EF464D75ED4A8CA0BABCBAFDAACDE9', '<p>readLine()<br></p>', '0', '8D239F6A1D3F400EB9B0C583E9582508', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('380B650E6387497A9388C48A32EE750B', '<p>编译带包的类，需要在javac后面加上&nbsp;-d&nbsp;和目录</p>', '0', '547D0BCFEA684F93847AD81A8F6FA523', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('382F83817DB742E8B4FC9D931B0B391E', '<p>以上都对<br></p>', '0', '6DA75C307E244075B477E5FECB9D4952', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('38327845A1CD4B9B9512A1DD3F67F1A7', '<p>for(int x=1; x&lt;=10; x++) {<br>&nbsp; if(x%2==0) {<br>&nbsp; &nbsp; break;&nbsp;&nbsp; &nbsp;<br>&nbsp; &nbsp; System.out.println(\"黑马程序员\");<br>&nbsp; }<br>&nbsp; System.out.println(\"黑马程序员\");<br>}<br></p>', '0', 'EEFA517C04AE44C58F1FB91A177EB0BF', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3837F3C75CBF4E7DA441DD7BFA5B4498', '<p>泛型出现之前，早期使用Object来替代</p>', '0', '717ED7B09938469192862B04A021AD62', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('383DFAF265B84A6799B09EEDF7650ADE', '<p>&nbsp;new SequenceInputStream（in1,in2,in3），in1,in2和in3为已经创建好的FileInputStream对象</p>', '0', '9AC1FEAD999E41B7AA8BAFCE586A954D', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3846C1679EC2426383E5DF2FD643CF59', '<p>arr.size;<br></p>', '0', 'D0CEBD11343C4570937E04BC5926DC7E', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('384B33CCE0834A1889C10CFD4349353C', '<p>通过add()方法<br></p>', '0', 'DD60C385B16445F1931B6C34F5E3A771', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3858D543DBD54E66A6B38A77EED082F7', '<p>throws用在方法声明后</p>', '0', '423F61937F2A4392B4BBAF948573B129', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('386CDCC83DEA4A9B9899DB74CEA9F87F', '<p>②④①③<br></p>', '1', 'F703041585B24DD19CA1C1AFD7B5CDEB', '2016-01-02 21:48:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3890F3FC4E544C2F8AD37438AE2BE39B', '<p>二进制<br></p>', '1', '33F17F63850A47328FE0DA143089B374', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('38B53C4DAF914B8DBB06A403D57BACB2', '<p>int c = (a &gt;&nbsp;b) ? b : a;<br></p>', '0', '59247DE99BC4484284F0FE64E35FE98A', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('38B83B71BB314A4C862DDFF136812D42', '<p>Properties</p>', '1', '5B39CC05EBBE4AEFA53F69D79AC31BA8', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('38C013D19439452998DE7351E567EEA6', '<p>保证在某时刻只有一个线程可访问方法或对象</p>', '1', '60E4ECA445284A43B1F902BE17E8DF56', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('38D11303C06E4DD79B6591888EBC4D4F', '<p>这个方法传递的参数必须是E类型的子类对象</p>', '0', '0843AAEE48DF422098782A2E877A1D87', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('38F7FAE0F4834377A776C27280C67736', '<p>FileWriter只采用GBK码表写入文件<br></p>', '0', '5C991C62665541F3B187E735E201A4EF', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('39020E6B03A44CEFAEA551CD395B8CFE', '<p>list集合里面能存放Person的子类对象</p>', '1', 'BF47B511F1FA4ABDACFE11DAD30C385A', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('390B3CAC00B441129A8AAF6193019CC6', '<p>增强for循环内部用的都是迭代器</p>', '0', '33DB913298C2472387874A34A2896192', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('391711C818F645DC9C4B9A920F5D2402', '<p>55</p>\r\n', '0', 'B66CC6E588694071A282A230E094864E', '2016-01-05 11:12:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3930C12C657F472EBC72B9C4C942A44E', '<p>返回一个不确定的整数<br></p>', '0', '581EF8E195424FE98A00D3F5CA044413', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('39335E2C473342A192C134F979FF460B', '<p>该程序只有输入的是一个真实存在的文件路径的时候才能返回一个File对象<br></p>', '1', 'DDC888002C8D4CB7AF2E2977365CD216', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('394ADCE0B37D4DB1A8DCC756C38EA8B0', '<p>学生类<br></p>', '1', '58F85976654D4BBA9A70FD3B3AB6F5B7', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('394E2ECE391D4F51B3AFF05DC35BA94F', '<p>package语句必须是程序的第一条可执行代码</p>', '0', 'E370201C092845348D435F665804D228', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('395BF29119B942D4AE3FE3EA74AF3193', '<p>通过toString()方法<br></p>', '0', '22093AD408C949E7B74D50FDDF7D79A8', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('39679BEFCE2D4D2B8F30D3E00EAAEBD4', '<p>&nbsp;Properties 类表示了一个持久的属性集<br></p>', '0', '8C9AF3AA92FA441B99CD1B37B2A1F7DC', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('397C582BF0C34FB393674803471169E9', '<p>HashMap</p>', '0', 'D61EA19FB199424B9CCDD97BD2CACAC2', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('399696CAA8A4476DBA47D2B3C0CA049C', '<p>编译运行都无错误，产生3&nbsp;个线程</p>', '0', '08D1459AD44445B0809072D37704C374', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('39D025624FF64488A5578FF3DCA010CA', '<p>public Student(){…}<br></p>', '1', '7BA35BA1153E474BABD07743349B7666', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('39DA92AADFC940B288749D9C66945AA1', '<p>del<br></p>', '1', 'C9C731E277614F7587CA1496206D3471', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('39E61577288F4E5BB9FC0A0098552BE3', '<p>c<br></p>', '0', '129512937C50417BBDD4EC4B2FC54C3B', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3A01AAC681334A8D965340C22505CC2D', '<p>Alt+上箭头可以向上复制一行代码<br></p>', '0', '5C059B1C4AC14AFBB2362D864314C2E6', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3A1F67A44D91417DBD14288A6541E3D4', '<p>Java 语言可对内存垃圾自动收集</p>\r\n', '1', '8CC03243EAD84A56826C7EFF09FC7A5D', '2016-01-05 00:12:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3A24BD8098814ECA93AAC636789E690C', '<p>声明实现&nbsp;Runnable&nbsp;接口的类，该类应实现&nbsp;run&nbsp;方法。分配该类的实例，并使用该类的实例调用start方法启动。</p>', '0', 'A1FFEB9AF0A84C43BB462A7D2A588928', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3A465C0E6EFF42629C1CDAA34F0B7B72', '<p>只对TreeSet有用，专一</p>', '0', '9BE0823A56E946E595E5B53ADE7C6B84', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3A4F51F015B34FB1AB2D491C0DE327BD', '<p>Vector是JDK1.0开始出现的<br></p>', '1', '9BA87153A4504A72AA7F8F8AE1E0CD1D', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3A77A31362284BDCBFE84C02DD6C94F7', '<p>获取数组长度的方法是length()<br></p>', '0', '37890E00DE1B4C458A90287102070D7F', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3A8E85A2B89944ED9BA8B40FABE18C87', '<p>可以找到任意盘符下的.exe文件<br></p>', '0', '631BE813DDEC40E6899D2779FA29F2C6', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3A95D01D242D44998B334AA4DE5C172F', '<p>al可以存放Person对象</p>', '0', '685DFB0453F440FEBE66AC2422839BE6', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3A9E8D518C114CB3ADF16A8C7260119F', '<p>&nbsp;new&nbsp;B().test();</p>', '1', '66128BDD3DE34807B8C62BBD2DFF0850', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3AD6425E19AD464398303FA44600D89E', '<p>死锁不会影响程序的执行，还可以完成执行任务。</p>', '1', 'EF20A1F2C88947A09F8FAEE12B66E8EA', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3AD981AC71774E23807C00D0D1AFE2DC', '<p>package语句在一个java文件中只能有一个</p>', '0', '6E9B219ABDCB45929B5B2DA56C3B6359', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3AFBC030A48643079E230B3F3FA335D8', '<p>变量只能存放 int 类型的数据<br></p>', '0', '9ACB62DB28C64D218434CA9D817DF19D', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3B122AAD8C354CF1A31536FB7E49EF4E', '<p>编译报错<br></p>', '1', '1F8CA06547AD4987A56B66259C741711', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3B17C52BEB8443699618713BBB782329', '<p>②①③④<br></p>', '0', 'F703041585B24DD19CA1C1AFD7B5CDEB', '2016-01-02 21:48:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3B1E7DFDDC6B4E9A96EB7FEC963D7D3C', '<p>lastTime()<br></p>', '0', 'A986BE7D029D4E8A857D392292B94CE3', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3B55D7DE2DEF4ABF8154CA6337C3FEA5', '<p>2&lt;&lt;2<br></p>', '1', '30751AC1CA3B4F27B32085193F56732D', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3B74164DD70D4ED19DB89964B486EC1E', '<p>将整数变成字符串<br></p>', '0', '6AA2F10795F34A4BAA87AF5B5D33982A', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3BB54CDC777A4251B352B9D589B3205B', '<p style=\"margin-left: 40px;\">for(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;list.size();&nbsp;i++)&nbsp;{</p><p style=\"margin-left: 40px;\">if(\"b\".equals(list.get(i)))&nbsp;{</p><p style=\"margin-left: 40px;\">list.remove(i);</p><p style=\"margin-left: 40px;\">}</p><p style=\"margin-left: 40px;\">}</p>', '0', 'B35F6BDEC67B4E10B5A979992B175D11', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3BD7863E7E3548229697D2D0233D46F6', '<p style=\"margin-left: 40px;\">Student[] students = new Student[]<br></p>', '0', '2C5BF2B0184A40FEA0C066A9058E6F28', '2016-01-02 21:47:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3BE6833BBD4742B18A6D218E3D9B07AB', '<p>在dos窗口配置<br></p>', '0', '63CD6355C720440587CD2CD2A10C85C4', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3BFA10EE2B48487D9D3B4AE2C8C5EC23', '<p>Demo d = new Demo(); d.method(d);<br></p>', '1', '5804B07031A8461DA0E59F3CB518D8D5', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3BFFB9AAAB63423AB83D03691F802205', '<p>实现一个泛型接口时，必须明确传递一个类型</p>', '0', 'CDF0A91CB25D402087422CB8EF9B441B', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3C0D6CB5EA07432480C839B7517AC43B', '<p>重载方法的参数列表和返回值类型必须都不同</p>\r\n', '0', '40BC6D3CB9894074B3229744A9B46128', '2016-01-05 10:58:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3C24E987D08B45639CF510D2A27C85A0', '<p>字节流拷贝文件时一次读取两个字节<br></p>', '1', '48A3DBAA47A245569C1A9B7B0DCDBE2A', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3C354F64F7D74F07B747122597259044', '<p>Serializable</p>', '0', '27EB767D8B51453CB21E8C05B813330F', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3C6ADC07AFCA4B22BCFA0AE0D2EB570A', '<p>以上都不对<br></p>', '1', 'D7983AD07843499CA3148A18146E6198', '2016-01-02 21:48:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3C766474BCC7437B8149B01703C9BDDF', '<p>单例也叫单实例，就是说每一个对象都是唯一的，所以叫单例<br></p>', '0', '65A071C9BBFD4961A61AEE7FFBDA7E6F', '2016-01-02 21:47:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3C8FFA9CFA184507B98219AE673BF0A1', '<p>binarySearch()方法可以操作所有的集合<br></p>', '0', '2CBA15AF85F1403A895C4FE0F565A4CF', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3C9D1CE6665B4EB1ADA73B10685E61B3', '<p>数组的初始化就是为数组开辟连续的内存空间，但不会对每个数组元素赋予值<br></p>', '0', '3D1A1274B7544CC9B107AD516C9EFAEE', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3CA86A722DC24816AD4DD5C9E005DDFF', '<p>二维数组b的第一元素有3个子元素</p>\r\n', '1', 'B365A04AA4394FDD862A972F98CD81BD', '2016-01-05 10:50:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3CDA2EBE9F1A4287AB78B85AE053ED33', '<p>Eclipse的编译和运行的版本必须一致<br></p>', '1', '463A6CDC865A4AFC8944ADE30CC4B04A', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3CECB5B0B5504E9BA464AC5EE4988FDC', '<p>LinkedHashSet仍然可保证元素唯一</p>', '0', '03E23694E6F548AB8D0BCBD21E69CAAC', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3CFE82B31F224D41ACF1CE63A330B9AC', '<p>readLine方法是Reader中定义的特有方法，一次可以读取一行<br></p>', '0', 'EAFC0E3832DA40F7A57A9116F4F520F1', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3D313289B5744D25A591D7938BB19703', '<p>使用Object类表示参数时，可能会发送类型转换异常</p>', '0', '717ED7B09938469192862B04A021AD62', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3D3467E0A44B405BA866A257101B7E76', '<p>for 循环<br></p>', '0', '7C22E6E486064C6481EAC9B3D303C0B5', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3D575797A4754A43B2035547AD4B0682', '<p>java.util包<br></p>', '0', '52CCF2D7B39D49A4B3DE9F4BC984AD46', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3D629AD0EE304B7F884DA9AA964386B0', '<p>ABCE<br></p>', '1', 'C7B29698CF024DB19EFC09C7E2BBA8C8', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3D6661F53D424E5880B253DC3B78E65F', '<p>isHidden()<br></p>', '0', '830CBF1972EB42AC80B957B23A06296B', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3D8352C23C6C4A3EA6563167CB084657', '<p>BufferedReader<br></p>', '0', 'D5EA2CEE869A44D39A87EB4A3A49838F', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3D83817422324859938DBD8446B43070', '<p>getInetAddress()<br></p>', '0', 'DE9B7F867EE2467AAB50F96A440F3D06', '2016-01-02 21:47:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3D90B2892C2F44B7A05086CDD753BB5F', '<p>以上说法都不对<br></p>', '0', '7CECADC2807A4A9393C1F4BA2D5D4C1C', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3DAF613451A1432E809075391E4149C7', '<p>初始化一个类的子类时加载一个类<br></p>', '0', '7B7F65CA929448A689C6B5D5CD4FFDF0', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3DC244DDA1874E57823F5D8AACB24735', '<p>import&nbsp;static&nbsp;java.util.Arrays.*;</p>', '0', '3A5A4A1B904E468D9C12FC86476F3A06', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3DCC9DA7ED104A5E82D592903C5CE6E7', '<p>用ByteArrayOutputStream和ByteArrayInputStream实现文件的复制，不会出现乱码</p>', '0', 'B8E832318E7E45858627E4128B6C682D', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3DD56CAFA57C452DB5BF3A4ACFBC977E', '<p>通过DOS命令切换到jdk的安装目录下,分别输入java 和javac,如果正常显示一些内容就说明安装成功<br></p>', '1', 'A641933B25CF464988436B71CCC23832', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3DDBCD7466924F4DAD8CE49DBACFBD91', '<p>x=2&nbsp; y=2</p>\r\n', '1', '3F897C38AC0B401AB845A5D6A07D6DA2', '2016-01-05 10:56:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3DE30D6C73144882931B3C26B6199023', '<p>createNewFile<br></p>', '0', '5EE5CE663C5D4F4B97ADE513BE3D01E6', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3DE7A47E06B84FABB0443A41A627EB45', '<p>try(<br></p><p style=\"margin-left: 40px;\">FileInputStream fis = new FileInputStream(\"xxx.txt\");</p><p>){</p><p>}</p>', '0', '7D00EB30F0F64ACEB70B04B9065DFA90', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3DF2CA07701345448D93036B905FD57D', '<p>Test p = new Test();<br></p>', '1', 'EB81C87C0CF44DD8B69DB89B7956E0F2', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3E00744E87E646D78B0A364C88B86A86', '<p>以上答案都不对</p>\r\n', '0', '6CBE3C70D0DA482CBE77BB3375CDBEDA', '2016-01-05 10:31:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3E02214629054224BB1929BE26ABFD1D', '<p>当较小类型的数据和较大类型的相运算时，要想结果为较小的类型就必须通过强制类型转换<br></p>', '1', '016E0619AC654B509E9F2741BD693EEE', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3E0E0C2B55F14B07B9498C35A38F8796', '<p>d和d1指向的是同一块内存地址<br></p>', '1', 'DD3CB7FE0943492EBD0EC6B87478A802', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3E474AD40D404D5FBBC26C76551EAD0F', '<p>255</p>', '0', 'DAA71957B76C40E5BC543E3FE8E9A8D3', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3E4A73C2315A4DA3937E1C07C518D7A8', '<p>cd..<br></p>', '0', 'EC033C2AC55D4A8C8D14153C9FA79CCF', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3E63BEFF46D9408CB6372207C92B4459', '<p>OutputStreamWriter osw = new OutputStreamWriter(new InputStream(\"a.txt\",true),\"gbk\");<br></p>', '0', 'BE14C78DB74B45B98795860138E63D83', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3E880F326A0D4B0DAFA5CEB5DE25A180', '<p>当较小的数据类型和较大的数据类型进行运算时，就会把较大的转成较小的数据类型<br></p>', '0', '31EDA5FF01BF4F90912E7E69883F341B', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3E96E908088442BF9F74C3A5F01432B6', '<p>父类中针对成员变量提供的get\\set方法<br></p>', '1', '436F40CD84154E6CB2148FC15B8328F0', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3EA6C1C29D034CA5BF0274EA805BDB9D', '<p>false false<br></p>', '0', '8A1BDB49311241FD8A63F194BC433D3F', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3EB202EF2B0C4CF08CE81B6918EAFC1A', '<p>void</p>', '0', '45240CAAA08A471F984E11DF7D191CB8', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3ECDD9DAB35D4578812B4FAAC6083F6E', '<p>0</p>', '0', 'DAA71957B76C40E5BC543E3FE8E9A8D3', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3F0723F6DB744B7E9C5D293141A65640', '<p>返回一个新的字符串<br></p>', '0', '12E6DB0B3B644FDC950D4CCEA0CA93CD', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3F10265578514AFC8B7AC03D0DDA10D4', '<p>&amp;&amp;<br></p>', '1', '15C8FCFE254D4AB2A7BE7F67D2129B3C', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3F32A89A91CF487983A71A33EF97FB3B', '<p>||<br></p>', '0', '42F361196B7E460BA3B528C18EF58B75', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3F36BD6EA0FC4CD7B6240BDE20488E4A', '<p>有main方法<br></p>', '0', '6BF856C9C89F45229B4F4F1EAC4B4FEA', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3F3ED7F203704D1CBFB5742B9E7D6CEC', '<p>wait</p>', '0', 'A3A2AA41A95148C395A4B962D4D909E8', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3F4D73D754324AB9AF3615C3CFB43222', '<p>7 | 2的结果是 7<br></p>', '0', 'B347EE4CED4C4BB190D2329FF3633F55', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3F57EC2AC730458A853ED70689A9330E', '<p>静态变量属于对象，当创建对象的时候进入到堆中<br></p>', '1', 'A1F97FE0127F45279961F704D6E70431', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3F6425DA9CAF43B3A0B4EEE174A8426F', '<p>你<br></p>', '1', '960474F91B394706A50D8267912DA514', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3F6FC4330C2540AA8E83C6C5534E0ED8', '<p>多态中一定会有向下转型<br></p>', '0', 'AAF09BCDE78740E69A4B4228C3CD9C15', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3FA1818F66D04AB2954E282471D3EC24', '<p>Outer.Inner&nbsp;oi&nbsp;=&nbsp;new&nbsp;Outer().new&nbsp;Inner();</p>', '1', '748BEB1A7CC144BA88388F9AE6534C6A', '2016-01-02 21:48:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3FB06ACE6DC34FBC9CF19B1B3F07E630', '<p>输出0<br></p>', '0', '1D1391BF3D57479DA6CD4B43F93D454E', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3FB0C7978CFF44E493E8E42EFB1CB262', '<p>Eclipse 卸载只需要删除eclipse所在目录即可<br></p>', '0', 'D41C9426C4BF4B33BE35AD5885478B07', '2016-01-02 21:47:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3FB4E1844FB0491E89EB06AB871576DB', '<p>调用方法需要知道方法名<br></p>', '0', 'A06316D8090B4479B8E165E59459F067', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3FC9143638634EB2BAD7136DC9B819B8', '<p>控制台第一行肯定是 a<br></p>', '0', '26E774C543914673B7AB71AB09B53885', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3FCB4B64C36545DE9EF03DF0A3C9E9E6', '<p>FileReader<br></p>', '0', 'D5EA2CEE869A44D39A87EB4A3A49838F', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3FDAFE0D4DF344189D4336D045295EA0', '<p>运行带包的字节码文件时，需要加上类的包名</p>', '0', '55B079B9F7D04073886498471192E889', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('3FEEA3674B8D4A529F21636E32788C77', '<p>封装将变化隔离<br></p>', '0', '20175B40D4B14A0DA895C28F3AA1923A', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4022F61A8CA340158AC24C114F03CC61', '<p>定义一个类，实现与被包装类相同的接口或者继承相同的类<br></p>', '0', '4FCCEBA8910343FE9C3EB81A472B76C3', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4033F877760447A7A15D7B07336E9F4D', '<p>接口名必须是合法的标识符</p>', '0', 'FE9CC184031F458CABB4A3434A9C2438', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('403F6EA2E63049B8B9751D58509D6B2D', '<p>protected的权限小于默认修饰符</p>', '1', 'A9C38ABF8F2E4D5E9D90E4D96BB2E652', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('405CCA617B4345F7887CD9517937AE9A', '<p>实现Comparable进行排序属于事物本身的排序规则</p>', '1', '6BA9A5DC09074B8088BC24921E038050', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('405DE3FD3AC34E56926ED126E2B8BD2E', '<p>WoaiHeimaniaima<br></p>', '0', '2F45BEB283FF421A8200E2AC491514FD', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('406137DF2AB6448C90F51C38C7F15263', '<p>kb</p>', '0', '731403B23CAD463E91A5FB776C1FAB55', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4092010FE15A4F91ADCA8B1C67D53B0E', '<p>程序正常启动执行</p>', '1', '88941271C47C4408B48FA4E74607536A', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4097E5EE14F744BEBF8D898033EAB725', '<p>null是常量<br></p>', '0', '469DBB56229349EBA5B35B7263B87B81', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('409830B015234D9088ED57D51525B987', '<p>基数★系数的权次幂<br></p>', '0', '7C1CDDC0805F406D981C6B36FBF433D4', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4098B18DC3904051B022FEB04DCC925D', '<p>new SequenceInputStream（en），en为Enumeration类型的对象，里面存放了多个FileInputStream对象</p>', '1', '9AC1FEAD999E41B7AA8BAFCE586A954D', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('409DB5ACABA74AB8AC77C9C3821E4F44', '<p>&nbsp;new&nbsp;Thread(new&nbsp;MyRunnable()).start();</p>', '1', 'F9340C57509444A9AE46E15B4EEAD30F', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('40B3082022BA46409B7EA76FD750B1CC', '<p>修改数组里的内容<br></p>', '0', '637B02298C46445AB08CD99A898ED2E4', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('40E0B5AE2534483DB9F42A364936D134', '<p>要有父类（或父接口）引用指向子类对象<br></p>', '1', '760B0E3F38214009B32C614241582927', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('40F40BBF5264424B8D8756A15ADF663B', '<p>Math.random();<br></p>', '1', 'A6439947B71C40CEAD1EC0391779736A', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('41311C65CEB7494FAF4DDECB8D71BAA9', '<p>protected void show(){}<br></p>', '0', '0BB77E63B8B54AB7AE7F8B315B6EB5D4', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4134217F9C424BF88B65F5EECACD6BBA', '<p>这是一个静态方法</p>', '1', '1E99BC1C9AD140F1AEF70A9684E9288E', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4135E11CAA1E4F328CAA30C17BE4A62D', '<p>麦克…韩国&nbsp;&nbsp; &nbsp;红杉…韩国<br></p>', '1', 'F26C847CE8BA4DF190702CAC25325E9B', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('41403712AA2F4B9DB8EA39DBED5D0A0A', '<p>只能够去重复</p>', '0', '8366C52BC4454EAB89F2B674A19235C8', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4145E0FFC7C14101873B60692D3BAA05', '<p>TreeSet中存储的元素没有实现Comparable接口，也没有传入Comparator，运行不会报错。</p>', '0', 'F900394C5F5A4F54939C0CBE54C29761', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('415B9FEE3C0E47199944748AE80592C1', '<p>代表正号<br></p>', '0', 'AB500DE2A4C343FAB446021D260E2ABF', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('415F6C22F31B44D694D7820C674BEB2B', '<p>能用字节流的地方都可以用字符流实现<br></p>', '0', '42156B65734C458EB56B59297A7615C0', '2016-01-02 21:48:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('41786DBBD9F746959AE37A023C7B7764', '<p>tel：name</p>', '0', 'F591CC06732443919C37C2191C470C9A', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('41910DD0B63D4C628EE8CFD5FE24B43E', '<p>以上都不对</p>', '1', 'DEF376AD9E24405AB29FF39D5CCF73B6', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4197D28ABC0548BB9981429878845155', '<p>int&nbsp;num&nbsp;=&nbsp;r.nextInt(20)&nbsp;+&nbsp;1;</p>', '1', '09F34928060A46DFB9C1C0FD308D2508', '2016-01-02 21:48:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('41AB0502217C4EA68FD340513A2E0899', '<p>abstract&nbsp;class&nbsp;Circle&nbsp;extends&nbsp;Shape{&nbsp;&nbsp;}</p>', '1', 'FA8A7E3C7BAA4C9C9C34C59417EBAC70', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('41ADC8A76E834D8C8B49432EA1EABCCB', '<p>返回一个随机的int类型数，该数大于等于0.0小于1.0<br></p>', '0', '581EF8E195424FE98A00D3F5CA044413', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('41D653C9F11447B6AC878B759129CD3B', '<p>&nbsp;name：tel：<br></p>', '1', 'F591CC06732443919C37C2191C470C9A', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('41E30693B09A47FF84DB128DE05C3F8A', '<p>①②③是重载<br></p>', '0', 'DEF376AD9E24405AB29FF39D5CCF73B6', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('421B866766EA4020B4F248F0F3F91E01', '<p>toCharArray(String str)<br></p>', '0', '1D145EF1AF534D06A1B09823C50527FB', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('421DD9C01CD14091A963C05709305233', '<p>是</p>', '1', 'E572A6C1E75146FE892D1951AC55C5ED', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('422E4A85C8164861BBFE9E82CCBA5FB1', '<p>long b = 22222222222;<br></p>', '0', '0DE02B30B9624BCDA2D532954D0F13BB', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4248FFCB6A974EC187DAA90122FC500B', '<p>我我</p>', '0', '30E2F61D607D43FCA7B2D203D82452C3', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('427FD4F102954A84860A5D3E47D76D02', '<p>toByteArray（）以字节数组的形式返回数据<br></p>', '0', '2B1328117B79429EBD1E9D91D4ADDA0D', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('42939DE235424564B8B0355361A31406', '<p>BufferedWriter<br></p>', '1', 'D575FB6A65FA4EA9B1AC66964876F719', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('42967B2C3F3E452BBF2539231327C41F', '<p>put(K key,V value)<br></p>', '1', '79500A1D93AD46368158B723D5D74D5F', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('429D475D85784142B3B2C26CEF8ECFCF', '<p>可以在找到任意位置下的.java文件<br></p>', '0', '631BE813DDEC40E6899D2779FA29F2C6', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('42B1A5285D5942988FA71C89D6EC97FE', '<p>并行和并发没有区别，都是指同时执行多个任务。</p>', '1', '6E6B8269595945248D9A567970A1F006', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('42B6BF7C44F144F890D6C0FD9F3A823B', '<p>向上转型需要加强制转换符</p>', '1', 'C227C2AD2B684621A3C11949260EC402', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('42C9EE1339B84D249977D7D39C156437', '<p>for (int i = 1;i &lt;= 5 ; i++) {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp; for (int j = 1;j &lt;= i ;j++ ) {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp; &nbsp; System.out.print(\"*\");<br>&nbsp; }<br>&nbsp; System.out.println();&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>}<br></p>', '1', '620E82A73616435F840F499748915126', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('42E173E05131407ABF3FBDE2DC7BD594', '<p>.md<br></p>', '0', 'EA62BBDB43914C7284978905E43339C6', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('42E56D187F6941CCBFB850137469027F', '<p>Java 语言编写的程序虽然是&ldquo;一次编译，到处运行&rdquo;，但必须要java的运行环境</p>\r\n', '1', '8CC03243EAD84A56826C7EFF09FC7A5D', '2016-01-05 00:12:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('42EACB68913C4129BD7FE7D7ED1E47A2', '<p>length()<br></p>', '0', '8E0079A51EEC4699A5D710D35D29DD2C', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4308DDCA368840299F488D5FA30E2247', '<p>在堆内存中开辟了连续的6块空间<br></p>', '0', '3B4943BA3A69445F9E93E7D526925372', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4348BE007EDC469EB656002D4DD0C597', '<p>Thread</p>', '1', '27EB767D8B51453CB21E8C05B813330F', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4360C3D73E354F048E29EAEE2D423CBD', '<p>ByteArrayOutputStream内部封装了字节数组<br></p>', '0', '2B1328117B79429EBD1E9D91D4ADDA0D', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('43832787BE16485FA48917D536FB76CB', '<p>18</p>', '1', '79B602AAD637488BAFB1D62CBA7CA463', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4386ED6BAA4D482BBE36912199DCB664', '<p>20</p>', '0', '18DAE8B524B54C2FA88584881049C063', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('43B808E7FE8B45DFBD51FE3A34D7552A', '<p>命名要做到见名知意</p>\r\n', '1', 'E3B0235E2A2D4BDDB3F100D9CD28305F', '2016-01-05 00:09:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('43C2213EF88C425C9FF4E95705E205B8', '<p>输出结果依次是 \"Hello01\"，\"Hello02\"，\"Hello03\"，\"Hello04\"<br></p>', '1', 'E044C868B30B47DF8E38653F878C0DD7', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('43C447AB359845109B09BEEB77F1D5EE', '<p>-127至128</p>\r\n', '0', 'A73EB37FB22B47C797DCDB85C32201F5', '2016-01-05 00:03:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('43C720965CF54C72BF9F63110B329F9A', '<p>mkdir</p>', '0', '5EE5CE663C5D4F4B97ADE513BE3D01E6', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('43DBB98C5340486BA430B969249B3246', '<p>只能出现abc<br></p>', '0', 'E3074074B0594D58B0877A11149B5156', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('43DE6B2B1E0B4E4F9B149453C3A4661D', '<p>num,&nbsp;Inner.num,&nbsp;Outer.num</p>', '0', 'B3567B790AF24592BE56FD26425BC8B5', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('43FA3F92F7E8450A8D37D5B0851FEBBB', '<p>for (int j = 0;j &lt; arr.length() ;j++ )<br></p>', '0', 'D525B443A8604299A35D9F61CF559E3F', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('44012FAA64734DFD834DE2D06C3A45CF', '<p>Map是一个接口<br></p>', '1', '2415971B99164573BBD7B3D73E85FBEE', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('441AD7F4ACC643989C04F7BE0734A710', '<p>for (int i = 0;i &lt;= 9 ;i++ ) {<br>&nbsp; for (int j = 0;j &lt;= i ;j++ ) {<br>&nbsp; &nbsp; System.out.print(i + \"*\" + j+ \"=\" + (i * j) + \"\\t\" );<br>&nbsp; }<br>&nbsp; System.out.println();<br>}<br><br></p>', '0', '8AC88875E657410DB0ED8DFFD648A386', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4424C905C0644AA29593B2FBA0131497', '<p>add,remove,size</p>', '1', 'FC1DC35DA4B54414A7E561293AEF4723', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4429000DBFFE4EA9B6641DA875F1EE3C', '<p>获取集合中元素<br></p>', '0', '9432D0FE7E164BC6ABC8AD6EA7998CE1', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4434675104CD4258B8F58A2C5A452CF9', '<p>删除工程将直接从本地磁盘删除<br></p>', '0', '47059212E46F4BC7BBB09F587418328E', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('44390FF3AF364240901EF0DD7818A0F2', '<p>去掉了泛型信息后，代码会报错</p>', '0', '2FF773FFEE944FC292F92C6B09F338E3', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('44449F1296F044D6AB7387A5AEEB0D82', '<p>十六进制<br></p>', '0', '33F17F63850A47328FE0DA143089B374', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4457EE51C1554DC3A543D9601A735C99', '<p>FileInputStream fis = <strong>new</strong> FileInputStream(\"海贼王全集.avi\");</p><p>FileOutputStream fos = <strong>new</strong> FileOutputStream(\"海贼王全集2.avi\");<br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p><strong>byte</strong>[] arr = <strong>new</strong> <strong>byte</strong>[1024];</p><p><strong>int</strong> len;</p><p><strong>while</strong>((len = fis.read(arr)) != -1) {</p><p style=\"margin-left: 40px;\">fos.write(arr,0,len);</p><p>}&nbsp; &nbsp;<br></p><p> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p><p>fis.close();</p><p>fos.close();</p>', '0', 'A8E88D3C9C5A447BBDD238DF2D320C5C', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('445A1EE7E71444DAAAD0571C9D98D7E4', '<p>&amp;<br></p>', '0', '42F361196B7E460BA3B528C18EF58B75', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4473419A498E438B96C52245DF669DBC', '<p>getSeconds()<br></p>', '0', '3DD40B0051E5410BAC65E7777FA277DF', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('447DDBD2C65746FBB774DC42AD2FCBE4', '<p>-1<br></p>', '0', '8C96C499F57C46CCBF96C27956FAFD7A', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('44B72055FFE3475FA2400152ADC820D7', '<p>以上都不对<br></p>', '0', 'B6D9EF7FF95A4E9D85EF00C6888A59C1', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('44C5F818CB784E7F99A1FAA2E7F863CB', '<p>containsKey(Object key)<br></p>', '0', 'CC439803EACC4AFCBC25A088871C8F30', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('44D78E6BA5FA4972BD732DE9953196F7', '<p>以上都不对<br></p>', '0', '036DFCF4B15C42B49C06007CC9F18310', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('44F916B8EA354B8E985A94FE9F8D3D57', '<p>以上都不对<br></p>', '0', 'D5A0BFEB057D4EB88BB685E54BF0562E', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('45115F414627478A9A1C6A0CA903178A', '<p>Math.random(20)+1;</p>', '0', '09F34928060A46DFB9C1C0FD308D2508', '2016-01-02 21:48:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('45139456D4DC49ADA58CEB18794C6501', '<p>具有setValue()方法<br></p>', '0', 'C7DBA0E790634060BA8E48F26C438FAB', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4516BB16CD6348A588FED1697CF752C2', '<p>java.util.Vector<br></p>', '1', '9D751D5474794F8098DAF547D4EE5675', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('451E9F0383334C37AD6D9F8D1B8ECA23', '<p>对数组进行二分查找<br></p>', '1', '73F542C499F74E68831C486654B98B21', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4528DEE84AEE43FE9A9002D7179B3A56', '<p>以上都不正确</p>', '0', 'BA186F671712469ABD11D239EF870550', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4557BC5A27384F8998658D6B648BD02C', '<p>int arr[][] = new int[][3]();<br></p>', '0', 'D8BEF3D0A1954D7FA0AD30A4C8CE1BA4', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('458D50DC81F641EC9245D042CBD6E075', '<p>add(K key,V value)<br></p>', '0', '79500A1D93AD46368158B723D5D74D5F', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('45A2694E16094946990445E7B540E796', '<p>super(…)与this(…)可以同时存在一个构造方法中<br></p>', '1', '5465ACE300EF4C29920B87FE41EF9082', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('45B0D216CD3F4A7B80E21F9F4177DFE6', '<p>InetAddress<br></p>', '1', '85489CF01E1344DF87DC15CA75ECAF89', '2016-01-02 21:47:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('45BAF9A10E36403D99729B04B4E786B6', '<p>字节流使用完后需要关，内存输出流使用完后也必须要关闭<br></p>', '1', '48A3DBAA47A245569C1A9B7B0DCDBE2A', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('45C2ABAC755049F985419E64AA4E3F68', '<p>Student.java<br></p>', '1', '0B4FD060189A4B7BB285C9A375F22E21', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('45CE9B27135F44AE82B9CD8405F6ECAA', '<p>重载<br></p>', '0', 'D1BA325130EA460F85F8E56D4406A40D', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('45DD2CB0FD4A4221B86318D622024909', '<p>编译报错</p>', '0', 'A5241E29E79E4CB6A49941DDF1EA1E68', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('45FC87955711443CAF283D44AE3C9FC7', '<p>compare()<br></p>', '1', '74AB41356CA14C88BFFE6D2188ED6E37', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('46038B96FF714CC0A046425D1E3AC0B1', '<p>以上都不对<br></p>', '1', '82C3F4B66C7440BC89249CED31DFAED6', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4609B501A4114D82B7D3E49EE64907EE', '<p>为给定的日历字段添加或减去指定的时间量<br></p>', '1', 'E2525262D08243E38EADD4BF65ACBA41', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('461217267D07430C9F6F03246F05EEDB', '<p>存储了3个1维数组<br></p>', '1', '3B4943BA3A69445F9E93E7D526925372', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4630A4CEB7E54CF4A22D5F3A3CA97F9F', '<p>可以保证元素唯一性</p>', '1', '79EFB9A028004FD78E0172C1D10E333A', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('463662A01E7F4AA6B350725637A5FF0A', '<p>String&nbsp;line&nbsp;=&nbsp;sc.getString();</p>', '0', 'A7C50291240940ADA8D491315993CB51', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('46404689BF7D4786AA2F50574E4DFE27', '<p>如下程序两个流建议不关闭<br></p><p>FileInputStream &nbsp;fis = new FileInputStream(\"致青春.mp3\")<br></p><p>BufferedInputStream bis = new BufferedInputStream(fis);<br></p><p><strong>int </strong>b = bis.read();&nbsp;&nbsp;</p><p>fis.close();</p><p>bis.close();</p>', '0', 'C37EB787F1314BEB98DC5DCF0DD682AE', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4650D74E19D64E24A95691CCDCD4C31E', '<p>“”是字符串对象<br></p>', '0', '469DBB56229349EBA5B35B7263B87B81', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('465C98891C8842AE9E31F8FF1BB02F97', '<p>arr和arr1指向的是同一个数组地址<br></p>', '0', 'A896AB991E4A408D8E24F851156CD835', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('46684D010E914FA082CE82698567EF6F', '<p>x = x + y;<br>y = x – y;<br>x = y – x;<br></p>', '0', 'A9BEEC39274143529CAA33482538E62B', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('466DDF777DDB423D86490011DD15B526', '<p>获取当前时间的毫秒值<br></p>', '1', '124724C69E1244E8B8ADF5F42EFF2E34', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('467103DDDB3F4B52922AD512F77A9305', '<p>不存在<br></p>', '1', 'A0C2880F81BF48F1B52F1FB9877460BB', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4677FB72BE044977A7349B8BF9F887F9', '<p>如果Person类实现了equals方法，那么就会移除一个张三</p>', '1', '2D893DF5AD2D4BA38B380E261540BC4F', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4678569E0E9B4011BC45DFCC416D6E03', '<p>int[][] const = new int[3][3];<br></p>', '0', '6F1ED2CABE3E49FC9A30BEA2AC003EE7', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4679E93F77F24AF9950AE3A44C422117', '<p>Vector里没有add()方法<br></p>', '0', '0AD033E697B148A4896ADE14CEAD8D3C', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('46A66554CBBC490EBD631D2028AB4D52', '<p>排序时要找出自己的排序原则，再进行排序规则书写</p>', '0', 'ADF3AC3FB5544E83B88E7FD92458D174', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('46B6C0BFD57D46349E6F24D24B6777F3', '<p>insert()</p>', '0', 'FC1DC35DA4B54414A7E561293AEF4723', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('46D54D093A8B4182BE0565684C4F4FD9', '<p>arr.length的值是3<br></p>', '1', '53FFB5CEF5B74A0AAAC32872249A1EFC', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('46F3518702154953BA84CC8258580B72', '<p>刷新缓冲区，并关闭流<br></p>', '0', 'AA8F784105F34FBEA2BBCDFBC15CEC02', '2016-01-02 21:47:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('470299CF78E54F2A9A81492D3728553B', '<p>调用setLineNumber()方法可以设置当前行号<br></p>', '0', '3B5BC9E664F84464B2EE00464D5E7D91', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('47167CB267804E99981E662B12CA3558', '<p>int indexOf(int ch)<br></p>', '1', '6FC6703501074930A7659F20DE08FEF7', '2016-01-02 21:48:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('473BA91F5C4747999684FF2DABAED220', '<p>static<br></p>', '1', '916FD7975C0748C1B977091139AE2920', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4757BCC29D034C7EB084D10116B41C9B', '<p>要存储的类实现Comparable</p>', '1', '77EA5743DA954BF8A0F5901E7AE17F65', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('476A5523FDA94DE684F195233A0AA107', '<p>Iterator接口<br></p>', '0', '33653C13ED974192B90251FF05593801', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4781BB937948492D9F2464217757993D', '<p>通过Class.getMethod(方法名，参数类型列表)的方式获取该方法<br></p>', '1', '30A3D30DECD144BB97AA52A01513D6A1', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('479916CA56AA44F5AE6CF8D7626826E4', '<p>abstract&nbsp;class&nbsp;Inter&nbsp;{&nbsp;abstract&nbsp;void&nbsp;print();&nbsp;}</p>', '1', '199C217200F248CA8901EF185C605765', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('47AFC286C42E430393C3B1BF0FA814F5', '<p>int max = arr[0];<br></p>', '1', '92851EA035E6414EA8E15FAA3FC9D818', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('47BC846F4F4A4A9D8EE2DFC1F4BD5721', '<p>Eclipse下的程序中的黄色波浪线代表警告,不用处理,仍可以编译运行<br></p>', '0', '5C8A4D37B9614A8F8038BC73405DBB04', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('47D6A6EEA8F3475FA4CE80C662C824AC', '<p>Writer<br></p>', '0', '4B4C72449AEA4C26B147B90D9D21F282', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('47DF716342BB4CF78F6A53BFFC68C0C3', '<p>程序错误<br></p>', '0', 'DBFA1AEEDCD746B7BB2C6FC587226ED5', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('47E897C926FE46D696D0209D2B9D0420', '<p>_hello<br></p>', '0', '5163DBDAA61D403FA64CAADC30589FC2', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('481D81741A594F869038F9CC0115A2D2', '<p>b[1].length的值是3</p>\r\n', '0', 'B365A04AA4394FDD862A972F98CD81BD', '2016-01-05 10:50:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('48230E8D2BA74C4CA2A8EEEF15BEBD1B', '<p>54</p>', '1', '3493B4F1F3264C0DBD67F03CC3BE19F2', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('482F84A67CF34AB7896F109FEA0307B0', '<p>不同的动物吃饭的行为不一样，所以可以定义一个抽象的eat()方法</p>', '1', 'A7836608D1E64786A4D85234C5295403', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('48302710750B4A828D35FC1096576A0A', '<p>两种循环结构中都必须有循环体，循环体不能为空</p>\r\n', '0', '1219DAFEA6724A5DA10B6474B81430E1', '2016-01-05 11:13:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('48611336792548CB9AC7FF48F4D51109', '<p>Scanner sc = new Scanner(System.in);得到Scanner对象<br></p>', '0', '164036900FC0455CAD6AA96796D9044F', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('48620802A4874400BED4B8AE77B89CFE', '<p>集合的长度是不可变的，数组的长度是可变的<br></p>', '0', '84C4F3C13BCD4BDA90E2017CA9EDD8E2', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('486EB62E840D484FBCA387F8856E2794', '<p>可以单独定义一个类，实现Comparator</p>', '0', '8A3657F552B745508414D17A3C6CC13F', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4870DE922B3045AEA229532C41C712ED', '<p>判断是否可读<br></p>', '0', '1D3ED14895164E81A695DCB17CD19016', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('489DF2F04E1D4F788A726AAEA3BAD402', '<p>小明57<br></p>', '0', '09A95217367F4AD5A804067AE5BC46C5', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('48ED8FFD88C147659594CE3CCB8D90B1', '<p>用匿名内部类实现接口，接口中的方法越多越好</p>', '0', '494B987FEA4648E880F8D7C2FB4BD37D', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('48F39D7FDD92487F973EF9DDCA0243D1', '<p>2*2*2<br></p>', '0', '30751AC1CA3B4F27B32085193F56732D', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('49016EE7EA84473C9E044FDF4B01960E', '<p>switch( a+b*3.0 ) &nbsp;{ ...... }<br></p>', '0', 'D1239F78C184432CAFB7CED4F941D4B5', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4914EC36E8094EE99B0A87787E2466F1', '<p>当工程不需要导入的jar包时,可以手动删除<br></p>', '0', '49C4E4FD37384A2B97E1F02D22D0E930', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4926E45BD08B41058D757F4781F7BAA8', '<p>当文件中的内容读完的时候继续调用read()，会返回一个-129（因为-129是超出的byte范围的数）<br></p>', '1', '5AE300BAB3ED4B3497D889153F31478B', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('492723131C4844B09E6C78F0DD81DD7A', '<p>b1-b2</p>\r\n', '0', '4E6F877880184D5998E9581F020AB5F7', '2016-01-05 00:11:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4941642C210F4732B5742E92AFA20AB7', '<p>2</p>', '1', '848C122FCDF54222A12F365187AB580E', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4952D30897AB46CBB3760CC066A78B9D', '<p>静态导入可以把一个类的静态方法导入，直接就可以使用方法名来调用，不需要类名.方法名来调用</p>', '0', '80EC425FA3714F388A1197AF6EABB575', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4960CEC1C7274BA79D5F624C7B32B4B7', '<p>如果我们没有给出构造方法，系统将自动提供一个无参构造方法。<br></p>', '0', '27F0DB3629724236AFCAAC9D331E9B7B', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4963B677F0684693A34B4B0246CB381F', '<p>局部内部类访问局部变量必须用final修饰这个类</p>', '0', 'F9F75F27924C45FE8FBA6ED8B067242F', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4979961E232E4DF5B9090245E3DCD2B4', '<p>Eclipse 扩展性很弱<br></p>', '1', '0D9A8E62FBE541EBA102263994E43699', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('49803E0C62E74FC8B251F6E64A815CE1', '<p>arrr中可以存储1个长度为1的1维数组,1个长度为3的1维数组,1个长度为2的1维数组<br></p>', '1', '90C634D1F0374751822F0987D5CE948B', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('49BABA8F9F2B45268CEE4E384F515DFD', '<p>不需要定义类,就能创建对象<br></p>', '0', 'C1AD6963B5C944A79F5DBACD1B6440FA', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('49E6B0FA01E7484889FFBA921F6ADAF7', '<p>直接定义int类型的变量进行拷贝<br></p>', '1', 'F038CBE9AC384DFEA52E7CA1D0712416', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('49E9B37AA2784FDBBEF7A3590E6123FE', '<p>运行错误<br></p>', '0', '09A95217367F4AD5A804067AE5BC46C5', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('49EEE0B2A6A848F698D58C3027FA5348', '<p>null<br></p>', '0', '8C96C499F57C46CCBF96C27956FAFD7A', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4A025D48C4F341AEB0A0893D288521F6', '<p>this可以在main方法中进行使用<br></p>', '1', '7AEE9BAED57949AE9023535451C9CD2A', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4A3236C444DB42FC99C91EF09A8EC89B', '<p>Iterator是迭代器的接口<br></p>', '0', '785A48B480A843E38BE9E375C5783B10', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4A3D95C3DD324F9E82A6D0890DD43FAF', '<p>writeDouble()表示写一个double类型的数，readInt()表示读取一个double类型的数据</p>', '0', 'E4A02616EFE449F080062EB49D422A8D', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4A64379AD9144561A6E1DBD13D61F008', '<p>编译报错，找不到符号(方法)</p>', '0', 'CB7D9F80ED264AB5A31D02CFB90BCFCF', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4A64A839599E4D1FAB2664C4EC6F8E21', '<p>只能让方法返回数值</p>\r\n', '0', 'C2BAE395C1334F0CB54A2470D90568AA', '2016-01-05 10:34:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4A92763AAFCB4BC892433BAE044717E6', '<p>获取路径<br></p>', '0', '1D3ED14895164E81A695DCB17CD19016', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4AA8ADF66B914B50A63FA0AA91BDCBBF', '<p>对象中必须有属性和方法<br></p>', '0', 'F6B45AA6D1AD4A4A82C0DA620C638610', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4AB0BDA180594DF782F19CC0323C64A3', '<p>可以直接在Eclipse下新建类然后运行<br></p>', '1', '5C8A4D37B9614A8F8038BC73405DBB04', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4AB5D9BBD6F84E5B98A0BC23F30CC7C8', '<p>Map集合的键值对的值可以是重复的<br></p>', '1', '2415971B99164573BBD7B3D73E85FBEE', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4AD8FE6EF44A4B128FE1DF18564E39DF', '<p>集合是一个容器<br></p>', '0', '68C9BD499C284A208690688ABBDB0226', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4AE09618226D4527BA2A5222BEE0E002', '<p>该程序能返回一个指向文件夹的File对象<br></p>', '0', 'DDC888002C8D4CB7AF2E2977365CD216', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4AFDA6F5F5BB4EBD800320FF6DE00AFC', '<p>true false<br></p>', '1', '24A6885B91CB4F26A77FD0A15FC87CC2', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4B14BC34A6DA4E04BA52BABD558E8A7B', '<p>类加载器不会在程序运行过程中加载类，因为程序启动时需要的类都已加载完成<br></p>', '0', '29E5BE4B7C294A9E8F4E9F6C0FE7A0A4', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4B1BB088DAAC4D9EB6341F74E510B4E2', '<p>除2取余<br></p>', '0', 'F4C9C8EF4BE240C1ADDA7ED299A3B3D6', '2016-01-02 21:47:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4B39A94C0B6A4AD1A25D69677154A53A', '<p>Vector里没有特有的方法<br></p>', '0', '0AD033E697B148A4896ADE14CEAD8D3C', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4B3E9724C13043C0AD5C7992C54FF9B4', '<p>会报ArrayIndexOutOfBoundsException<br></p>', '1', '46BD27AD911848CEAA2EC19F2414C98C', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4B4EA4BB7ED542C2AC10BDC6AE032A45', '<p>super<br></p>', '1', 'DF023BB151E44BD88EF66D5BA9FA5C5E', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4B68CC7C5F2046D8974504CE8112F0F9', '<p>HashSet保证元素唯一</p>', '1', 'F6F150F653AF468E92A847EAB9D32540', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4B773F3ED7B34BCFAD6049F2CE88BEDA', '<p>线程操作的数据来自Runnable实例</p>', '0', '129CFC454B654A4BBB45D648BDB23225', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4B7A7D6112B54273842CF0C00492ADB7', '<p>4<br></p>', '1', '3588BD16F3F9415798119AB99396DAD9', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4B80303DE0EA4D159A98CCA32FB467F0', '<p>栈不属于java的内存<br></p>', '0', 'A22FC99A1847414BA590D98DC55DB4E7', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4B8362B237D547C7A9247952778C65D9', '<p>jdk是java开发工具,并且包含了jre<br></p>', '0', '6DCE6229ED1C4EE2A7E672038B81E499', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4B8C25CDB10048779DE31CD4E3FEE17E', '<p>sleep</p>', '1', 'A3A2AA41A95148C395A4B962D4D909E8', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4BA7FC9303C74C288A9BA77C844D1E09', '<p>包其实就是一个.class文件</p>', '1', 'DB704B6ADA424AA29065E34D55EA8425', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4BBB86F3573B4DDA8044C986F87B6422', '<p>StringBuilder是线程安全的<br></p>', '1', '2EA8E15740084D309085376DC7913C8A', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4BE66CC428544CF1AA1BD037EE6F4339', '<p>代码里的所有单词都是关键字<br></p>', '0', '89B84A68FCD342BEBA94B9EBCAB18139', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4BFA30824752468BB6F6B4BDBAAE1EB7', '<p>Collection接口里也有该方法<br></p>', '0', '7C9DAB2CBC5841A4BA9F98553E894DB4', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4C094EAA78C540189788F19EDA6060C7', '<p>如果我们给出了有参构造方法，系统自动提供默认的无参构造方法。<br></p>', '1', '27F0DB3629724236AFCAAC9D331E9B7B', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4C0C8B250DD64728967EF3FE31E64DDD', '<p>shutdown<br></p>', '0', '4297FC8F0BE7432AB131FA9F1D9C1A1D', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4C1575EAA4D546869AB7E56825B30122', '<p>true true<br></p>', '0', '65B39DA3D5B34693880C941359DDCB3A', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4C281AB260F24441838B3DD760542732', '<p>HashSet存储类的对象的时候，类中必须重写hashCode()和equals()方法</p>', '0', '1D27400B24294D5483ABACEA7527475B', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4C2A65A28E754524A6D95FA0BB5F83E0', '<p>②③①<br></p>', '0', '98846009C6134E72903DEECC3E04550F', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4C49BB8BB3314C1A80643F012860C14C', '<p>在堆内存中开辟了6块空间<br></p>', '0', '9D75DFD225904472AD17FB5F9C274603', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4C4E4CBEB886450485893E582E0E058D', '<p>nextInt()<br></p>', '0', '4888C8C80F244B59B3446020061767FA', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4C547C8DFF014ED398040A36FA520A75', '<p>②这一行错误<br></p>', '0', '4BE2556B98B244B7B8B91F7EDEDE8D17', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4C575F2F85604312B41F6315128220FD', '<p>197</p>\r\n', '0', '10BCED75F1324ED792FD968B905CAE24', '2016-01-04 23:46:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4C84A2A7E6314546B7266B10C43EAB4D', '<p style=\"margin-left:18.0pt\">i = 10 j = 1</p>', '0', '25D9A255AF234A598AE8133A7FD59402', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4C9C0F9E002C4871A024CA2C8D341BB7', '<p>Scanner可以从很多源(文件,键盘)中获取数据<br></p>', '0', '10DEC256C8D84F0EA9EDEB62BCBE01D4', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4CA3407F611747518C68FB84FF5497CE', '<p>带参构造在创建对象的时候不可以为成员变量赋值<br></p>', '1', '67496E8CD2A4412C8A9DA508ED2DA2F2', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4CC07B6234B44257B278E04603A574E2', '<p>B&nbsp;method</p>', '0', '75F9C09FBFCF4CC1B636D38EBD5E377C', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4CCAED72389E46D58AEC285AD57D9034', '<p>true<br></p>', '0', 'A71138CFF2474222B8E54FF95DDBAFBD', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4CCD276F53D94E5A89FD1FF86DF61D8B', '<p>abCe<br></p>', '0', 'C7B29698CF024DB19EFC09C7E2BBA8C8', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4CD018CAD0FD404AB41487297FC79918', '<p>&nbsp;java.exe<br></p>', '0', '881CD969294E430FA746861339B82825', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4CD397F664264BFFA9725F57D80AE6B5', '<p>字符串的值在创建后不可修改<br></p>', '0', 'A59247A6CE834AC1AC4E101A93C28E88', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4D01442A58044ACD873F733B0304BA8B', '<p>接口编译后不会生成.class文件</p>', '0', '8C033FDAFFF64DC4991E80BF1DD2E9ED', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4D09AB50B09B44ACBEEDC84F298DC5D9', '<p>&nbsp;第六行会产生编译错误</p>', '0', '88941271C47C4408B48FA4E74607536A', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4D12648D80C74431918C33B41E68D84D', '<p>在工具—&gt;参数选项—&gt;用户工具里进行配置<br></p>', '1', '63CD6355C720440587CD2CD2A10C85C4', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4D25552C613E45338E36DC0E88850E2A', '<p>this<br></p>', '0', 'DF023BB151E44BD88EF66D5BA9FA5C5E', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4D96822E31C742ECA3CA119466ADAAA2', '<p>计算机中的存储容量的换算单位都是1024<br></p>', '0', 'B373D4F7C8AE4D55B5B2EA8955A474FC', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4DAED62426D14548989C40FE81F22E85', '<p>能够对元素进行排序但无法去重复</p>', '1', '18956523012A47378205856CFB075AF9', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4DC6F6F72FA7424CBBF908DB9C2AD42C', '<p>3</p>', '0', '848C122FCDF54222A12F365187AB580E', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4DEF7D9DC99747DB95F5631E6539704A', '<p>Son&nbsp;s&nbsp;=&nbsp;new&nbsp;Son();</p><p>Father&nbsp;f&nbsp;=&nbsp;s;</p>', '1', 'F62FD53FC2854F519FF92BFFEE905FD7', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4E0297B94002421BAAE108341728056E', '<p>在堆内存中开辟了连续的6块空间<br></p>', '0', '9D75DFD225904472AD17FB5F9C274603', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4E07BBE1423B454DA0576DBF8EC0E7D7', '<p>while循环<br></p>', '0', '7C22E6E486064C6481EAC9B3D303C0B5', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4E0B2FFB9ABE441D94F86043D4956CF1', '<p>以上说法都不对<br></p>', '0', '93CEA6E6E93541848B24BC750E0EF9E3', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4E1DDABA723C4A998755B9F29E763CDB', '<p>输出结果 a &gt; b<br></p>', '0', '457E231D07BD4B05AD8087790868B821', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4E20225AA1034F94B56A222FB1DB69FE', '<p>String&nbsp;x&nbsp;:&nbsp;list</p>', '1', '16E4716E3627450DB9D3608C877DAAED', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4E252F6DDD8844FDA2927DEC99BF977A', '<p>new int[][3]</p>\r\n', '0', '6CBE3C70D0DA482CBE77BB3375CDBEDA', '2016-01-05 10:31:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4E34F51ED07146DE8DC1A7859E0D999B', '<p>选中工程,右键选择Delete即可删除该工程<br></p>', '1', '47059212E46F4BC7BBB09F587418328E', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4E423E0E52C4447F8C4E716B8C6D2A6E', '<p>toOctalString()<br></p>', '0', '4C654212C96740DAA48625D784C27DF3', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4E544FC51739420BA0D2F4D7F3BDEB7F', '<p>打印数组<br></p>', '0', '73F542C499F74E68831C486654B98B21', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4E877A0B87FE4D5287719D036B40BFD9', '<p style=\"margin-left: 40px;\">ConcurrentModificationException<br></p>', '1', 'D236ADB4E3D0408CBE101DCA23AC8E77', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4E8C57A6D147442589BE87D121E4F2C7', '<p>Demo是一个对象<br></p>', '0', 'A324A02D815146AA85681768D985ED0D', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4E9425ED360B4D1187083C41C48E8143', '<p>List集合有特有迭代器<br></p>', '0', '0969B6C5716B4F1ABEC65C7AE62E9A0E', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4E9A94D625884F4D9A1040B930151B9E', '<p>死锁是指两个或两个以上的进程在执行过程中，因争夺资源而造成的一种互相等待的现象。</p>', '0', 'EF20A1F2C88947A09F8FAEE12B66E8EA', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4E9DD4AC34C44971AC6329DA597C185C', '<p>&nbsp;jdk<br></p>', '0', '8C77818A90E64208AE970DEFE35BE7B7', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4EAE5F63628C410BB19E593DA0529648', '<p>可以指定也可以不指定调用父类的哪个构造函数<br></p>', '0', '652C0A56A0BB40B493178CDD2B038717', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4ED94062559D4B28AAC2F825C373E561', '<p>&amp;<br></p>', '0', 'FEFAB71B3F2C499DAE2CA8076F1BC0E9', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4EFC235221DE49788D2008B44C020A9D', '<p>成员方法描述的是事物的属性<br></p>', '0', 'B4B90EB2EA6A4AA59B02B7BBC12F4A57', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4F0B24FF0B5045EBABE0E9FB83C08577', '<p>Hello<br></p><p>World</p>', '0', '00897F9C7B324D32B9A7E283F4602F46', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4F186161018F44B4840525EF5DB651C9', '<p>&nbsp;javaa.exe<br></p>', '1', '881CD969294E430FA746861339B82825', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4F1F27FC873A43DCAD5E8087292C5EFE', '<p>设计模式于己于他人于系统都是多赢的，设计模式使代码编制真正工程化。<br></p>', '0', '4AA86A7960B84562BE0A1F96D081064C', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4F21FE1F6BDB41AAB34F59E43364C919', '<p>List是一个类<br></p>', '0', 'D056B5E073414D30AA34FAC661845B39', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4F3B85939753434780C35AC3DB0722F6', '<p>BufferedReader<br></p>', '1', '01C58DFD07654C5F97CA9BC05F8DDBD9', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4F4C51337AAF4B38931342A7785AC877', '<p>允许两线程并行运行，而且互相通信</p>', '0', '60E4ECA445284A43B1F902BE17E8DF56', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4F59469F76CE4F07B7190ADE26286E09', '<p>就近<br></p>', '1', '30C0CA825EAA47219CA0FF69743134FD', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4F667ED5B7D94DEE966E427553B2DCFC', '<p>line.CharArray() &nbsp;arr.length &nbsp; &nbsp; &nbsp;0<br></p>', '0', 'B142786382A44D27A8AB251F2B4D9CAC', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4F76AC6A18584E4F83637B22BDD0C95B', '<p>查询慢<br></p>', '0', 'DCEA05941DA1408989ACA558273E8284', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4F7AA1D8500A4FDA89B4137AEBB22155', '<p>show方法可以接收Object类型的参数</p>', '0', '70EFE4CF216445AA99F14BB8FB7BF79C', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4F88D5102620416E9CFD32CD7BCE5191', '<p>当持有锁的线程对象调用了wait()方法时，线程将释放其持有的锁</p>', '0', '6862677813E9439F9BB235FE0C983BBF', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4F8E6872954A4F6296E0F8ACA887F2B6', '<p>1</p>', '1', '4052B4D8ED1240428210C2AC3E3479F4', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4F96EE628B244E2586AB5234F3086AE9', '<p>entrySet()<br></p>', '1', '005A1DFF0D044DB08C8AE85D8A358C7C', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4F9F22C9354D46E6A1B30659264B2CCA', '<p>删除数组<br></p>', '0', '12F15E24460741489FC9F95F49C8CF6F', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4FA28A2A691343DEAB5DBFB50C7B411C', '<p>自动装箱：把包装类类型转换为基本类型<br></p>', '0', '52F74D03957B4E4399335353D3E7C168', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4FA7706CD57A4BDFBBBE2888F8846C00', '<p>read()<br></p>', '0', '3853C01BD30A4CD18A1F90BCE961F137', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4FB76A4390CB4CB29C10B563877C2360', '<p>30是最大值<br></p>', '1', '0EF6FB630044444EB4987440FD362DA7', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4FC152FA32EA431A8537B90FEA86629F', '<p>c<br></p>', '0', '960474F91B394706A50D8267912DA514', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4FD6B6D78904456E8720384B15C37B5A', '<p>低性能<br></p>', '1', '396CE78AC3B44CC4B6158FDB69A9DEF0', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4FDB9992F5194BCC813032096FCC59EC', '<p>字节<br></p>', '0', '5A31B84F00D24A6D9D10F5AA65D3A032', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4FEBAA94308E4A6E8C6454D3184F4B4F', '<p>基本数据类型和引用数据类型都可以定义成员变量<br></p>', '0', 'C30C352232A347CBA31D49BA18A9E785', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('4FED25406B2D4A3AAF9EB29D418C1B30', '<p>class</p>\r\n', '1', '285E75587454458A8F4974FE0301A961', '2016-01-05 00:04:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('50146816794D46AF8C8F37FF719687F9', '<p>只有被private修饰才叫做封装<br></p>', '1', '20175B40D4B14A0DA895C28F3AA1923A', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('503250FB7C4C4FDD942928F9FC664E28', '<p>a 10<br></p>', '0', '979217D547154A34BCF2AFC3EB0DF9A6', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5033484D79694AFBBD70AE3FB50B59E7', '<p>if对区间判断<br></p>', '1', '8876473BE2CE4F08BDFEB8E09451105B', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('504D1C0B04DA47ED97A1F7F24151C42E', '<p>类的耦合性增强了<br></p>', '1', '97A38AC863154A1E8605832880A665E7', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('504E62E586B245FDAA38214295893BAD', '<p>暂停其他线程，并执行当前线程。</p>', '0', 'EB970D206E3649868C19C270C41904E4', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5066B466C17E4754BD36B99CFA3799EA', '<p>OutputStream类<br></p>', '0', '5895335F73064D669D62BB222B4E288B', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('50926B569A3D442686AB62AAB47E61BB', '<p>Scanner.nextInt();获取到键盘录入的数据<br></p>', '1', '164036900FC0455CAD6AA96796D9044F', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('50998353A47C4D3A981C06DF255CC89B', '<p>不需要定义类，就能创建对象<br></p>', '0', 'F6B45AA6D1AD4A4A82C0DA620C638610', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('50C3F2C463A341B29BDFB8BEF10520CA', '<p>FileReader<br></p>', '0', '4A2B28406C684288B1159D4EA26BE87F', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('50EC1239217542AFA9DD41E756BE442B', '<p>队列的特点是先进后出</p>', '0', '1244EF5B065C413E8538D26FE6BD5DB7', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('50FE08528CA340A98F25BF2DAFC06C2A', '<p>true false<br></p>', '0', 'DBA85C4AA13D48568298D942257B447B', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('511E7C67804C4E128E05DC57D364143C', '<p>int x( ){ return true; }</p>\r\n', '0', 'C20E08B1A8874E14A662A03B51934758', '2016-01-05 10:53:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('512B398261824EFF9B237DC3684C2C37', '<p>&nbsp;可以用字符流实现图片的复制<br></p>', '0', '42156B65734C458EB56B59297A7615C0', '2016-01-02 21:48:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('513B953F582D4C4283077757DF742932', '<p>一致<br></p>', '0', '30C0CA825EAA47219CA0FF69743134FD', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('513E354D91DD404BBF1D4FFAF99BBCFF', '<p>Inter.show()</p>', '0', 'E7FF18CD2F914A7489A76964CF88787A', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5149E97EE24F4443ACA98C4A8C9DD70B', '<p>A&nbsp;method</p>', '1', '75F9C09FBFCF4CC1B636D38EBD5E377C', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5165A66CCA58490599F76EE4030D2FBF', '<p>16<br></p>', '0', 'F5D31655810B4243A0A9FE390258464E', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('51736DCCB07746099B4D69999CDAB2EC', '<p>switch ( a + b );<br></p><p>{ ...... }<br></p>', '0', '34A040350A9349EE8F1C2C852648058A', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5186F3C112714035A7E337C7D5CA294F', '<p>结束<br>符合条件,已经进入if流程体<br></p>', '0', '747AF21CDC7541C98292D04A6AD6E15A', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('518A38C7915249B9A062A52E186B6FA3', '<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int temp = arr[i];<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;arr[i] = arr[arr.length - 1];<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;arr[arr.length - 1] = temp;<br></p>', '0', '14F36999518642BB88E0EF9BC295CB74', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('51A2F8D14C324430A2911A960930224F', '<p>DatagramSocket<br></p>', '0', '84612FE6BD5747EFA99A92FA929E0743', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('51ABD119A09D4A2EA3808756B7310A3D', '<p>切割字符串<br></p>', '1', '12E6DB0B3B644FDC950D4CCEA0CA93CD', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('51AEE80835664F29A3A38D6D04F3BEBC', '<p>list集合里面含有2个元素对象</p>', '0', 'A5241E29E79E4CB6A49941DDF1EA1E68', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('51CC381CBCA04C07BFA0E668B112C5C4', '<p>toString()<br></p>', '0', '6564034877DC4650AFCD54F1B2AB5780', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('51E9D2B229A94E1F8939AEEF9DC34476', '<p>超类<br></p>', '0', '58F85976654D4BBA9A70FD3B3AB6F5B7', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('51EAC4A63782497A8DEF6BF0D94C19AC', '<p>static</p>', '1', '45240CAAA08A471F984E11DF7D191CB8', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('52143220E6DC4F0CA9A156C6C71F1454', '<p>x = y – x;<br>y = x + y;<br>y = y- x;<br></p>', '0', 'A9BEEC39274143529CAA33482538E62B', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5236C3E101634C07A5A797656B541A82', '<p>构造代码每创建一次对象就执行一次<br></p>', '0', '39CAE2CBBD9F4A20984DC823D3B6A0B9', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5240D7C0934F41B7A8003ECCEE203993', '<p>while(“真”){System.out.pritnln(“aabb”)};<br></p>', '0', 'E12729C58134468184A5EB870BD048FF', '2016-01-02 21:48:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('524F1E411D704C3088F69CB7DFB4C1AD', '<p>利用缓冲流拷贝<br></p>', '1', 'F038CBE9AC384DFEA52E7CA1D0712416', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5252C9CD6D0846E195FF7E3D71E6CAA7', '<p>Eclipse会自动编译生成相应的类<br></p>', '0', '5C8A4D37B9614A8F8038BC73405DBB04', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('52641DAB45CD45269BEAD7522EB8A013', '<p>1</p>', '1', 'E279B9ABBE7D4388B25EDB69A3610DAC', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('52655271F6504167A17C0B470C3699B8', '<p>提高了代码的安全性<br></p>', '0', 'B7250FC6E5D141188C732DDEF690C51D', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('526938777668473CAE431F20ACA5C506', '<p>对象.成员方法不能有return语句<br></p>', '1', 'A6426E3458AD4C76BEB4892CF80C43FF', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('526F02B15D4E47759143EB153A62067D', '<p>一般复写掉Object的toString()方法,返回该类中属性的字符串拼接形式<br></p>', '1', 'E85D40CAE492434BBCA76F3404531777', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('527B8F98FECD475687DF7ACD36F300FB', '<p>关键字final和abstract不能同时使用</p>', '1', '267C44DEC8724C72BB1700B9C3B8FE2A', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('528AA184E27B480DAC842DF9CDCE8222', '<p>e</p>', '0', '7CEFF1E7084E45CEAB76349F5B5B1822', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5290D2CC94A74D888D4720E2C670A379', '<p>编译错误<br></p>', '0', '1704CF5FE5D3469DB943E64C1D6DE4C2', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('52B0D93787FE4348BF10D7EEA4C693E6', '<p>int[] arr = {1,3,4};<br></p>', '1', 'EC1D818F03CE4BA1B7BF389338A807A0', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('52B50EDE3FD347209E72D6E365805467', '<p>throws 异常类名<br></p>', '0', '2A73CD0EB61845F48B99141874D2BB7E', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('52BDF6BECD23433F9F46AACB4E030AF7', '<p>int compareTo(String str) &nbsp;1 &nbsp;-1&nbsp;<br></p>', '0', '23CF65229C414EA4AB416B8DD803955A', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('52D88045BF7342758D6F14E5152797FF', '<p>b是最大值<br></p>', '0', '0EF6FB630044444EB4987440FD362DA7', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('52D8FE160C3C46E696DC3BF853D0C051', '<p>Object<br></p>', '0', '84612FE6BD5747EFA99A92FA929E0743', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('52F1FAA1444A4E85853085F5DD1BDF93', '<p>对象数组存储的元素是基本数据类型<br></p>', '0', 'F4D8A46773C14661A3D5A4FF4AA4851F', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('52F976E8838540B0BDFBF62BDDBC7F23', '<p>public</p>', '0', 'DBBEE1769E404ADCAD4462A129F60758', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('53234D418D014AC9AFF665576A9AFDCA', '<p>keySet()<br></p>', '1', '666B224A81A14522A8B34757E05F7E7E', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('533D18FE35C1486CA623F30E259681A4', '<p>D类</p>', '0', 'C4866D79B1204FC6936BECD569B51A03', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('536CAF0134864520A2629D5FCE2F1B03', '<p>返回值类型与该方法结果的数据类型不同<br></p>', '1', 'A06316D8090B4479B8E165E59459F067', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('537A8327B86B4253A67CB4BAB879BED9', '<p>insert()<br></p>', '0', 'FBFD600345C746128474DC1110091CAC', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('539E0C08C0844EEC9E9361ABA224C4BD', '<p>原理是java程序是通过java虚拟机在系统平台上运行的，只要该系统可以安装相应的java虚拟机，该系统就可以运行java程序</p>\r\n', '0', '524AD33A76AA4111AD4DE86132E49DCA', '2016-01-05 10:46:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('53EAFCB681B0419086C2DEAC7ADB49D9', '<p>int[]</p>\r\n', '1', 'C1181970F28C464FA907CE713DCCA70B', '2016-01-05 11:10:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('53F3ABDFC83A46B5BBA5939994B5C174', '<p>false true<br></p>', '1', '3962C2674C4A445394AFD8E290EB3F6E', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('53F5A76CC7A34080818D178FD51126BA', '<p>类：如果是一个单词首字母要大写，多个单词的情况下每一个单词的首字母都要大写<br></p>', '0', 'F61A30A255A94840B53AB86B49674CBE', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('54197A4CAE9243BD918AA66C09C71280', '<p>大括号要对齐<br></p>', '0', '59DC01D2DDD7479DAAA00AF27A2A9201', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('54637C050D554E0899B281BD5B376F73', '<p>jdk是java虚拟机<br></p>', '1', '6DCE6229ED1C4EE2A7E672038B81E499', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('546AB056446A480FBDB4CEEDBC76900D', '<p>只能完成写的操作</p>', '0', 'DFFB2602D6244F6C94FF9520BF0E43C5', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5476985B42C04245AA1E923221845013', '<p>&nbsp;为了在任意盘符下执行javac命令</p>', '0', '631BE813DDEC40E6899D2779FA29F2C6', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5476BBA74F4C44A5866AF35F73845E5B', '<p>class</p>\r\n', '0', 'AC5BA8E858B44799AB598A128F9FEC2C', '2016-01-05 11:11:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5478A7733BAF4CF8855AA1382351D585', '<p>一个类中不能没有成员方法<br></p>', '0', 'B4B90EB2EA6A4AA59B02B7BBC12F4A57', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('54B36C803F4C49A8903CB7D277EE7542', '<p>a1</p>\r\n', '1', '10BCED75F1324ED792FD968B905CAE24', '2016-01-04 23:46:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('54C8E4A2025C4EA680EAC12E22AF2041', '<p>匿名对象可以作为参数进行传递<br></p>', '0', '963A09F451EC465E88DE1CA98A923D51', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('54D28B95B7FE48B4BE4ABA977895F84A', '<p>增强for循环可以操作数组<br></p>', '0', '48D417D143DA43BF8049449D7082C6FA', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('54D848B16DB940509F421C7DC5CAF1EA', '<p>JDK1.8之后，局部内部类访问局部变量，局部变量可以不加final修饰</p>', '1', '494B987FEA4648E880F8D7C2FB4BD37D', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('54DB98323E25420F92F36D52D473B7A4', '<p>case与default没有顺序<br></p>', '0', 'FC8DEDFB10BE4BDF96606C3AE28D3980', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('55501EBA8D7D4E3E8FCC022D3E6150C0', '<p>a=3</p>\r\n', '0', 'A533FB795BFA49E3BBE3BCB8FCA32EC2', '2016-01-05 10:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('557A04617E9648A38B79A60827873C10', '<p>FileReader<br></p>', '0', 'A2666A4C84B147AD8609D748CA52EA04', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5593A6D3B9BA43CC8DD4A993B98B6E60', '<p>0b00000111<br></p>', '1', '8E7722FDC1E1400588AAC2FFC69316B1', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5595361F8CA347BAB02CEAC2860289BE', '<p>override<br></p>', '1', 'D1BA325130EA460F85F8E56D4406A40D', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('55B65090B53148B2A3A9FD4B1404165E', '<p>InputStreamReader</p>', '1', '1F61674539B34419942625A04F4AD41E', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('55BC5BC5938746FD9A397EBF36EB81EE', '<p>控制台第四行肯定乱码<br></p>', '0', '26E774C543914673B7AB71AB09B53885', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('55D3E20044D6484DAE72156C99F34398', '<p>十进制<br></p>', '0', '33F17F63850A47328FE0DA143089B374', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('55D5D3270C1C4127A0631AB929461F97', '<p>zi&nbsp;method&nbsp;zi&nbsp;show</p>', '0', '37F2ECEE038043979CE8C2DA2E9105DE', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('55EB42589B074EE8BB3CC5FA8ED632C3', '<p>输出结果 489<br></p>', '0', '6E42BEF6CEFE44948D4E7E5A6D3BC0CB', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5609C619266046D88A2920FDC0C53AA4', '<p>6</p>', '0', '47F0A171A3524570A88D5B5DC293A113', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('564BC3F59D374F16907FC5C5B7AFE5FD', '<p>15</p>', '0', 'E24407A59AA44399846B7A85F760C4F5', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('567EBCA1585944218DD26758DB72A7B2', '<p>通过Class.getDeclaredMethod(方法名，参数类型列表)获取私有方法<br></p>', '1', '30A3D30DECD144BB97AA52A01513D6A1', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('569D500AAC794DD6B898CFE59FC4141E', '<p>编译报错，同时发生并发修改异常</p>', '0', '1083B83DE4EE4DC4A824866A1BB7C7AF', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('569F1FE3F35F4F0A81D73B7358D41387', '<p>true &nbsp;false<br></p>', '0', '54EE8161EB9D4BE4B957C6893CA832C4', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('56C01E70B9414D7EA7488D378EFB5BFF', '<p>必须实现Comparable接口<br></p>', '1', '6BF856C9C89F45229B4F4F1EAC4B4FEA', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('56C24A3765B24AAAB68F000F416D992F', '<p>Map集合的数据结构只针对键有效<br></p>', '0', '63008372A67D44D8894A04AAE9211AE5', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('56CEFFA8FC05473A89CCDD067F76D2E1', '<p>this可以调用父类的构造方法<br></p>', '1', '36E6EE66AE9F4140968D5FBCCB419414', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('56D212E082AE41F6A0A50976C7E64DBF', '<p>true false<br></p>', '0', '783E2928317C44178864F84BE2776A51', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('56E01F45CB0E420982D8419AC3462E82', '<p>为了在任意盘符下可以找到.class字节码文件<br></p>', '1', '631BE813DDEC40E6899D2779FA29F2C6', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('56E6E87C10194F46B3B37A9DF44D0888', '<p>StringBuffer线程不安全<br></p>', '1', '5594D4A74E104DF689D44CF630F808AD', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5703ACBBF3644E5D90553C6AE5C6BF60', '<p>int[] arr = new int[3]{1,2,4};<br></p>', '0', 'EC1D818F03CE4BA1B7BF389338A807A0', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5705B102935848E1B8352328BFBDFB57', '<p>Eclipse安装前必须先安装JDK才能使用<br></p>', '1', 'D41C9426C4BF4B33BE35AD5885478B07', '2016-01-02 21:47:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('570AA1F79C78465C9226643438D4A8D3', '<p>让这个类继承Comparator<br></p>', '0', '54EFE16BBF6641AA8BA77FC97085368F', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('570F42784C9E4E2489E6EF6C7D59CDB6', '<p>向数组中添加数据<br></p>', '0', 'E2525262D08243E38EADD4BF65ACBA41', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5729AB4151B24C138E10759C3F82A219', '<p>大小写可以随意(不区分大小写)<br></p>', '0', '6069A2B7B4654ED2985E41F0E40DC1AE', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('57484D3FCF5441B386A7D5335AC397EE', '<p>Student [sno=null, gender=男]<br></p>', '1', '71B1BD5CC78744DB82CE4AC38EF7D6AF', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('57548283443B4BA3871574A8E59A24C7', '<p>double</p>\r\n', '0', 'C1181970F28C464FA907CE713DCCA70B', '2016-01-05 11:10:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('575864D0AF1247DCBF671E50C94CEEB6', '<p>同步方法就是在方法声明上添加synchronized关键字，此时就没有锁对象了。</p>', '1', '474C9456A2D04ED29D8C2EDCA8B46124', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('577276EE54A848F29F8CCDA33AD9C5CC', '<p>iterator()返回值类型为Iterator<br></p>', '0', '6E1A4BB1FD7A4AB98612C6AD883EC55A', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('57885CAE8A72482893162D84E23F7116', '<p>bbb<strong></strong><br></p>', '0', '807293A3E5584E6FAD4E4C5A9C3E9E33', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('57DD53F265C642B39DDE115DD0DC4A90', '<p>&nbsp;ObjectInputStream<br></p>', '0', 'E0CBD172F7544F0B8F9967B9B6F41B6F', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('57E3A2F86007406FAF0DF53EB90FA9D3', '<p>c &gt;\'A\'&amp;&amp; c &lt;\'Z\'<br></p>', '0', 'FA85969CBD934CE8B667BC44499BC40B', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('57E6082218FD4B84AE6B2AE9C85B9012', '<p>输出0</p>', '0', 'E83B1C8FAA5D4B528EECE56AA955A34A', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('57E7D24F7B704ACFB2FAB062CFB8B95C', '<p>加法运算<br></p>', '0', 'AFC04DA743EE46A68DD50A0270409C36', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('580C255046EC4C6CAFFD27B519396656', '<p>对于int和byte两种数据类型运算，不需要强转结果就是Byte类型<br></p>', '0', '016E0619AC654B509E9F2741BD693EEE', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('580E5A2E1839426ABC665D3A81E9AED5', '<p>static</p>', '0', 'BDF906495C89420D8FE41DB2ABB35FDF', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('581653BA37454101BA472EBEAB82BC58', '<p>TreeSet要实现存储数据，必须Coparable接口</p>', '0', '1BDB4E7917E84F359A9EF2B8B9EEED07', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('58345C85B3204138A1AFFBC76B6AA5AB', '<p>构造方法是给成员属性初始化, set方法是给成员属性赋值<br></p>', '1', '597ABAF3641F4B9C9937466F38C1FEA3', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5851BF1124254B9AAE07A5D61677E86A', '<p>x != y</p>\r\n', '0', '361AF02FB5F940C1865B9AA9DB7AA7E6', '2016-01-05 11:07:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5894CF75517441279BA433A32D6C6FF4', '<p>private就是封装<br></p>', '0', '90A84EEEF72F4854AAE28BAE929EFCEE', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('58A96D1865DB49B7A076039F3A346211', '<p>jdk是java开发工具<br></p>', '0', '677C00191B214420996DCA46B667519B', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('58AF48F737344DBE9688AAE5F2C13F92', '<p>自动生成getter/setter方法<br></p>', '0', '24CDF9D0EEF14C1BAEA0F6175302FFD9', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('58B729D8781F4EB2A5A1D9EEA3DACB09', '<p>for(int x=1; x&lt;=10; x++) {<br>&nbsp; if(x%3==0) {<br></p><p>&nbsp; &nbsp; break;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp; }<br>&nbsp; System.out.println(\"黑马程序员\");<br>}<br></p>', '1', 'EEFA517C04AE44C58F1FB91A177EB0BF', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('58C90EB90253447BB0CF45BED1D02C6A', '<p>00000000000000000000000000000010</p>\r\n', '1', '7D8C36B83A4E4A649927ECFAD783A997', '2016-01-05 10:32:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('58E8717BCA6D4A9898CC27525A814304', '<p>Java 语言是面向对象的、解释执行的网络编程语言</p>\r\n', '1', '8CC03243EAD84A56826C7EFF09FC7A5D', '2016-01-05 00:12:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5904CC90C48E4AC8A81827FEF616368B', '<p><strong>while</strong>(fis.read() != -1){ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br></p><p style=\"margin-left: 40px;\">fos.write(fis.read());&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>}<br></p><p>fis.close();<br></p><p>fos.close();</p>', '0', 'C4DB57BB99F24DBEB13E9519043321C2', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('591619F720C94A12B2C54A130622FAAB', '<p>已知Dog和Cat类分别继承Animal类，Dog对象可以与Cat对象相互转换，这就是多态的体现。<br></p>', '0', 'AAF09BCDE78740E69A4B4228C3CD9C15', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5926F9282A3E4A14A420205CE1B6DD8B', '<p>Comparator接口<br></p>', '0', '57854E20FA3D475EABD579CBB09CCFEA', '2016-01-02 21:47:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('594A0D7018A4427DAFCF807C236EF7A1', '<p>不能用来返回对象<br></p>', '0', '11AD8073BC5440578ADB14452E3D2094', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('598984E1A3C945B7863399E9EC10E8CD', '<p>toString()<br></p>', '0', '74AB41356CA14C88BFFE6D2188ED6E37', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('599D1BCA44074538ADEC3351D89DF9F4', '<p>Insert<br></p>', '0', '3E18BF9C7CF74C649891D16DEF8662EC', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('59B01FD789244D258FF4A3A9426738BE', '<p>RandomAccessFile<br></p>', '0', '7685C4AD4A094391A34D3511AE072F58', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('59B83BEB686F41DF821AB999D0B05866', '<p>toCharArray()<br></p>', '0', '6D28595A62734E56AC3C6B291A789DD0', '2016-01-02 21:47:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('59C81BF52A5947D4AF3DA09FB80CA0E7', '<p>getOutputStream()<br></p>', '1', 'DE9B7F867EE2467AAB50F96A440F3D06', '2016-01-02 21:47:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('59D7101695C9495F99AAAE1FC6B75486', '<p>用于给类进行初始化，在加载的时候就执行，并且只执行一次。<br></p>', '0', '5C1B8766AA0849039A4E25E64A8B5BD9', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('59EE28C2069C4AD6B26B79F456902F87', '<p>如果要把数据写入一个文件中，需要创建一个流对象<br></p>', '1', 'B9D64DEC92674AEEB98A1D34C9266E16', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('59FA61560B3C4F1A8D84E1DCB6689116', '<p>break可以跳出指定循环<br></p>', '1', '86F3841E6C6945C4B90EE3FD5BE6E2F9', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5A287A2CA61145EC915A043A73DB59BB', '<p>静态修饰的成员可以被该类所有对象所共享<br></p>', '0', 'D7983AD07843499CA3148A18146E6198', '2016-01-02 21:48:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5A3676CACE7046D397979094AF9FF340', '<p>Eclipse是一款免安装的IDE<br></p>', '0', '0D9A8E62FBE541EBA102263994E43699', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5A48A53AE38043E0817DC0FC7AD57003', '<p>编译报错</p>', '0', '73047572C7644AEB8FC9503F8E65DCA9', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5A5ED6C6008B492AB433CBB71E5E693D', '<p>类加载器会把.class文件加载到内存中，但一般不会创建任何对象<br></p>', '0', '29E5BE4B7C294A9E8F4E9F6C0FE7A0A4', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5A8C45EEC7234CA0A2104DFBB7E705B6', '<p>21</p>\r\n', '0', '215BD317DDEF4C5E8E79B264460C2CC2', '2016-01-05 11:16:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5A9E18418B784B0294F951842A8E40F1', '<p>枚举是一种特殊的类，因为的它的对象个数是有限的<br></p>', '1', 'A3C61268AFA4459383DE274E8FB3F6AF', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5AAC217399B4429B93A0AF90E80C69B8', '<p>超出int范围的整型数据<br></p>', '1', '91E0524D0BCF45A0BE1B8C8D312DECD3', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5AAE9AFEFC5B42FBBCF8D75B21709BA7', '<p>提供了排序，查找等功能<br></p>', '0', '4393D62D0D454BCD82440A6A510CC6CB', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5ABD23506974438EA07AD3C9A91A1E1C', '<p>表达式3用于决定循环是否应该结束</p>\r\n', '1', '9B5D75894C81487EA56A9955B9159CEF', '2016-01-05 10:29:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5AC03B9510E0430495EFB6FF46BB512D', '<p>String&nbsp;line&nbsp;=&nbsp;sc.nextLine();</p>', '1', 'A7C50291240940ADA8D491315993CB51', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5AC77D3094314B60883B783CB137194E', '<p>0</p>', '0', 'CB33FE5453DB4DAF895B84281A6C87D1', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5ADFD11005C043F89C9CD2E434457A4D', '<p>copy()<br></p>', '0', 'C95F3BF8FFDA49918691CE4261CCE135', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5AEB6277CD164C4FB8E9E3BC5C0221B5', '<p>Ctrl+O(字母)快速打开类中的方法<br></p>', '0', 'A02BDEB5F5CF41BDA3FEF20195D15152', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5AFB462190824A7F9A9618487C25DBF3', '<p>输出结果依次是 \"Hello03\"，\"Hello04\"，\"Hello02\"，\"Hello01\"<br></p>', '0', 'E044C868B30B47DF8E38653F878C0DD7', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5B04B528A6214A6697E5241513422934', '<p>&nbsp;一个源文件中只能有一个公共类</p>', '0', 'D2B57A01A9774F96A298B625391C427E', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5B1DE0074D1E448E9C7C48E75F5747B0', '<p>外部类可以直接访问内部类的成员</p>', '0', 'C04E8836D56E49C2B5A46E3CCC2CAE7F', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5B3B613E2CA543F592576630CF5A4FB8', '<p>141<br></p>', '0', '611C81A51D714D5DA29ED4F5F25FEE60', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5B4FAF3606CB49BA914B367805454E6C', '<p>③④是重载<br></p>', '0', 'DEF376AD9E24405AB29FF39D5CCF73B6', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5B858B680C8247BC9030FD306CFD6EE0', '<p>基类<br></p>', '0', '58F85976654D4BBA9A70FD3B3AB6F5B7', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5B904B745EAE42BF858E8BA2F75AED24', '<p>31</p>', '0', '47F83E0A130743B7A82307BFB89CDC48', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5B9682510374466A9D41020F76B57C27', '<p>接口和类的概念是一样，用谁都可以</p>', '1', 'FE9CC184031F458CABB4A3434A9C2438', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5BAD53DD8F824B8D9A359A06D1012A2A', '<p>max0arr.length<br></p>', '0', '6CD4C3C27C6D4C5397750224CBD9E238', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5BBBAFC53BD8451E8002BB54C8443C26', '<p>字符流在读的时候会将字节转换为字符,在转换过程中,可能找不到对应的字符,就会用?代替,写出的时候会将?转换成字节写出去</p>', '0', 'CAEE6E9B693D4C5492FCE7A7623C18A1', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5BF8D910304E41C099400A2DC00B77DE', '<p>public Student();<br></p>', '0', '7BA35BA1153E474BABD07743349B7666', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5C274F66D7E0455A9622D7498E1DDF3C', '<p>in()<br></p>', '0', 'FBFD600345C746128474DC1110091CAC', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5C3021760C184B7883BAC0D18B42BECE', '<p>userName password 1<br></p>', '0', 'D4DE6C245A9440E7A684062758C9C347', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5C42150F6EA849988E9331EBF8F25699', '<p>数据不可靠<br></p>', '1', 'F1AFAEA79CC340B2B2BCC378C0F81379', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5C44B94B2B5946EC94C2EFB05DF3FBD9', '<p>false true<br></p>', '0', '0410F6FBDC46487E961BF860ECEF3FAD', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5C577CEDB2E944FE938FF24E5314BB47', '<p>删除工程不能从工作空间删除<br></p>', '0', '47059212E46F4BC7BBB09F587418328E', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5CB0C50AC5F44E1B9FB215A196C0DC67', '<p>即使存储的类已经定义了排序规则，依然能够在TreeSet构造方法中传入临时的排序规则</p>', '0', '18956523012A47378205856CFB075AF9', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5CB72367C3AA4DC3A68E904D166292E4', '<p>5</p>\r\n', '0', '7D8545CB8A29471C93117419881D2264', '2016-01-05 11:03:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5CBF3541F6B2424F922ECCDE62DBD1B0', '<p>TreeSet集合比较器排序是在比较器中传入一个Comparator接口的实现类对象</p>', '0', 'EBD6207FD03840779A2B1F3FACF35868', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5CCCB324727B4B85ACC0CA49FFC7ACAC', '<p>97<br></p>', '0', '09250F5FB1EB4C31A84BCF7665381BDC', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5CE0B2AD572D4B19801C29420D90D833', '<p>OutputStreamWriter<br></p>', '0', 'A2666A4C84B147AD8609D748CA52EA04', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5CFB0C236F18481093D2763A7A115D17', '<p>必须实现Serializable接口<br></p>', '0', '6BF856C9C89F45229B4F4F1EAC4B4FEA', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5D100E936C114892985DBA0DD478DEFD', '<p>成员内部类可以直接访问外部类成员，包括私有成员</p>', '1', 'F9F75F27924C45FE8FBA6ED8B067242F', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5D1433D7C293413FAA6F3165C9F24B78', '<p>double a =10,int b = 20; a = a + b;<br></p>', '0', 'BBA6C034844F4D2A94B5E112DE0EACDC', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5D25724E579C4A1C8ABCA9DB964B0194', '<p>不是抽象类</p>', '0', '036DFCF4B15C42B49C06007CC9F18310', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5D370D5F03BE44BB822474EF114104DF', '<p>jdk里包含了jre<br></p>', '0', '6DCE6229ED1C4EE2A7E672038B81E499', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5D5151067A3749B29DA17B64ABE7DB19', '<p>导包需要用到import关键字</p>', '0', '55B079B9F7D04073886498471192E889', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5D5B36DA5A124B378AF766FEF0082713', '<p>Comparable</p>', '0', '0C5CBE3D8DDF46E281A0862052AE8890', '2016-01-02 21:48:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5D7436ECE88C4A6094B0086339EFC78C', '<p>当光标放在代码某个位置会有悬浮框,能够通过设置取消<br></p>', '0', '463A6CDC865A4AFC8944ADE30CC4B04A', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5D78CAB815EC43C5853DF917648F6F42', '<p>在DOS命令窗口输入java<br></p>', '0', 'A641933B25CF464988436B71CCC23832', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5D88EA3CAA984CDE875F8F14A68D6BD8', '<p>System.out.println(10 ^ 10 ^ 10 ^ 10); 输出结果为10<br></p>', '0', '337556C3125C4549BF2B6D566AC19D17', '2016-01-02 21:47:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5DB25B44D9494E058FE2DEB0C45B40BB', '<p>15<br></p>', '1', '18DAE8B524B54C2FA88584881049C063', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5DCA420CCFCF490E83354FD1DB0902D1', '<p>size()<br></p>', '1', 'D05C0D691F944D1F9968D276C41994D5', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5DCBF08C11F142188F9B920BB6FA8F96', '<p>增强for循环主要用于查看元素</p>', '1', '33DB913298C2472387874A34A2896192', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5DCCAFA5ACBA4183AFDD65C6F970E60A', '<p>定义在类上的泛型信息可以是&lt;QQ&gt;</p>', '0', 'B4D4DDE23A774B88B59CD3AAF6AC50EE', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5E1500A4A81147F189B0654BDA358629', '<p>开始--搜索程序和文件--cmd--回车<br></p>', '0', 'D012244D06BD4C368EF64A55C01285F9', '2016-01-02 21:47:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5E2293A89DE04693B48AB495BD708327', '<p>编译时将产生错误</p>\r\n', '0', 'FBC5C3D0FBE747D99EBCCA018866C469', '2016-01-05 11:04:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5E418DBFA2F340BA9B0B61CC0A2EB05C', '<p>方法名相同,与返回值类型有关,只看参数列表<br></p>', '0', 'F1B12BA5A25E4B24AF72821832579E3A', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5E57AE468C274203883FFDA24239A286', '<p>1</p>', '0', '705874FDB44C420A8231A237E1DC37B2', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5E7809E32926462D955C4FE10508FC23', '<p style=\"margin-left: 40px;\">if (arr[i] == value);<br></p><p style=\"margin-left: 40px;\">{<br>&nbsp;&nbsp; &nbsp;value = i;<br>}<br></p>', '0', '227695A9EEF0493CAA09E454222BC69D', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5E88AAB0B09E48FA8814F0840D549EB4', '<p>finalize是Object类中定义的方法，用于垃圾回收，由垃圾回收器调用<br></p>', '0', 'CF14E6E17877442E9724C74A118A9D95', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5EA9144B030C4F5D9C0C948025967740', '<p>720</p>', '0', '0025D65731D14DFF95E7955327D0DC27', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5EC0A45C3D6B45D390F4E3921F559DA5', '<p>final&nbsp;int&nbsp;num&nbsp;=&nbsp;10;</p>', '1', 'CFAD69DD0D5049CA8C1349C029A0514E', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5EC126A75D9A4324A642DDB9046B73BF', '<p>注释只在java源文件中有效<br></p>', '0', 'E490CDF3A39043E690E3240AA06BAB4A', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5ECA04823FF44E6782040396A5768278', '<p>增强for循环用于修改元素</p>', '0', '33DB913298C2472387874A34A2896192', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5EDBE62FDFDC453C88C4576E1D41B21E', '<p>arr[3]元素存储在堆内存中<br></p>', '1', '64757B20D9704DE8863EB18005700F1E', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5EE50953546A4FDFA99D7FDED25BFA31', '<p>0</p>', '0', '3493B4F1F3264C0DBD67F03CC3BE19F2', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5EEE8B804B3944B9993459D753CF50FA', '<p>①④③②<br></p>', '0', 'F703041585B24DD19CA1C1AFD7B5CDEB', '2016-01-02 21:48:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5EF926C988FE4EA29B65B67466F21460', '<p>定义2个一维数组<br></p>', '0', '1ABFBBEAB95D4470ABCAC064478915D9', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5EF9AE3603DC4623B799DFDAFAE094DF', '<p>afcf<br></p>', '0', 'F806AC447DBC45629E104EA8150E56E8', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5F2904E943CD4387A86E517E5EAD6072', '<p>if后跟的比较表达式的值一般为boolean类型<br></p>', '0', '6801C0F41E3C422A8D4E054B17ED5250', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5F3B4D1A619F4F008C5DF4685E19E94D', '<p>read()<br></p>', '0', 'EAFBB0FAF40346CE8DDE217B235265AA', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5F41F10A67AC477996FE9C01EBDCC192', '<p>在DOS命令窗口输入javaw<br></p>', '0', 'A641933B25CF464988436B71CCC23832', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5F54A98C26504ACAA2E5039F66EF7AA3', '<p>静态变量存储于方法区的静态区<br></p>', '0', 'A1F97FE0127F45279961F704D6E70431', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5F54AEABBFB044AAB8336773B08684B8', '<p>ABcE<br></p>', '0', 'C7B29698CF024DB19EFC09C7E2BBA8C8', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5F5982BAB46F4C60B4755E63EE48CF47', '<p>1<br></p>', '1', '45C35EF208D84B21A0898129B87180A7', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5F5A872E12EF46BC9FBE7A56EB8EACF8', '<p>属性必须是基本数据类型<br></p>', '0', 'F6B45AA6D1AD4A4A82C0DA620C638610', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5F5F687F21C04B9DAA2F973BE6130C2E', '<p>每一行代码都要缩进<br></p>', '1', '59DC01D2DDD7479DAAA00AF27A2A9201', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5F6A428039CF44BC991A0B45ED08AF01', '<p>Collections是集合的顶层接口<br></p>', '0', 'B24E9C9EAB734CF0807C1D219DA66CFA', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5F7387ED1FE84838BE6BF5716FC0213C', '<p>HelloWorld<br></p>', '1', 'AD49D486EFCE47DE9C06F8A847DAD05B', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5F81D5A9510B48979B66EED07A235B85', '<p>将单个字符转成整数<br></p>', '0', '486BDBB1E1774281923B41E3971B85D6', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5F8FA535CE8D4CC98EBECE91D8A74A3F', '<p>反射机制指的是在程序运行过程中，通过.class文件加载并使用一个类的过程<br></p>', '0', 'F11B456C93F444F1A347EA1E79E7FBC7', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('5FD9CDF8ADB9425EAD3FE620FCB01486', '<p>web: 8090<br></p>', '1', '8827C46562E9440BB80871F6406C8135', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('60008749EB2F43DF92DCBC347997C537', '<p>得到图形：<br>*****<br>*****<br>*****<br>*****<br></p>', '0', 'DA5004A928AF4E9282094B04A3D69C22', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('600A8DEC97024FF5A628CB0C2662C5BA', '<p>Runnable接口</p>', '0', '57854E20FA3D475EABD579CBB09CCFEA', '2016-01-02 21:47:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('60138710D6234FA4BDB6E9345F8447B2', '<p>for (int i = 1; i &lt; 5; i++) {<br>&nbsp; for (int j = 0 ; j &lt;= i+1; j--) {<br>&nbsp; &nbsp; System.out.print(i);<br>&nbsp; }<br>&nbsp; System.out.println();<br>}<br><br></p>', '0', '192E56F8066E4D729E98AC1E1890AF1B', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('601B2AAA0A894A50AE3FB0BA64E6B53D', '<p>for (int i = 1;i &lt;= 4 ;i++ ) {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;<br>&nbsp; for (int j = 1;j &lt;= 5 ;j++ ) {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp; &nbsp; System.out.print(\"*\");<br>&nbsp; }<br>&nbsp; System.out.println();<br>}<br></p>', '0', '620E82A73616435F840F499748915126', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6040262D6FD5416492448E7ECE739467', '<p>多态是类与类之间的关系，与接口无关</p>', '0', 'F61953694CE24E6B99668FCA1FE615BC', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('60616E1EEAFB4F7C9D86435DA53FC1E8', '<p>arr[3]的值是null<br></p>', '0', 'AD39D5C392CA47D78330CD05001DC279', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6091603447414FBA88E5914503FC7758', '<p>键盘录入的数据可以保存在一个变量中<br></p>', '0', '336BDAE1204B458EB770E6667344FC24', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6092B4E37CA14666B3156CB049330AEE', '<p>Vector是一个抽象类<br></p>', '0', '9BA87153A4504A72AA7F8F8AE1E0CD1D', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6099B95AD39C49A7B00D082F2D5F080A', '<p>List子类对象可以存储学生类对象<br></p>', '0', 'D38D5E17D79C4BB7BA018C0FC93996E3', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('60A157DE2A5C4440822C4D66D020D7B3', '<p>编译报错</p>', '0', '676B826E86E54EE8B1DDDC8FD190BC74', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('60AFB232A4FB45C1834766A30F79AF5F', '<p>上述全对</p>\r\n', '0', '08422B7E8F8A4CCE801131A62FCFCF6C', '2016-01-05 11:09:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('60AFD87261414A7985EFF0179300E57A', '<p>运行报错，因为锁对象未初始化</p>', '1', '9E1D64F685E34B92A4103F1211B4B95A', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('60C45BDB6109494E8692ACBB83B42E10', '<p>第一行会产生编译错误&nbsp;</p>', '0', '88941271C47C4408B48FA4E74607536A', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('60C5F249661B44C6A81E784AB479EBA5', '<p>son</p>', '1', 'AA12F39BE1944F0DBA3C9E853C92CDB6', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('60DA3E3BFD424D2C9F9B7C87399AC210', '<p>断点可以帮助我们快速查看该条语句的执行结果,断点之前的语句将不在执行<br></p>', '1', '76B5E33B8CAE4BFF9AAB27B328F99122', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('60E0C32585554131978AC3AAB71A1138', '<p>Error类<br></p>', '0', '33161A15F3F841D6AD885A853228FE9D', '2016-01-02 21:47:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('60EB3EF095044CF09488468AF36F0B1E', '<p>通过new关键字调用有参构造创建对象<br></p>', '1', 'B424AB1C98294BDB894AEE8C540FE96B', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('60F7AF6B94D447E7B8DA5ED42C7C5D81', '<p>void<br></p>', '0', 'AD49D486EFCE47DE9C06F8A847DAD05B', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('60FC16D9BFEA4A42BF9EC04D1B24BB6B', '<p>for(int x=1; x&lt;=10; x++) {<br>&nbsp; if(x%3==0) {<br>&nbsp; &nbsp; continue;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp; }<br>&nbsp; System.out.println(\"黑马程序员\");<br>}<br></p>', '0', 'EEFA517C04AE44C58F1FB91A177EB0BF', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6115E028DEAB4BFFA479711D5231D668', '<p>-1</p>', '1', '705874FDB44C420A8231A237E1DC37B2', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6126368A96594903B58B428ED240CE00', '<p>equals()<br></p>', '1', '905526DA178944C08A4FD5638923A5E1', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6136C46D81744925864B3C62DA600AE4', '<p>Inner&nbsp;oi&nbsp;=&nbsp;new&nbsp;Outer().new&nbsp;Inner();</p>', '0', '748BEB1A7CC144BA88388F9AE6534C6A', '2016-01-02 21:48:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('614C3B3116124ED1A333B2C1196786AF', '<p>Throwable类<br></p>', '1', '33161A15F3F841D6AD885A853228FE9D', '2016-01-02 21:47:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6174230A3B194B41942C8366C2FB28A4', '<p>Set集合都有排序功能</p>', '0', '7D9D826A9FC2477AAD979030DC8F76D2', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6190040B28FB48DF9465339DBA7755EE', '<p>以上说法都不对<br></p>', '0', '4710BBC3C4474A9687DC8788182F67B7', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('619284DF31064A9F88FF51FA2E2EC17D', '<p>如果是false，程序执行语句体2<br></p>', '0', 'D909E65D60F44C7B89EBCD3F65C1B5F6', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('61AFB5142754477F8B8CB936BAFE9099', '<p>list集合可以存放字符</p>', '1', '65135771ACA245C1969ED16F8AF18C3C', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('61C7DF237153474885FE990EA4C52D24', '<p>以上都不对</p>', '0', 'A22444E251D24147A203939C7CF24DD4', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('61C8438C81DE495BAB472850230C9199', '<p>iterator()返回的是Iterator的子类对象<br></p>', '0', '6E1A4BB1FD7A4AB98612C6AD883EC55A', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6246A8B49B1C40CC82BD897A43C095F1', '<p>final可修饰类、属性(变量)、方法</p>', '1', '267C44DEC8724C72BB1700B9C3B8FE2A', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6248516AD2BE440896EB20C7CB9E6EA5', '<p>Set集合都是需要去掉重复元素的,&nbsp;如果在存储的时候逐个equals()比较,&nbsp;效率较低,哈希算法提高了去重复的效率</p>', '0', 'B61B6856D1C94CD7B2E67FE31B36606F', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('627353214CE94F96BE19AC687054E3B8', '<p>equals()<br></p>', '0', '7A08FE2B04404496B27C9CBA0CAAC095', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('627396C25CD94AB38C967ABFB79B072F', '<p>40</p>', '0', 'E279B9ABBE7D4388B25EDB69A3610DAC', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('628C05FB955B43388682C4B346ADC839', '<p>该接口里面有常量<br></p>', '0', '8359E963825544A9A9FBEC370ACC95B8', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('629068B7E1E3421A8A0CEE459A25EC21', '<p>private是权限修饰符<br></p>', '0', '8548169EABB5482581E0E7670DBE74E9', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('629EA0C09CB349AFBFE614EA6DE27FB1', '<p>d = null;那么d1也会是null<br></p>', '0', 'DD3CB7FE0943492EBD0EC6B87478A802', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('62A9250F87874E5BB160AF76BFD99A6D', '<p>11</p>\r\n', '1', '215BD317DDEF4C5E8E79B264460C2CC2', '2016-01-05 11:16:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('62ADB0432C7148738EF2B1E17F71E424', '<p>查找某个类中的方法时可以使用Ctrl+O(英文字母)<br></p>', '0', '523FBB764ED8414C816C9C437824DFC3', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('62B1FB29CA3C46A8A5333F1115E84660', '<p>0<br></p>', '1', 'E38D396B8E074D408FD29D50FAE5C90B', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('62E5B47C0904436A9A64D45645285A36', '<p>抽象方法没有方法体</p>', '0', '91266B7CA73B4612BFB1D9F28956C1C9', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('62E7E3661FF4426A8D0E5C2D301C91E6', '<p>3.33333333333335</p>', '0', '49CA866471104062BF3BAECB782992AF', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('63129DB10AF3498397E0EBAB573BE584', '<p>getClass().getName()+\"@\"+ hashCode()<br></p>', '0', '75E4611404A84B718E5FDA55092FF074', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('63166FDD9C154A3F92C35CA9E6818087', '<p>定义泛型类时，直接在类名后面加上泛型信息</p>', '0', 'B4D4DDE23A774B88B59CD3AAF6AC50EE', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('633235E955C94F2DB9F4C0878E746923', '<p>void&nbsp;aMethod(){}</p>', '0', '6DDC9DBD20474961BA8433E665F28363', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('633B864CC39247C09052C0B934F20215', '<p>arr[2]和arr1[2]属于同一个地址<br></p>', '0', 'AE1170F6E882483EAE0861501243FE82', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('636339F4947A40A59EA25712ED30A059', '<p>对象是类的抽象<br></p>', '0', '21A75707C7904D10B947EA894C964F17', '2016-01-02 21:47:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('639A23CC7C804C048745588632513030', '<p>包也是封装的一种体现形式</p>', '0', 'E370201C092845348D435F665804D228', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('63A68191569947B68CD33D768A3600EA', '<p>增强for循环只能遍历集合对象</p>', '0', '33DB913298C2472387874A34A2896192', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('63AEC9D35F7848B5980885C17F2259D5', '<p>以上都不正确</p>', '1', '43EA319D8CE04500B43BB2FBA8B36C0E', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('63CD701725EB4F628D98443A86AB6577', '<p>arr[0][0]的值是0<br></p>', '1', 'E092B7D678094144B90707B4288ED5F7', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('63F732F604B14C57BB40D9B1793A35CA', '<p style=\"margin-left: 40px;\">int temp = arr[i];<br></p><p style=\"margin-left: 40px;\">arr[i] = arr[arr.length-1-i];<br></p><p style=\"margin-left: 40px;\">arr[arr.length-1-i] = temp;<br></p>', '1', '14F36999518642BB88E0EF9BC295CB74', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6420684496E340CDBB2C2DACE65796A8', '<p>如果在方法中未传入参数，该方法不会造成其他线程等待。</p>', '0', '7C6F9571B707408B906A9BDD1B07BC63', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('642F92FE51F64527B9A957554CF3BC5A', '<p>StringBuffer和StringBuilder都是线程安全的<br></p>', '0', '93CEA6E6E93541848B24BC750E0EF9E3', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('644CE9B8C6764DED873494F59E8D11C0', '<p>public StringBuffer replace(int start,int end)<br></p>', '0', '78BFA4A094004746B07D8F7ED682B30C', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('645343EC134F469A840DB4A730432F2D', '<p>1 &nbsp;-1<br></p>', '0', '99438713791F4BE5B06AA1C51F25A1E4', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('646DEB07EA194281A4BE13CFAA1DF973', '<p>protected<br></p>', '0', 'B1E63AA97DFB4DFA97A5940294394DAA', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('646FB8F10AFF4B899E133319F3328098', '<p>字符流在某些方面比如图片的处理，比字节流更方便<br></p>', '0', 'B9D64DEC92674AEEB98A1D34C9266E16', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('647FA3F7A14347A1B9AC257393DA89F9', '<p>Ctrl + A 全选<br></p>', '0', '94A2B826758B4D8C86E3EC7C5174342A', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6488C4447F8545DB82EFCFFC7273072C', '<p>断点加在哪里程序就会暂停在那里<br></p>', '0', '76B5E33B8CAE4BFF9AAB27B328F99122', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6495F9658D66496F9A14D5BFD74FFB7F', '<p>private</p>', '0', '45240CAAA08A471F984E11DF7D191CB8', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6497C9E679434950A789C7E0251E3E84', '<p>月中的最后一天<br></p>', '0', 'C090E3279C78499FBA2C55109E996B79', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('649E8944CFAF4E1687C92F6F4BE491B4', '<p>num,&nbsp;this.num,&nbsp;super.num</p>', '0', 'B3567B790AF24592BE56FD26425BC8B5', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('64BF4FE5FDDB4DF9827F5D380D31A611', '<p>&nbsp;d = null,那么new Demo()在堆内存中就是垃圾<br></p>', '0', 'DD3CB7FE0943492EBD0EC6B87478A802', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('64E2BE843A324C61B1A664C4A8000FBD', '<p>arr的长度肯定是3<br></p>', '0', '64757B20D9704DE8863EB18005700F1E', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('64EA399A18394B959B11AC285BC68829', '<p>以上都不对</p>', '0', '82A6C18C22BC4ABD853B2791C91EEA8C', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('64F195C47AEF4E83BA4BAB92BCEEF925', '<p>每次new arr[3]都会在堆内存中开辟空间<br></p>', '1', '82D8B52B82CF44E6AE7EA66A24C6A7F5', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('650A15B5416344498DEF5658FF8F8454', '<p>false false<br></p>', '0', '24A6885B91CB4F26A77FD0A15FC87CC2', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('653374EC6F42462A8F6EEF62356CDF03', '<p>是abc的整数倍<br></p>', '0', 'E3074074B0594D58B0877A11149B5156', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('653DE4B99EFF4EFBB36DCDC9C710FFD1', '<p>利用字节流拷贝<br></p>', '1', 'F038CBE9AC384DFEA52E7CA1D0712416', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('653E9A8AADAD44C1B372F2329029159D', '<p>ByteArrayOutputStream是往内存缓冲区写数据的字符输出流<br></p>', '1', '2B1328117B79429EBD1E9D91D4ADDA0D', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('655AD14268C140828D78ABDC5B2A909E', '<p>它是一个抽象类<br></p>', '0', '18753E1650F441928BBA0651272ECBEA', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('657116BE686E4520A12CE77C5F7EC9A1', '<p>是线程安全的<br></p>', '0', '39B854F1E4634F71A42EA97AFC1DA370', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6584536446AA440095E95CEF96CCFE4F', '<p>对象锁在synchronized()语句中出现异常时由持有它的线程返还</p>', '0', '6862677813E9439F9BB235FE0C983BBF', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('658B60BF12974CA980778944BBE29B4A', '<p>不需要使用多态可以直接创建Date类对象<br></p>', '0', '42C225CF6FAD46BA95AF3285E380BA0E', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('65DB0D024E574D98807DFF6F4B06FEBF', '<p>getCharAt(int index)<br></p>', '0', '68B2BC19D7FB4B349E744A7044540A0A', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('65DBC571618148859D7CBBE358DE8A8E', '<p>ClientScoket<br></p>', '0', '8AE3D46240074A02B35AD25E2286C158', '2016-01-02 21:47:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('65DD4ACB62344E52ABFEDA9079C86399', '<p>Scanner只能从键盘扫描数据<br></p>', '1', '10DEC256C8D84F0EA9EDEB62BCBE01D4', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('65DF2956C92846018AC7F3A6EE431837', '<p>path环境一定要在用户变量里进行配置<br></p>', '0', 'D82E262D49964DA5BAD682A347609C27', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('65E12B305DAD4A009A9F21784158946D', '<p>i = 2&nbsp;&nbsp; j = 2<br></p>', '0', '25D9A255AF234A598AE8133A7FD59402', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('65E44F75EF664536875C510060B7A467', '<p>使用增强for循环遍历数组的时候，内部原理是使用普通for循环</p>', '1', '7BE991C876C44E74AAA4E5A61C955A61', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('65F614376E25475B88305F1E6F19903A', '<p>父类中私有方法不能被重写<br></p>', '0', '1F249CA9B969470A954470FD62CB2F34', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('662A4A5065724C2FA30E94B2AEE6E747', '<p>编译错误<br></p>', '1', 'D072049C8C034D4491432EA58735B4C3', '2016-01-02 21:47:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('663B42A27E6940FA9F048A09EEF4824C', '<p>FileOutputStream fis = <strong>new</strong> FileOutputStream ();<br></p>', '1', '20BBF6F03B8A472E8760EBBAF805B700', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('663E166B32C54E9581BF19E7AEE6B16B', '<p>静态修饰的成员变量和成员方法随着类的加载而加载<br></p>', '0', '6194C4C981614D31BB6573E45C2AFCFC', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('664E3BFF8DB34692ABDC85AC859BE4C0', '<p>10个<br></p>', '0', '73EA9A4A062D4C5991A587536E982FA8', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('665BD9FDFAB14FBDA54407CDFCF31FB4', '<p>127</p>', '0', 'C6A225B19F4D45599BC79D4C66D1B27F', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6673D9BE0038430D9B478466F4BBC9E5', '<p>定义包需要用到package语句</p>', '0', 'DB704B6ADA424AA29065E34D55EA8425', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('668514B9F9DB4A5B86F557F714E60256', '<p>&nbsp;public&nbsp;class&nbsp;MyRunnable&nbsp;extends&nbsp;Runnable&nbsp;{void&nbsp;run()&nbsp;{}}</p>', '0', 'BA3977A084B145A5BF09684B51B62246', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('66961036C3084B10B14C71C229673260', '<p>代理模式是一种设计模式，所以实现代理模式需要我们自己写代码，JDK没有提供代理模式的案例<br></p>', '0', 'C0929634BB674A9E9A47634EAABA044F', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('66DE53EF680B4DA8BB2E2A0B195F688F', '<p>5</p>', '0', 'BD4CA8CD3EE44A24B3F1C1B019FFD1AE', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('66ECC6FD15F0441BA54DE969904C7754', '<p>二进制由0和1组成<br></p>', '0', '85AB0EC4D3364DCB891AA4EA2FA3C175', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('672E6D97931E4E2B8F0FCEA4AB66777A', '<p>char<br></p>', '0', 'A71138CFF2474222B8E54FF95DDBAFBD', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6759035A760D4A16A30D8A4ECA99A46F', '<p>根类加载器负责加载rt.jar包下的类，即JDK的核心类<br></p>', '0', '47910E17286646DD8E63E290548F5BED', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('676835D0BE5D4B7696525A913F49F30F', '<p>显示初始化<br></p>', '1', '85505AFAADB447C28986F3D5809633A3', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6770ABCE2DAE4EA1AA937647FF704364', '<p>for (int j = 0;j &lt; arr.length ;j++ )<br></p>', '0', 'D525B443A8604299A35D9F61CF559E3F', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('677FD22727254D6693D5C86C4CFDC02F', '<p>.java<br></p>', '0', 'EA62BBDB43914C7284978905E43339C6', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('67892A858AC3495A8AE67B3DDF221EFD', '<p>数组的初始化就是为数组开辟连续的内存空间，并为每个数组元素赋予值<br></p>', '1', '3D1A1274B7544CC9B107AD516C9EFAEE', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('67A635213A9540F78DD6D2B4C5D6A341', '<p>a&nbsp;b</p>', '0', '28FF3BF1E3524ACEA7D3ACD5025F4A13', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('67B191FD2B80416792B2F7D50E98FD8E', '<p>对象.成员变量可以被赋值<br></p>', '0', 'A6426E3458AD4C76BEB4892CF80C43FF', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('67B7A3DDB979466B90292305F098F150', '<p>md<br></p>', '0', 'C9C731E277614F7587CA1496206D3471', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('67C37A33A40745ECAA1E1A7D128E6729', '<p>false true<br></p>', '0', '9251C7A13D474CD28C7CB5E4E869441B', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('67C9CC9981E84072ABF72154548B73E4', '<p>minindex + min.length()<br></p>', '1', '6CD4C3C27C6D4C5397750224CBD9E238', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('67DC642DFA8E415D992DBAE47C430C25', '<p>3</p>', '0', '30C0DFD41E144EF790498E8055558384', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('67E7D48048324D13B38E3BE7E5976424', '<p>98</p>', '1', '156E866F773E4BAD84432DAF8EBA9C58', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('68009CD7240E4847BE98CAA032CEF84E', '<p>Date类中的getTime方法<br></p>', '0', 'A8134F8361D145AFBD23EE3D4F730B01', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6805298B3CF448C88C7DC55C4686A29E', '<p>单例也叫单态，就是说一个单例类只能有一个对象<br></p>', '1', '65A071C9BBFD4961A61AEE7FFBDA7E6F', '2016-01-02 21:47:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6808AF9B686C4B368D3106F3B9AFB1E9', '<p>BufferedOutputStream&nbsp; fos = new BufferedOutputStream(“copy.jpg”);<br></p>', '0', 'DED238E982B3409BA7E2767A01A90E29', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('680F8DDFAE33420292C565FCC22E8E58', '<p>不会打印出每个Person对象的姓名和年龄</p>', '0', '2419F299E0C745AC9D8916E8C248ED4A', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6817A8C4C10043139C0F63BA33A3A780', '<p>DataInputStream<br></p>', '1', '786FF8D3E04D43B08B08F3810BCE9E9A', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6845DC574982400FBC4DE372EA85BA78', '<p>256</p>', '0', 'C6A225B19F4D45599BC79D4C66D1B27F', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('684CD485F6604E7F9ABF9065B961E694', '<p>deletes()<br></p>', '0', '68B2BC19D7FB4B349E744A7044540A0A', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('686C6A2C3C4342B690DAED27898934E6', '<p>Collections是对集合操作的工具类<br></p>', '1', 'B24E9C9EAB734CF0807C1D219DA66CFA', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6886D9E453AD4B8C80A41A02545DE926', '<p>将LinkedHashSet类对象中添加到list的内容中</p>', '0', '678167F74A8242F682DAD56C6ECA1108', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6888DD936F6F495E8A9707FB18A20A45', '<p>FileWriter<br></p>', '0', '694054E43A514284AD1CE42B86917259', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('68A25C0C4C9B430781D6AFBC907E1F59', '<p>ServerSocket<br></p>', '1', '954F6308912B4238ADD722EC4CE2E16B', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('68B900AF2093403D93CDCAA8BFDF9540', '<p>发短信(sendMessage)是该类的成员变量<br></p>', '0', '6AA23DF2F0914A0394513EB052C500A7', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('68C9827E3C7A4283B0B2E71A017B478A', '<p>Eclipse的内容辅助键不可以更改<br></p>', '1', 'B3ABBD0FA917446B92F30996C5B1EE4A', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('68D339B7D85A46D3801536AFA8E8B816', '<p>*<br></p>', '1', '42F361196B7E460BA3B528C18EF58B75', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('68DF92CAE59F44F6B7A9CE914BD88FC0', '<p>for (int i = 0;i &lt;= 10 ;i++ ) {<br>&nbsp; for (int j = 0;j &lt; i+j ;j++ ) {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp; &nbsp; System.out.print(i + \"*\" + j+ \"=\" + (i * j) + \"\\t\" );<br>&nbsp; }<br>&nbsp; System.out.println();<br>}<br></p>', '0', '8AC88875E657410DB0ED8DFFD648A386', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('68F4B446E81E474A91931B11AD82CC4C', '<p>C++<br></p>', '0', '5DD25F2218824DC0A2E4E7A19AE9EF2D', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('68F641864CC1450C8959DCE49BD455F5', '<p>学生具有的行为是成员方法<br></p>', '0', '88B48617FD0D4665B7713D52AA670D39', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('68FD4CDC08DF437DBCA217226A83BA5B', '<p>&lt;=<br></p>', '0', 'CB85CC56285A4818B23686386CFED7BA', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6900E573C7D74BF49CC5ECB4111C824A', '<p>该方法会暂停当前正在执行的线程，并执行其他线程。</p>', '0', '7C6F9571B707408B906A9BDD1B07BC63', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6903E7972C4E485E87182E95B4605C14', '<p>如果Person类实现了equals方法，那么就会移除所有张三</p>', '0', '2D893DF5AD2D4BA38B380E261540BC4F', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('690783BB652D4F958093946137D15F3A', '<p>ob00000111<br></p>', '0', '8E7722FDC1E1400588AAC2FFC69316B1', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6913FFB928E34C4787E5380F4D79CD38', '<p>FileOutputStream fis = <strong>new</strong> FileOutputStream (\"copy.jpg\",true);<br></p>', '0', '20BBF6F03B8A472E8760EBBAF805B700', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('692A1E035E1C4954B5A504C56E2D221D', '<p>+，-，★，/<br></p>', '0', 'FEFAB71B3F2C499DAE2CA8076F1BC0E9', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('692D3653FCCB45DBBBA6A911A51418E1', '<p>多态提高了代码的扩展性</p>', '1', 'F61953694CE24E6B99668FCA1FE615BC', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('693113422E8E4F9AA30FEE146C7C76D6', '<p>局部变量不被初始化就不能使用<br></p>', '0', '6BD060F37CA8461E8BADCCBB01F5E5EE', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('693554187C974D7DB7E02654AD2FF46C', '<p>运行报错<br></p>', '0', '69F4B6F8166F4BFAA865CD6E16216B2C', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6947B2BB9C884E809FA6AF7F32175841', '<p>start</p>', '0', 'E48D6C8EE79F469E8142C778E0AC2466', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('694E6E90175D4970B3DBD257D7D2FA4C', '<p>可以将字节数组中指定字节数转换成字符串<br></p>', '1', '3594B84AFBE84CA7B5EB04EB744A0113', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('694E8CC3A0704D60BC551A96D1BC5991', '<p>③①②<br></p>', '1', '98846009C6134E72903DEECC3E04550F', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('694F2A7025FA421D80E028DD98C26BC6', '<p>泛型的出现可以把编译时出现的问题放到运行之后就发现</p>', '1', '2C416F37A6994C14B3D87C469DAC3D8A', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6958533DC2534CD595F8E37B814856F7', '<p>同一个类的对象共用同一段内存<br></p>', '0', '1FCE0BB2F27348CFA2D9EAB10980038D', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('69702DA12FB741DC880D870DBABDE79C', '<p>public int Student(){…}<br></p>', '0', '7BA35BA1153E474BABD07743349B7666', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6976DA172F1C41718F4D55B143D5487D', '<p>int x( int a, int b){ return a+b; }</p>\r\n', '1', 'C20E08B1A8874E14A662A03B51934758', '2016-01-05 10:53:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('698E4BB3040045F39B977796EE261FC4', '<p>将日期对象转成字符串<br></p>', '0', 'AA82F2ACF1A347EABA14B929590FC824', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('69A8CC6D996346A4AE41BC67D454812D', '<p>引用类型，是地址值不能被改变,对象中的属性可以改变<br></p>', '1', '68F041CDD39E4CA8B37588E30C716131', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('69BD5F042A1D4F559B8DB4853FC88000', '<p>return&nbsp;0;</p>', '0', 'A7BD754E6F6A4E4EADAA39E35EABC17A', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('69E2FFD516E84FB1A15D175BD01DBBCC', '<p>语法上使用import&nbsp;static进行导入</p>', '0', '80EC425FA3714F388A1197AF6EABB575', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6A000D7AA8734C5CB7F84E6074F2109B', '<p>多态就是指事物的多种形态<br></p>', '1', 'AAF09BCDE78740E69A4B4228C3CD9C15', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6A003127B512489DA4533A53D51F0C7A', '<p>两种实现去重复和排序的方式可以同时实现，不会影响代码运行</p>', '1', '8366C52BC4454EAB89F2B674A19235C8', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6A0CDEE1BC614065873AF3D01FA4F711', '<p>InputStreamReader<br></p>', '0', 'D5EA2CEE869A44D39A87EB4A3A49838F', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6A0EEF95F41143F280F5155C3F45ABC8', '<p>a&nbsp;b&nbsp;b</p>', '0', '28FF3BF1E3524ACEA7D3ACD5025F4A13', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6A116C008CD949658272061766C2498F', '<p>退出虚拟机<br></p>', '1', '250F9DE779A24CF591EFD2662443FF2C', '2016-01-02 21:48:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6A54E50C11514F7BBC4902C45948F753', '<p>false true<br></p>', '1', '5ACAC47FBE344D889A5C6E2C016B1153', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6A770D8B6787444AAF20F5B5071486F9', '<p>开始--所有程序--附件--命令提示符<br></p>', '0', 'D012244D06BD4C368EF64A55C01285F9', '2016-01-02 21:47:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6A78157B1FD5495BB33FDF360790C2D5', '<p>class&nbsp;Demo&lt;T&gt;&nbsp;implements&nbsp;Inner{}</p>', '0', '002959145FF740F19D81782709F7BE4A', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6A83E6C6B7CF41BF8D227D9CE28BADD5', '<p>Math.ceil()<br></p>', '0', 'C6645ED07E5E43D1B02026C53C642B76', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6A8D22101BF64448A901FE3E492757D5', '<p>泛型是JDK1.4的新特性</p>', '1', '717ED7B09938469192862B04A021AD62', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6A9511AC38DB406C8193120FBF588476', '<p>abstract&nbsp;class&nbsp;Animal{&nbsp;abstract&nbsp;void&nbsp;sleep();}</p>', '1', '44A49A9EF03A4EA6998B38348D7009DD', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6AA02CD029104BB285A37D6D1EEF5447', '<p>LinkedTreeMap</p>', '0', 'D61EA19FB199424B9CCDD97BD2CACAC2', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6AA138961B4E475B98F244CC27FFCA47', '<p>必须通过this指定调用父类中的哪个带参构造函数<br></p>', '0', '652C0A56A0BB40B493178CDD2B038717', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6AB69EFE91EE466AA33BAC833D1D2B25', '<p> BufferedInputStream</p>', '0', '1F61674539B34419942625A04F4AD41E', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6ACF44ACF62A402CAFFC8DCFEA69AB34', '<p>toString方法返回对象的字符串表示<br></p>', '1', 'E85D40CAE492434BBCA76F3404531777', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6AD65C263F1F4764BC95C4A6D4BD3686', '<p>是util包下的<br></p>', '0', '18753E1650F441928BBA0651272ECBEA', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6AFE527965254DADA1C4B445EFEB21DE', '<p>public<br></p>', '0', 'B1E63AA97DFB4DFA97A5940294394DAA', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6AFEEEA975C74C19AD96F8E6C4968D5D', '<p>int [] arr ={23,45,65,78,89};</p>\r\n', '1', 'BFCF0DE5819E4AD69E0E507950EE35AF', '2016-01-05 10:54:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6B0175191A0643E49FCE9086A896A494', '<p>a=1</p>\r\n', '0', 'A533FB795BFA49E3BBE3BCB8FCA32EC2', '2016-01-05 10:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6B0D76AF19C84A86A72C5DEA75C9B109', '<p>以上说法都不正确</p>', '0', 'A5241E29E79E4CB6A49941DDF1EA1E68', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6B0FE321413D4133A3A631433743046E', '<p>Main方法中<br></p>', '0', '9E473EA8F121455B9F3E561111B15163', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6B4E322B2731404FAAD791E5E07936C6', '<p>private只是封装的一种体现形式，不能说private就是封装<br></p>', '0', '8548169EABB5482581E0E7670DBE74E9', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6B86F5B0C5FD4ED38EC0B14731EBF929', '<p>public StringBuffer delete(int delete)<br></p>', '0', 'B6A49BDDC51A4CF397E1C43F52F475A9', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6B8CE2BF9F4E4D35AF246672AF2A696D', '<p>以上都不对<br></p>', '1', '8E2BEB381D974F468C78B55204EE35C6', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6B99FC126602490FA70DC9ECEA2B9680', '<p>Inet4Address<br></p>', '1', '85489CF01E1344DF87DC15CA75ECAF89', '2016-01-02 21:47:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6BA9F01F63CF4DCF93AD483BA4AC8498', '<p>就代表.<br></p>', '0', 'F9D20990860D414DA4E4E1F7B04D6F60', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6BAE2609893A45C3BF871F9E9796C80A', '<p>num,&nbsp;this.num,&nbsp;Outer.this.num</p>', '1', 'B3567B790AF24592BE56FD26425BC8B5', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6BB1D246D3124A5795EC39BA71B99B0C', '<p>调用了close()后，该流不能再继续使用<br></p>', '1', 'C37EB787F1314BEB98DC5DCF0DD682AE', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6BB931CEC4254C95A62D6F7D05642AB4', '<p>可以单独定义一个类，继承Comparator</p>', '1', '8A3657F552B745508414D17A3C6CC13F', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6BC5948FA3E844EA8366CCFA0004DCDE', '<p>x3<br></p>', '0', '1D5D0D888003473B801007FF491DBAAC', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6BE7FBA8E76D4F15B2574342188D7F6A', '<p>无限次<br></p>', '1', '74FDBB5D7BDD414AA3B230749EB17314', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6BFE7C8CA054486F804E7663ABCFBBD3', '<p>&nbsp;jre里面包含了运行java程序所需要的核心类库以及jvm<br></p>', '0', '677C00191B214420996DCA46B667519B', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6C143522CA7343F8B0246308F6CDED5C', '<p>运行报错<br></p>', '0', '1D1391BF3D57479DA6CD4B43F93D454E', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6C15247D193B495981B33BC34009EBB0', '<p>十进制由1-9组成<br></p>', '0', '85AB0EC4D3364DCB891AA4EA2FA3C175', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6C2168B298C64B1AB4E3D97A16225FB8', '<p>^<br></p>', '0', 'A475F62D72304E93A56EF57E60AB2F49', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6C4237BBB79A4AB6AB76CFF241E14B1D', '<p>接口也可以继承接口，并且可以继承多个接口</p>', '1', '8C033FDAFFF64DC4991E80BF1DD2E9ED', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6C6BFCC3433E4C23A6014EC96DF61196', '<p>JDK6(包括JDK6)之前，如果想要用一个catch块捕捉多个异常对象，则catch 子句中的参数类型应是所有存在的异常对象的父类<br></p>', '0', 'D8D5184E3E7648339A82A7E8DA4E6F2B', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6C83A44E79F045A084144C3C383BA6C8', '<p>writeString()表示写一个字符串，readString（）表示读一个字符串</p>', '1', 'E4A02616EFE449F080062EB49D422A8D', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6C8C3BA24D1A49A48EA1F8E1BBA23047', '<p>十六进制0x11等于十进制的17<br></p>', '0', '50B161119C2040C4A4ED267103582F2A', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6CBA6A086B9344B1BD478D53D0D8816F', '<p>定义方法时必须使用<br></p>', '0', 'E199B51ED8D7436ABCBC47BFAF515825', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6CC80CBADD0A4A0B8F0EF0E35CDF6264', '<p>继承<br></p>', '0', 'F8DF29A4DA084A118091C5C9157E7184', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6CCB4EE8361247A08952D1ACB3D8B2E0', '<p>&nbsp;arrr中可以存储1个长度为2的1维数组,1个长度为5的1维数组,2个长度为2的1维数组<br></p>', '0', '90C634D1F0374751822F0987D5CE948B', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6CD31CBB5CDE4A7D995EFCCD2278E90E', '<p>b&nbsp;b&nbsp;a</p>', '0', '28FF3BF1E3524ACEA7D3ACD5025F4A13', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6CDC41BEFDCD402582E2A29C198916AD', '<p>类中的带参构造方法与set方法功能是完全重复的，可以只选其一<br></p>', '1', '67496E8CD2A4412C8A9DA508ED2DA2F2', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6CEC77AF637740BD8150C987E0A8B56D', '<p><span style=\"line-height: 1.6;\">Properties 可保存在流中或从流中加载</span>​</p>', '0', '8C9AF3AA92FA441B99CD1B37B2A1F7DC', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6D050333256E46C59EBDE9040BAE5D2D', '<p>倒置<br></p>', '0', '30C0CA825EAA47219CA0FF69743134FD', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6D0D6B27D0324D1886A359E31AF42828', '<p>返回值类型是boolean</p>', '1', 'DE265D253B9F4F8DA1BF8173BE460D09', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6D22904C4EAF4533AE269E0E544B9EE8', '<p>设置毫秒值<br></p>', '0', '8BCBC2E1D3294EAA9FF5594E42D3E5C7', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6D278F0B86BA4962AB0706192FFD8F22', '<p>编译报错</p>', '1', '49CA866471104062BF3BAECB782992AF', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6D7579E497F14664AD6E6436EDD4D29C', '<p>receive() <br></p>', '0', 'EAFBB0FAF40346CE8DDE217B235265AA', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6D7C7603FA304F2893AFC0EAAF8ADEE9', '<p>System.in是InputStream, 标准输入流, 默认可以从键盘输入读取字节数据</p>', '0', 'AD231382B0D443668FF1125DF016562C', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6D830D7F8DC240CCAAC9CCC42164EDC1', '<p>&nbsp;sleep()方法在同步代码块中不会释放锁资源，而wait()方法在同步代码块中会释放锁资源。</p>', '0', 'E4AAC9803A204AECA08B822E958F6BC7', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6D9578D9E0614E56810089C4B36B973F', '<p>Test p = new Parent();<br></p>', '0', 'EB81C87C0CF44DD8B69DB89B7956E0F2', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6DA711B638344C22A318740550925FB3', '<p>for (int i = 0; i &lt; 5; i++) {<br>&nbsp; for(int j = 0; j &lt;= i ; j++){<br>&nbsp; &nbsp; System.out.print(\"i\");<br>&nbsp; }<br>&nbsp; System.out.println();<br>}<br></p>', '0', '192E56F8066E4D729E98AC1E1890AF1B', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6DAF12DD3A6B4A06BAF07343823C000B', '<p>Java支持多层继承<br></p>', '0', '97A38AC863154A1E8605832880A665E7', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6DC0F0784AF9446DB3E1669F1726BD63', '<p>查询速度较快，增删较慢</p>', '0', '6DB438E43B7D4B4493A4DF8BC65A09E0', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6DC890262A834C908A3109D1E76B3B46', '<p>0b00001111<br></p>', '0', '8E7722FDC1E1400588AAC2FFC69316B1', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6DF02EC00D524ECE8E9C8A18DFF07177', '<p>971</p>\r\n', '0', '10BCED75F1324ED792FD968B905CAE24', '2016-01-04 23:46:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6E297A61CA284F20B0A610EFC2A6568A', '<p>一次也不执行<br></p>', '0', '5D8392BF6E524007B98D281CE9827EA8', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6E449C7DCA8941E9BF7A77707FE052A5', '<p>&nbsp;javac.exe<br></p>', '0', '881CD969294E430FA746861339B82825', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6E50E1E62857468184355A74289BAC4D', '<p>得到的结果是30 <br></p>', '0', '12FBDA3104CB47028FD6489140714F01', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6E8453B90C6341FF85680E388FFE78B7', '<p>如果有哈希值相同的对象,&nbsp;就和哈希值相同的对象逐个进行equals()比较,比较结果为false就存入,&nbsp;true则不存</p>', '0', 'B61B6856D1C94CD7B2E67FE31B36606F', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6EB8652A985F45B29C4619C5876054D3', '<p>Date类中的构造方法<br></p>', '1', 'A8134F8361D145AFBD23EE3D4F730B01', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6EE05C7D5CB74B60BC43B75F524A72BF', '<p>24</p>', '0', '0025D65731D14DFF95E7955327D0DC27', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6F15360C00304D6988BA19EEEA24AC37', '<p>以上都不对<br></p>', '0', '1EA120BF3FE04991B16A5CADE159A2EC', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6F15536FBB51451E9CD871E3C64B6449', '<p>自然排序是事物本身的排序规则</p>', '1', 'F2BA91FEBE1441C69ABE862E9FC110C6', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6F66125B66DB40B0AF605B40AAE52C10', '<p>只对象才能使用类中的成员方法<br></p>', '0', 'F8FC413C1E344492BA0171CBBB2B2465', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6F6DCCE639D74A3FABE95C337AEB8058', '<p>2哈b<br></p>', '0', '8F5830CF5FD9464E8FF252F79D1A320C', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6F7156E19C6A4A0EB8084DC97F5329C3', '<p>字符输出流不能直接输出字符串</p>', '0', '79E7F90ACD63403EA18EF9DE987A6104', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6F81D61E1F2C4A24B21D5ACEF19D6850', '<p>以上说法都不正确</p>', '0', '7BE991C876C44E74AAA4E5A61C955A61', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6FA0F399150E450FB18D861CDE8BCA48', '<p>&nbsp;Object</p>', '0', '27EB767D8B51453CB21E8C05B813330F', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('6FF3893F0DB74A3E81AEF46C89A82082', '<p>ReentrantLock实现与&nbsp;synchronized&nbsp;相同的并发性和内存语义，并且更具有扩展性。</p>', '0', '28A73EF55D184D5EA1A987DB11DB85FF', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7016A08E8CDD4AA988C7C4718860677B', '<p>以上说法都不对<br></p>', '0', 'CE396BF9BCF94F6BA3E7B417D0892085', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('70197DF89E14475F9232FCF25A935439', '<p>int max =arr;<br></p>', '0', '92851EA035E6414EA8E15FAA3FC9D818', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7046D422D96D47E78C0585028B9FE00F', '<p>通过实现Comparable接口<br></p>', '1', 'BF2452AB0C51426BBF9C6577658CE85B', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('705E5A9154514416AF7176A3D37029A0', '<p>效率低</p>', '0', '1DA52701C92B497CB51ECFF3DA659599', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7065566A33B94EE785E8F4682E56B0FC', '<p>当对象的引用被赋值为null时,会马上释放所占内存<br></p>', '0', 'B95A2FCC46DC4E41B4B43A6BE35E0BA0', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7087BB89C0494609BE4618074BFD60A7', '<p>0b10010001<br></p>', '0', '8E0656F4C648464F955A1F1397EA26E1', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('708E8BBF61294A14A4A63690F505766A', '<p>每次调用都是读取的文件中的第一个字节<br></p>', '1', '5AE300BAB3ED4B3497D889153F31478B', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('708EA9AD592C4CEDAEB582E228BD985F', '<p>Eclipse不能进行Java web的开发<br></p>', '0', 'F1694C4FD1ED47FBBF31CE352344F49E', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7093AC0FA0594ED9989435B6FBBB9559', '<p>可以使用Alt+Shift+R统一更改源文件中的某个变量名或者方法名<br></p>', '0', '523FBB764ED8414C816C9C437824DFC3', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7093BC9C19A44B53B2BD149031E8C171', '<p>类加载器一般有三种：根类加载器，扩展类加载器，系统类加载器<br></p>', '0', '47910E17286646DD8E63E290548F5BED', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('70A7A15B73DB489088F27F3ADCDF4D9C', '<p>4</p>\r\n', '0', '7D8545CB8A29471C93117419881D2264', '2016-01-05 11:03:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('70A8C1787C0D4CB2B2004436DADED964', '<p>队列的特点是先进先出</p>', '1', '1244EF5B065C413E8538D26FE6BD5DB7', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('70AB9408BC014E06BD816F5EB4EC751B', '<p>加载字节码文件的时候,也会加载对应的源文件<br></p>', '0', '4B8EE8199AA543C8A168C7D7E14ED783', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('70CBE83C727D4F81A1B4504E22E3FFF0', '<p>FileInputStream fis = <strong>new</strong> FileInputStream(\"海贼王全集.avi\");&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>FileOutputStream fos = <strong>new</strong> FileOutputStream(\"海贼王全集2.avi\");&nbsp;&nbsp;&nbsp;</p><p><strong>byte</strong>[] arr = <strong>new</strong> <strong>byte</strong>[fis.available()];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>fis.read(arr);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>fos.write(arr);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>fis.close();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fos.close();</p>', '0', 'A8E88D3C9C5A447BBDD238DF2D320C5C', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('70E0370EFBD4490FB6004C860F7DA76D', '<p>方法重载：本类中出现的方法名一样，参数列表不同的方法。<br></p>', '0', '68D5B554ABF84DBFB8D3E32E8CC5B3BD', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('70E170651D2A4FE3A37FE2AAAB7EE82A', '<p>静态代码块每创建一次对象就执行一次<br></p>', '0', '378C1BB9E1BE494A8139D7F8323F8A32', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('70ED59E745D84576AA84C4DF7AEAF60F', '<p>ObjectOutputStream流是将内容写入到Object对象中</p>', '0', 'DBEF0A429C86455EA9EACB2E98F4EDAC', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7109E8779498474E95C6DFF9C8AB22F2', '<p>八进制由1-7组成<br></p>', '0', '85AB0EC4D3364DCB891AA4EA2FA3C175', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('711AE13DCCFA41D48E47B31261E4C7FD', '<p>&nbsp;该类的setXxx方法和getXxx方法访问权限建议定义成public的<br></p>', '0', 'E0776C47C6974C1983E9E63838AC8011', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('713A5E660E684364AD27966B0591DE7C', '<p>让要存储的类实现Compartor，重写compare方</p>', '0', '41CBAD63AC204A448F2522D147517BC8', '2016-01-02 21:48:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('713EBDA544F5447D8009776049952A19', '<p> isDirectory</p>', '0', '5EE5CE663C5D4F4B97ADE513BE3D01E6', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('71498297624A49FEA114A6715A94E858', '<p>Eclipse的内容辅助键默认是Alt+/<br></p>', '0', 'B3ABBD0FA917446B92F30996C5B1EE4A', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('716244E3120E4E73BFF555DF23D67D37', '<p>private不是一个关键字<br></p>', '0', '239108173BE64DFF86B3B0CD9EE51377', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('716C12BFBE7A4AF9A87F041AE1619AF7', '<p>以上三个位置都可以<br></p>', '0', 'D5C23625513E46A5B20CC5513DD369E9', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('719B7480EACE4A2892074CB73EEB30D8', '<p>bc<br></p>', '1', '784D14DF68E14649BE511EB95E19A470', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('71CB1E3835E747888BBAC97298C3EB5C', '<p>运行错误<br></p>', '0', '960474F91B394706A50D8267912DA514', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('71FA4F47822347E99C712A24EEA479D5', '<p>局部内部类就是在方法中定义的类</p>', '0', 'F9F75F27924C45FE8FBA6ED8B067242F', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('71FBD6FEA20C41B285FAC3BC558DEF2B', '<p>关不关都可以<br></p>', '0', 'E572A6C1E75146FE892D1951AC55C5ED', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('721CA94EEBD245789FA99DA9F3CCA9A7', '<p>IO流<br></p>', '1', '10CE2076CEB349AB96447415C0DCA62E', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('722481370F0749C8BF358A29AA376ED8', '<p>a=1,b=2</p>\r\n', '0', 'D8C854B6CEFF48A4A93ECEF0580C6ADF', '2016-01-05 10:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('72255501153B42759B27C8E590AF5EE2', '<p>toBinaryString() &nbsp;值是String形式的.<br></p>', '1', '4C654212C96740DAA48625D784C27DF3', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('722804FDA344415495937C6BDFE90675', '<p>抽象类的唯一作用是不让创建本类对象</p>', '0', '4E965A2AACDB4C5DBC3B366338FC4F95', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('72349E6F5EC8404CAB4DF55015A8104F', '<p>编译出错</p>', '0', '08D1459AD44445B0809072D37704C374', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('72499636559A4C8EA89967FA26013C82', '<p>long</p>\r\n', '0', '53B4AD107B914B41ACCF48E9D2BC2FA9', '2016-01-05 10:57:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7252145397AA40BAAAE21DB3C278E73D', '<p>所有的类都可以自动生成构造方法<br></p>', '0', 'E9FB9E6007C84DA380F98382B484735C', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('725365A2B28D408F8E99E3468C17BAAC', '<p>new int[3][]</p>\r\n', '1', '6CBE3C70D0DA482CBE77BB3375CDBEDA', '2016-01-05 10:31:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7255CB9781BB4F5A8BCA4D525D9ACA7A', '<p>以上说法都不对。</p>', '0', '474C9456A2D04ED29D8C2EDCA8B46124', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7265A70E8CA949AFB0EA36357778F292', '<p>method(new Demo());<br></p>', '0', '5804B07031A8461DA0E59F3CB518D8D5', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('726E7FC2BD9748448D2C3CC46566636E', '<p>insert()<br></p>', '0', 'CC439803EACC4AFCBC25A088871C8F30', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('72775A67FE204C75B3163225CFA6CF26', '<p>构造代码块优先于main方法执行<br></p>', '0', '378C1BB9E1BE494A8139D7F8323F8A32', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('72998526C12943DCA7C397386906681F', '<p>构造方法中没有return语句<br></p>', '0', 'B981F6DAD9A940E2A34A6B943FB73FC4', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('72BC5FE465784DB1A2105FA783841266', '<p>List里所有的方法Collection里都有<br></p>', '0', '51ABBF707F47415C82F43F64DDC49AF2', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('72C30BD9F1DE43579C01498188AB9D21', '<p>FileInputStream fis;</p><p>FileOutputStream fos;</p><p><strong>try</strong> {</p><p style=\"margin-left: 40px;\">fis = <strong>new</strong> FileInputStream(\"xxx.txt\");</p><p style=\"margin-left: 40px;\">fos = <strong>new</strong> FileOutputStream(\"yyy.txt\");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 40px;\"><strong>int</strong> b;</p><p style=\"margin-left: 40px;\"><strong>while</strong>((b = fis.read()) != -1) {</p><p style=\"margin-left: 80px;\">fos.write(b);</p><p style=\"margin-left: 40px;\">}</p><p>}<strong>catch</strong>(IOException e){</p><p style=\"margin-left: 40px;\">e.printStackTrace();</p><p>}<strong>finally</strong>{</p><p style=\"margin-left: 40px;\"><strong>try</strong> {</p><p style=\"margin-left: 80px;\">fis.close();</p><p style=\"margin-left: 40px;\">} <strong>catch</strong> (IOException e) {</p><p style=\"margin-left: 80px;\">e.printStackTrace();</p><p style=\"margin-left: 40px;\">}<strong>finally</strong>{</p><p style=\"margin-left: 80px;\">fis =<strong>null</strong>;</p><p style=\"margin-left: 40px;\">}</p><p style=\"margin-left: 40px;\"><strong>try</strong> {</p><p style=\"margin-left: 80px;\">fos.close();</p><p style=\"margin-left: 40px;\">} <strong>catch</strong> (IOException e) {</p><p style=\"margin-left: 80px;\">e.printStackTrace();<br></p><p style=\"margin-left: 40px;\">}<strong>finally</strong>{</p><p style=\"margin-left: 80px;\">fis = <strong>null</strong>;</p><p style=\"margin-left: 40px;\">}</p><p>}</p>', '1', '7D00EB30F0F64ACEB70B04B9065DFA90', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('72C5306AA7E24E77B3A5F46D4F992D54', '<p>视频</p>', '1', '90F2897E8C544479888DE47DBBB731E7', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('72C9DCC88BE5450FAF032E976FF63A83', '<p>需要导包<br></p>', '0', '4393D62D0D454BCD82440A6A510CC6CB', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('72D631045B0D4BFBAFB8FEFFDCCEE4DD', '<p>对象数组是引用数据类型<br></p>', '1', 'F4D8A46773C14661A3D5A4FF4AA4851F', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('72E8E00498A34326B020B82E18ED4249', '<p>报错</p>\r\n', '0', 'F307AA3E5E5B4A10B6616053F4AD8CEF', '2016-01-05 10:36:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('72EDD1451C8B40029E9D409F666F9A1C', '<p>关键字和一般的单词没有什么区别<br></p>', '0', '89B84A68FCD342BEBA94B9EBCAB18139', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('73172025AF5A4E60A42EF1830EC81E51', '<p>final、finally、finalize三个关键字都可以在类的内部使用<br></p>', '1', 'CF14E6E17877442E9724C74A118A9D95', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7329897FC6C549BB88A61C7A7ED53582', '<p>Collection</p>', '0', '0C5CBE3D8DDF46E281A0862052AE8890', '2016-01-02 21:48:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('733E514E3B0840118FB9C3474C481275', '<p>Eclipse不能导入压缩包格式的工程<br></p>', '0', '8257B99B2060481195BD179F11E876BB', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7351F54767E8476981B35587E5CE3C87', '<p>Exception类<br></p>', '0', '33161A15F3F841D6AD885A853228FE9D', '2016-01-02 21:47:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('73543C4669F54357891CE1091AC0F709', '<p>编译失败<br></p>', '0', '807293A3E5584E6FAD4E4C5A9C3E9E33', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7381AB9E136B4EE79F51952034ACE1EF', '<p>sleep</p>', '1', 'E48D6C8EE79F469E8142C778E0AC2466', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('73AB574B81B04C629B3E42F8449742DD', '<p>LinkedHashSet是链表结构，适合数查据找操作</p>', '1', '03E23694E6F548AB8D0BCBD21E69CAAC', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('73B63266B46941F98F0B5E4100DBB9DF', '<p>&nbsp;提高了代码的复用性<br></p>', '0', 'B7250FC6E5D141188C732DDEF690C51D', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('73B9798089204512B727A0935DDA6995', '<p>System.out.println((3&gt;4) &amp;&amp; (8==8)); 结果为false由于短路未判断 8==8;<br></p>', '0', '2EC24E4721784A96BDA14C19599D976E', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('73CA623AE1A64043B2ABFA59FC9271A5', '<p>arr1没有指向数组地址<br></p>', '0', '40D8ABB364214CD59F300501FAE4FDBD', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('73FB9E1444944953A0D4930A831C8512', '<p>int c = (a &gt; b) ? a : b;<br></p>', '1', '59247DE99BC4484284F0FE64E35FE98A', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7403304366464568862670A30C546644', '<p>into()<br></p>', '0', '403BCD4E74E34D9F9ED4961F931A6ECF', '2016-01-02 21:47:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('741863C1FC634CB4A265A4ECEC77536B', '<p>三目表达式的格式为 &nbsp;(条件表达式) &nbsp;: 表达式1 ? 表达式2<br></p>', '0', '021EA54393314F53B935CB6780D8F0A5', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('741A8B3E50E24645BC85C61A08ABA82A', '<p>binarySearch()方法只能操作List集合。<br></p>', '1', '2CBA15AF85F1403A895C4FE0F565A4CF', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7431302E0E044DB6B0EAD6D8A784A5EE', '<p>增删慢<br></p>', '1', 'DCEA05941DA1408989ACA558273E8284', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('74561F82E94D44FC8E9FA1831BB38450', '<p>重载方法的参数列表必须不同</p>\r\n', '1', '40BC6D3CB9894074B3229744A9B46128', '2016-01-05 10:58:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('745BB5B4EB9D4B04AF9365B0214A2136', '<p>RandomAccessFile<br></p>', '0', '6DA75C307E244075B477E5FECB9D4952', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7465056A3FB04C60BA69DFD61A049511', '<p>Scanner是java.lang包下的<br></p>', '0', 'ED1C8DF591CB4DF1BD8E4721001C5DF7', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('749E2E797D7F4FD1994EA0AB9FC42965', '<p>新增增强for循环<br></p>', '0', 'E0006883C7F3414383C990502DBD087D', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('74A3D12FABC9461AA78FDA4F4B8D3668', '<p>System.out是PrintStream, 标准输出流, 默认可以向Console中输出字符和字节数据</p>', '0', 'AD231382B0D443668FF1125DF016562C', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('74A70E59CDB64562A3563DD3AEAC0077', '<p>可以定义泛型</p>', '0', '3EFEC211932E4E69A8CDE98B2BAF20F1', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('74AE3CC6B9BB491CAD81C0D542D0BBEC', '<p>Parent p;<br></p>', '0', 'EB81C87C0CF44DD8B69DB89B7956E0F2', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('74BAB9B4F063489F96F26C94E81B72E4', '<p>类中必须有成员变量<br></p>', '0', 'A327EF48F62A483BBC718FB369E43458', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('74CAC8CFBBD7473BAB84B9714F764C5B', '<p>字符<br></p>', '0', '5A31B84F00D24A6D9D10F5AA65D3A032', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('74F03078C668400FB37436002396C764', '<p>可以通过类名.调用<br></p>', '0', '024F0B258CB04508B76ED6ECAAA660DA', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('74FBF8437F914A2A9D0CF990079F2EA1', '<p>底层采用hash表结构</p>', '0', 'F372CD79AB23497A9BB444A053550E83', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7510F701745A49179EA78DD2A8C5D5AB', '<p>一般来说,if语句后有左大括号就没有分号,有分号就没有左大括号<br></p>', '0', '1BECAC261E36474791552E2DAA633661', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('75225C06757645F1A3618785CB5DD201', '<p>FileOutputStream fos = new FileOutputStream(“a.txt”,true);<br></p>', '1', 'BE14C78DB74B45B98795860138E63D83', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7525B176BC004ECA9E96AB3FDB50C090', '<p>让类与类之间产生了关系，是多态的前提<br></p>', '0', '399128C1C0874BDCB334AB6018236F6F', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('752C6D7F194D4F8D9D3018D90E25C3DE', '<p>\"\"</p>', '0', 'CB7D9F80ED264AB5A31D02CFB90BCFCF', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('752D656D79A1455783B32E73DEF77A88', '<p>反射机制可以获取泛型的具体类型<br></p>', '1', '4710BBC3C4474A9687DC8788182F67B7', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('75354C3FC2EC4FB490047176865DCD02', '<p>除积倒取余<br></p>', '1', 'F4C9C8EF4BE240C1ADDA7ED299A3B3D6', '2016-01-02 21:47:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('754889FD2B9E4887A129BB2DCDAC225D', '<p>14个<br></p>', '0', '73EA9A4A062D4C5991A587536E982FA8', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('755343EE826F4348A0013A5F446FC644', '<p>提高了代码的复用性<br></p>', '0', '97A38AC863154A1E8605832880A665E7', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('755BF54A7A35403BBA6B1ADA5087D539', '<p>private void show(){}<br></p>', '0', '3E3E073C2B0D4E6F8BCA838807F0FA64', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('75613C07896B474191F3EEDB9C777695', '<p style=\"margin-left: 40px;\">student[] students = new student[5]<br></p>', '0', '2C5BF2B0184A40FEA0C066A9058E6F28', '2016-01-02 21:47:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7565D336017946D687538B1E0AFDD82C', '<p>Eclipse下高版本的JDK编译生成的.class文件不能够在低版本的JDK下运行<br></p>', '1', 'F4F64204867443F6B7BAB2FA70C00131', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('757543BC59B744459D86AA366255A726', '<p>2<br></p>', '0', '3588BD16F3F9415798119AB99396DAD9', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7586BCE4A9D14816826B5F0E576DCB13', '<p>控制台最后一行肯定是 -1<br></p>', '0', '26E774C543914673B7AB71AB09B53885', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('75B0AD985EDD4D6BA082B870E256D5C6', '<p>会报NullPointerException<br></p>', '0', '46BD27AD911848CEAA2EC19F2414C98C', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('75CCCEABF8C24E1084ED5FCE56128061', '<p>switch语句的效率没有if语句高<br></p>', '0', '8876473BE2CE4F08BDFEB8E09451105B', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('75EDE0A947B7455380BF748AD2A217F8', '<p>Windows + cmd<br></p>', '0', 'D012244D06BD4C368EF64A55C01285F9', '2016-01-02 21:47:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('76030CCC6CF246B2A0495B1538C4ACEB', '<p>catch中<br></p>', '0', 'D5C23625513E46A5B20CC5513DD369E9', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7623E747E88E4C2388407CBE0697FE05', '<p>内部类没有构造方法</p>', '0', '494B987FEA4648E880F8D7C2FB4BD37D', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('76343593D9E9468F8DBCA55056A88136', '<p>hashCode()<br></p>', '1', '905526DA178944C08A4FD5638923A5E1', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7635EF1B48B74B0B83C4C2D9729BE6E0', '<p>Comparator接口<br></p>', '1', '33653C13ED974192B90251FF05593801', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('764192DEC6CF40DB9D09C72628B7E0DF', '<p>intValue()<br></p>', '0', '4C654212C96740DAA48625D784C27DF3', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7643772812324B16850696C135E6134B', '<p>for (int i = 1;i &lt;= 5 ; i++) {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp; for (int j = i;j &lt;= i-j ;j++ ) {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp; &nbsp; System.out.print(\"*\");<br>&nbsp; }<br>&nbsp; System.out.println();&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>}<br></p>', '0', '620E82A73616435F840F499748915126', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('766517D4F5F4437DA62C2C6743E669C1', '<p>0</p>', '0', 'AF44665882AD400CB5E5726549B81E7C', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('76851850FC314D648D854C814A2182FB', '<p>进程是指应用程序的一次执行过程</p>', '0', '9F2B7FDB50304EE79C9D1F4008F36040', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('76A909E584EE4309A77E928553C7DF25', '<p>包的作用是为了合理存放.class文件</p>', '0', 'DB704B6ADA424AA29065E34D55EA8425', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('76ADACD09D35495B9E2666652F031FC8', '<p>try(</p><p style=\"margin-left: 40px;\">FileInputStream fis = new FileInputStream(\"xxx.txt\");</p><p style=\"margin-left: 40px;\">FileOutputStream fos = new FileOutputStream(\"yyy.txt\");</p><p>){</p><p style=\"margin-left: 40px;\">int b;</p><p style=\"margin-left: 40px;\">while((b = fis.read()) != -1) {</p><p style=\"margin-left: 40px;\">&nbsp; &nbsp; &nbsp; fos.write(b);</p><p style=\"margin-left: 40px;\">}</p><p>}</p>', '0', '7D00EB30F0F64ACEB70B04B9065DFA90', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('76D8818D842241C58B7D70E22CDC9DF9', '<p>x=7&nbsp; y=1</p>\r\n', '0', '3F897C38AC0B401AB845A5D6A07D6DA2', '2016-01-05 10:56:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7700487ACF7540719ACFF6BD717E3266', '<p>switch (x + y) &nbsp;{ ...... }<br></p>', '0', '34A040350A9349EE8F1C2C852648058A', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('770C6F7E0DE74685A44233B740A3E5E4', '<p>实现Comparator传入TreeSet进行排序</p>', '1', '6BA9A5DC09074B8088BC24921E038050', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7730AF5182EC45E4B2470D8AB980B26F', '<p>Outer.method()</p>', '0', 'E7FF18CD2F914A7489A76964CF88787A', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('77434DE469A044E3A81E12BFDF87BBA0', '<p>是没有方法体的方法</p>', '1', '088E65967C914A588E8CEB142443A326', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('77447BE38C7B487D81F7246EEDA39082', '<p>5<br></p>', '0', '18DAE8B524B54C2FA88584881049C063', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('77471F858191436095583D2A9A7629E2', '<p>协议<br></p>', '0', '10CE2076CEB349AB96447415C0DCA62E', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7778BA47DFCD4FAC958A77B93F343E61', '<p>通过subString(0,length)<br></p>', '0', '22093AD408C949E7B74D50FDDF7D79A8', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('777BCA006B65400CB16FB2C4F7FA338C', '<p>a&gt;b<br></p>', '0', '25A2881255F447F4A07944DBEBDB5677', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('77A32FA901634E3BA49A8A888B6F10C3', '<p>while(1 = 0){….}</p>', '0', 'E12729C58134468184A5EB870BD048FF', '2016-01-02 21:48:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('77A5835CE3184E53ADF43C4DD9D0C701', '<p>编译报错,接口不能被实例化</p>', '0', 'CB7D9F80ED264AB5A31D02CFB90BCFCF', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('77B6BB65180F426E898DD7C9A3B135B0', '<p>将线程设置为守护线程或用户线程。</p>', '0', '7C6F9571B707408B906A9BDD1B07BC63', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('77E67D1D44554801B481321D74235138', '<p>nextFloat()<br></p>', '0', '4888C8C80F244B59B3446020061767FA', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('77E74D4A89214419AE40AE3FAF68044B', '<p>JAVASE标准版<br></p>', '0', '76B14F01291D4AE09A9A4927AD4F0E1D', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('782BECFE7B95443583A5D1395993C78E', '<p>八进制012等于十进制的10<br></p>', '0', '50B161119C2040C4A4ED267103582F2A', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7844352BDAFA4D7BBE9A6B64553E4347', '<p>编译错误</p>\r\n', '0', 'A533FB795BFA49E3BBE3BCB8FCA32EC2', '2016-01-05 10:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7844FF9713954D74BB8C07B412DF0681', '<p>以上说法都不对</p>', '1', '8C9AF3AA92FA441B99CD1B37B2A1F7DC', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7850FBCB36F54B978E1FFC3FC478B7D1', '<p>①这一行错误<br></p>', '0', '4BE2556B98B244B7B8B91F7EDEDE8D17', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('785E992D4BA0476D9C97EC7FF6D41A07', '<p>调用方法时传递的参数叫做形参<br></p>', '0', 'D03C5B366ED040E59A5EB7F0847BE3FA', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7871991FB73641319A4C458FCDA35002', '<p>运行错误<br></p>', '0', '8D04E113F7054CFCBE6C6BB20C5EBD8A', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('78894F6BFB9943C087488ECB14D1B0A6', '<p>这个方法需要传递一个Collection对象</p>', '1', '0843AAEE48DF422098782A2E877A1D87', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('789707872F56401EA2CDF5CFAABA7D65', '<p>reverse()<br></p>', '1', '8DF1BB6A6A7C4B32800826424E607400', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('78C45D5FB3264BBEBFF9F7DED2F85784', '<p>listFile()</p>', '0', 'D7A4A57FC12E474CBB9AE88C0D135A9D', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('78C467C10F3840F8BD2064130C64588C', '<p>输出结果 b &lt; c<br></p>', '1', '457E231D07BD4B05AD8087790868B821', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('78F6410A4104485A8DD848FF55E9846E', '<p>int[] 2rr = new int[]{1,2,3};<br></p>', '0', '0ED9E5F47F9843A4B8235F48E7F7BD1D', '2016-01-02 21:47:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('79131737A6F34D5294353CAEB69FDC07', '<p>FileInputStream fis = <strong>new</strong> FileInputStream(\"海贼王全集.avi\");</p><p>FileOutputStream fos = <strong>new</strong> FileOutputStream(\"海贼王全集2.avi\");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p><strong>byte</strong>[] arr = <strong>new</strong> <strong>byte</strong>[1024*8];</p><p><strong>int</strong> len;</p><p><strong>while</strong>((len = fis.read(arr)) != -1) {</p><p style=\"margin-left: 40px;\">fos.write(arr,0,len);</p><p>}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>fis.close();</p><p>fos.close();</p>', '1', 'A8E88D3C9C5A447BBDD238DF2D320C5C', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7921A1D6E91F4FEBA95B8C6DBB08CC7C', '<p>new Object().getClass().getClassName();<br></p>', '0', '82F3B36967DC4361BA036A1EB7EAAFFA', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7938254F600F40D696B52B6DC2E167F9', '<p>使用Alt+Shift+S+S可以自动生成Student类中hashCode方法<br></p>', '0', 'FF25F22F71E4413F86B85CD668AAAE1A', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7964AEB8E5BB4F029AD433A00F4DAC72', '<p>a</p>', '0', '7CEFF1E7084E45CEAB76349F5B5B1822', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('797669A143D043DC97B710B1CDFBAFA6', '<p>输出<br></p>', '1', '5A31B84F00D24A6D9D10F5AA65D3A032', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('79768208189A4704B826529A9CDD3363', '<p>内部类可以直接访问外部类的成员</p>', '1', 'C04E8836D56E49C2B5A46E3CCC2CAE7F', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('79875A8392744B3AB050E8149CC26E05', '<p>append()方法返回值类型是String类型<br></p>', '0', '2F878C45E88947E7B097C5601AFA8184', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('799622C87BBF48E6B1CF283751F334A5', '<p>arr[5],数组中没有这个元素<br></p>', '1', '1C0C0B2696524EFFB6EBC9F4C62563E9', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('79A9D81257B14C07928C8FADC4C1D38D', '<p>minindex<br></p>', '0', '6CD4C3C27C6D4C5397750224CBD9E238', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('79AFBE32ABA84B4FA94A85BB63EAA7CE', '<p>size()<br></p>', '0', 'DAB3B91EDCEA4ABBBA424F0AB07D8190', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('79B436B6C8F740BC8E62AF2B622D5ACF', '<p>三元运算符操作完毕可以得到多个结果<br></p>', '0', 'FC416AC468EC47D88113BBCA9D8353E4', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('79BC3C2D64D14C07ACF9BBFB9174C76B', '<p>ox3c表示十六进制<br></p>', '1', 'BB64C3CA6D374D9F98818871DA2E0E2D', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('79E308CD458A4FBF888637A85F7AD2FB', '<p>内部类不能直接访问外部类成员，必须先创建外部类对象</p>', '1', '92DB061FED0D40088C8A30BC829D753C', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('79E7A9405FAE4D2CAF89894D8909713D', '<p>以上都对<br></p>', '0', '9249DAA6C0ED483F982C0959E0F90EAE', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('79FB17C84BEB4D1BB34AA037A1223954', '<p>使用Alt+Shift+S+H可以自动生成Student类中toString()方<br></p>', '0', 'FF25F22F71E4413F86B85CD668AAAE1A', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7A07131B6DD24B0CAE67C5C282557D6A', '<p>BufferedWriter</p>', '1', '01C58DFD07654C5F97CA9BC05F8DDBD9', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7A109650322E40538C3E909E8F29A8CC', '<p>30<br></p>', '0', '3A0EB703E970410697D65575ADBA5888', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7A15B9DCE23F41C19828CC401B73D293', '<p>在新建一个类的时候选择要实现的接口<br></p>', '0', '7107FBB15B1342D18A4C100AD383FDE4', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7A2879E8F32440F18D242F0A83624294', '<p>127</p>', '0', 'DAA71957B76C40E5BC543E3FE8E9A8D3', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7A2DD643A4B04F70A031DE53F978B370', '<p>=<br></p>', '0', 'A1A018F0E1ED4528883587F6C4356DF7', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7A4A81C615804B10AEED737CE9177489', '<p>keyValues()<br></p>', '0', '005A1DFF0D044DB08C8AE85D8A358C7C', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7A4C7593D6C24EFC9BBCB82638D027BF', '<p>JDK中的jar命令可以生成jar包<br></p>', '0', 'D50355B184A74EAFB20599199DC3C329', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7A68B67372684DEEA1E65A57FFF0F58F', '<p>数组的初始化时其长度只能由系统指定<br></p>', '0', '3D1A1274B7544CC9B107AD516C9EFAEE', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7A6FA342BFBB4959BFE05AE08A48E0D8', '<p>StringBuffer,StringBuilder是可变的字符序列<br></p>', '0', '5594D4A74E104DF689D44CF630F808AD', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7A8E568326634444B774C47C90E94433', '<p>arr[3][3]的值是0<br></p>', '0', 'AD39D5C392CA47D78330CD05001DC279', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7A95EC0D013F46A58063B9C11130692F', '<p>arr[3][3]的值是3<br></p>', '0', 'CE763E92F64448799744129E04A131E0', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7AA7DE83CE28495EBD4D926C32F2CC54', '<p>FileOutputStream类的 writer(int a)<br></p>', '1', '975765C75BD24411B5B779A0F6ACB87B', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7ABC2BB660A2424D9710763AD550DF00', '<p>16</p>\r\n', '0', '3C802AF0274E4FCB97401CA6E5FDD722', '2016-01-05 11:17:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7AC13DEF944148A5B54B0CD1FBB60E1C', '<p>StringBuffer</p>', '0', '76408DB7AA0D4B369FFEAB1BB73AFA4E', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7ACB9144BBE7423ABE1D50827D463EFA', '<p>先判断是否创建Comparator子类对象，如果有，则调用该对象的compareTo方法与集合众元素逐个进行对比，没有继续将遍历到的对象转换为Comparable，若转换异常，程序结束。若转换正常则调用该对象的comparator方法与集合众元素逐个进行对比。两种情况比对原则一致，等于0，不添加，小于0，放前面，大于0放后面，。</p>', '1', '69279EA71E7E42A188385BBBF7C2E2DF', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7AD462872BF54BB6AFF7AC9499EE1489', '<p style=\"margin-left: 40px;\">if (arr[i] == value) <br></p><p style=\"margin-left: 40px;\">{<br></p><p style=\"margin-left: 40px;\">&nbsp; &nbsp; value = i;<br>}<br><br></p>', '0', '227695A9EEF0493CAA09E454222BC69D', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7AE8B3C4AEEC424F8F3411C57F02C9F5', '<p>y = 400<br></p>', '0', 'BDDCF8E09A4F471F9285BB85182F9EB8', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7B20773E69B944389D4BFC50C11609DC', '<p>0<br></p>', '1', '7FB057108FD84745BCF20A2A114D6872', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7B24C9E669FE4312BF99418299737372', '<p>interface<br></p>', '0', '1D294DBEC5524BC6A1D5C631911AF8F7', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7B2BF75912374C6FB474BE7F7C9569E6', '<p>LineNumberReader是BufferedReader的子类<br></p>', '0', '3B5BC9E664F84464B2EE00464D5E7D91', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7B3EFDB464364898948411F4DE85A739', '<p>package,import,class的执行有顺序关系</p>', '0', '547D0BCFEA684F93847AD81A8F6FA523', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7B40A1AD75F04F9ABD2EB09B8F0C6826', '<p>[A-Z]<br></p>', '0', '023743024EA94486BBC98B4E82A7E7AC', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7B5C58CFB1EB4B1D9E57A4966A8E8560', '<p>asList()<br></p>', '0', 'C95F3BF8FFDA49918691CE4261CCE135', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7B660026C18A4024B92C0D2BC03FCDC4', '<p>class&nbsp;A&nbsp;implements&nbsp;B,implements C</p>', '0', 'A22444E251D24147A203939C7CF24DD4', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7BB428CC39BF49E4BE2E981CBA4438E3', '<p>以上的说法都正确<br></p>', '0', '525B7C54E37D46EAA896B2EDE0BBDD43', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7BD36787C8C144E6B7394911F6046548', '<p>把obj这个元素从集合里面移除</p>', '0', 'DE265D253B9F4F8DA1BF8173BE460D09', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7BD3E6CD0ADC49F9855B7DAB5DDEEA00', '<p>子类重写父类方法的时候，只要保证子父类的方法名相同就可以。<br></p>', '1', '1F249CA9B969470A954470FD62CB2F34', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7BFEE43430D64344B65FAC83FC54216B', '<p>类<br></p>', '0', 'AC77607FFB684A25A91139B91974BBEC', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7C10DD72A58C4BCBA9D35483449634B8', '<p>继承想用就用，不分什么时候<br></p>', '1', 'B8257C4E694D4D92AE9E0D6F8727FB99', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7C1106953DFB4A5FB5EB3D617376DB1F', '<p>方法都必须显式使用该关键字</p>\r\n', '0', 'C2BAE395C1334F0CB54A2470D90568AA', '2016-01-05 10:34:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7C1366493B2D40448149DA74EBE6A010', '<p>11</p>', '0', '79B602AAD637488BAFB1D62CBA7CA463', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7C1FECC84F7E422A995CD2FDB20E2EC3', '<p>默认修饰符修饰的内容只能在本类或同一个包下访问我</p>', '0', 'A9C38ABF8F2E4D5E9D90E4D96BB2E652', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7C2318D8B3974F998499C109B38ECA45', '<p>CPU<br></p>', '0', '8D00691B69E84B08A222DC27CFCEF295', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7C3525C0DDB04021A2BEF848FF375D71', '<p>如果条件为true，运算后的结果是表达式2<br></p>', '0', '021EA54393314F53B935CB6780D8F0A5', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7C759B58DE8A412DA831C2A1812D5B1C', '<p>String<br></p>', '0', 'AD289B8E864743678E2885D95CCC40E1', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7CECCBDC77DF4E25938ECEEDC319C406', '<p>没有此方法</p>', '0', 'E3A82A2134784974A7055D3F90358409', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7D01C43ED5BF4D00B15E559332697E47', '<p>向下转型就是把父类对象赋给子类引用</p>', '0', 'C227C2AD2B684621A3C11949260EC402', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7D0DA95548DE4475A22B915546A624A4', '<p>红杉…null&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;麦克…null<br></p>', '0', 'F26C847CE8BA4DF190702CAC25325E9B', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7D1C008C23B74F90AFDD937D573EE560', '<p>死锁产生的原因是一个资源每次只能被一个进程使用，而进程因请求资源而阻塞时，对已获得的资源保持不放。</p>', '0', 'EF20A1F2C88947A09F8FAEE12B66E8EA', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7D3737CFF8B44F47840DEB722671E0D1', '<p>转成的List集合，不能改变集合的长度</p>', '1', 'F605CEE3377643D4A51B22A59CA20FFB', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7D54C4B244DA4D9D9ED33ED6FACB2E6C', '<p>通过实现Comparator接口<br></p>', '1', 'BF2452AB0C51426BBF9C6577658CE85B', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7D6AD8823245461EBB965027F01D4A43', '<p>当一个方法的形式参数是抽象类或接口的时候，调用该方法时，可以使用匿名内部类。</p>', '0', '813FEBFE81644A5FAFA2E072C6474F61', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7D704E031B03442A8C58912BEBCBA87C', '<p>所有的类都可以自动生成getter/setter方法<br></p>', '1', 'E9FB9E6007C84DA380F98382B484735C', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7D94B40FB1AF4539B67BE8B60F48CA6C', '<p>int<br></p>', '0', '0B9F88745EBA4854A16F1B71E2EDFE20', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7DA0B0E0D2DE49FBB301F2EB55653A40', '<p>private修饰的属性不能通过对象.属性进行使用<br></p>', '1', '8548169EABB5482581E0E7670DBE74E9', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7DB5E353B80A4D3196966DBB0E790453', '<p>if后表达式的值如果为false则不执行if体内容<br></p>', '0', '6801C0F41E3C422A8D4E054B17ED5250', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7DC6009A3A64471A91222E4D5B499610', '<p>用迭代器可以解决并发修改异常<br></p>', '0', 'AB8605B532BA425780E3A35C9F84B36F', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7DF0B9C944DC4BDDADCF486D55165655', '<p>格式化日期对象<br></p>', '0', 'AA82F2ACF1A347EABA14B929590FC824', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7DF79577541B4E13B69A856C1FAF9D0D', '<p>抽象类中的方法都是抽象方法</p>', '0', '088E65967C914A588E8CEB142443A326', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7E04658148F04F16A4F58E14ACF0FFA9', '<p>String[] args 以前不是用于接收键盘录入的<br></p>', '0', '82C3F4B66C7440BC89249CED31DFAED6', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7E28D6C6DDC04E008D2E8B7D636898A8', '<p>TreeSet构造方法传入Comparable子类对象</p>', '0', '77EA5743DA954BF8A0F5901E7AE17F65', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7E331DF75F7640D89C75D0395AA53A79', '<p>getAddress()<br></p>', '1', '3CA9A912222A4EF6B38F4C23582285E8', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7E358FA1577446F6899FB1A1190DA5ED', '<p>interface&nbsp;Inter&nbsp;{&nbsp;public&nbsp;void&nbsp;print(){};&nbsp;}</p>', '0', '199C217200F248CA8901EF185C605765', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7E397298F87F4A02831044471785EB62', '<p>键盘，鼠标，显示器<br></p>', '0', '7D055CB4494043AEA4E9430901957716', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7E4F86D96CC84630AA5E033D7AEC9233', '<p>构造方法有具体返回值<br></p>', '0', 'B981F6DAD9A940E2A34A6B943FB73FC4', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7E567BCE2EFF4E99B6F49DB3D5D41E7C', '<p>c &gt;= \'A\' &amp;&amp; c &lt;= \'Z\'<br></p>', '1', 'FA85969CBD934CE8B667BC44499BC40B', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7E5A55D6B3B54DECBE99CF2801B8385D', '<p>栈内存当中<br></p>', '0', '9E473EA8F121455B9F3E561111B15163', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7E7A5213D4DE420498554CE128B15BAB', '<p>int 2rr[][] = new int[3][3];<br></p>', '0', '6F1ED2CABE3E49FC9A30BEA2AC003EE7', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7E7E93C6CDEF46FCAF10DC74FE468AEC', '<p>String str=”abc”,str的引用不可改变<br></p>', '1', 'A59247A6CE834AC1AC4E101A93C28E88', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7E820D3C91554F4090B55AC07E4D0538', '<p>所有单词都小写，通常以公司域名为地址 如com.itheima.项目名称<br></p>', '1', 'F3A9105F84FF4B619156FD271A5246E8', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7E8241AEF9B4409B8CFF2F863F6C096D', '<p>没有意义<br></p>', '0', 'E199B51ED8D7436ABCBC47BFAF515825', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7E99477CA4124F8AA926B58D142A57EF', '<p>int x( ){ char ch=&#39;a&#39;; return (int)ch; }</p>\r\n', '1', 'C20E08B1A8874E14A662A03B51934758', '2016-01-05 10:53:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7EA4BB2BAE6F430D82242EE8237C6FD1', '<p>Father&nbsp;f&nbsp;=&nbsp;new&nbsp;Father();</p><p>&nbsp;&nbsp;Son&nbsp;s&nbsp;=&nbsp;(Son)f;</p>', '0', 'F62FD53FC2854F519FF92BFFEE905FD7', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7EBA03E2F2E7439C9E2E452FAD43AB5E', '<p>yield</p>', '0', 'E48D6C8EE79F469E8142C778E0AC2466', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7EC5252FCE064C28961774F0D3F9CE51', '<p>import java.net.*;<br></p>', '0', 'B5B711E7C367447CBF57FAB18A88281B', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7EDA6E629AE648F18396F1A0C2FFFCBE', '<p>float,&nbsp;boolean,&nbsp;int,&nbsp;long</p>', '0', 'F0369D708E5E4DA3A371B2C92AAFDADB', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7EE822E5344D4BE99A41B653B73160B2', '<p>throws后边跟的是异常对象名</p>', '1', '423F61937F2A4392B4BBAF948573B129', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7EEA03459E1F4EFCAA05504759EE35AB', '<p>y = 300<br></p>', '0', 'BDDCF8E09A4F471F9285BB85182F9EB8', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7EEDEDF837D242F7B6CE5804315E667C', '<p>&nbsp;write(Object obj)</p>', '0', '9C4236EEC0F247099FCF5268597F055B', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7EF0B7FC00B74C8F92D074574EDA111B', '<p>成员变量和局部变量的变量名不能相同<br></p>', '1', '6BD060F37CA8461E8BADCCBB01F5E5EE', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7F297C3984FE48A8970DC151F1831B73', '<p>&gt;=<br></p>', '0', 'CB85CC56285A4818B23686386CFED7BA', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7F365AAA3D00465297FE2CE1C66A2BD1', '<p>BufferedWriter的write()方法写出字符时会先写到缓冲区, 缓冲区写满时才会写到文件, 降低写文件的次数, 提高效率<br></p>', '0', '8FCBC819AB19401D9FA03CAF9F98E774', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7F3AF84B81904BBC9DF3A3B1D1F13ED7', '<p>Object类中定义了所有类共有的方法<br></p>', '0', '0843D282F5804FCA91AF2ED1C0400BEF', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7F4FB84568FD4C43AF463DD904B24034', '<p>System.out.println((0&lt;1) &amp; (99&gt;100)); 结果为true,由于短路未判断(99&gt;100)<br></p>', '1', '2EC24E4721784A96BDA14C19599D976E', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7F59B366010A4A9DA27CBF57F570DAA6', '<p>arr和arr1存储在栈内存中<br></p>', '0', 'AE1170F6E882483EAE0861501243FE82', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7F5AEC92346247DAB63B5BC390FD79A1', '<p>&nbsp;print();<br></p>', '0', 'D3C8927E157C4962800409D5D21A5F0E', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7F6EE01032A9461B8DF75EEBE58FF590', '<p>如果是false，程序结束退出<br></p>', '1', 'D909E65D60F44C7B89EBCD3F65C1B5F6', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7F76511B3CDD4B3294EB90002E687EF8', '<p>数组的最小索引是1<br></p>', '0', '37890E00DE1B4C458A90287102070D7F', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7F9CA85FB3B44A25A63DCD3B83DD873C', '<p>类名.getClass()<br></p>', '0', 'F7F7D00C082D4DCB94E2CB544ADC2B1D', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7FAFEC2ED1C74500947DFBB7C804B691', '<p>.exe</p>\r\n', '0', '5C193B5B31B3474C9B3DF2399A0DC00C', '2016-01-05 10:51:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7FBD558B4B9E4605A7939BEA7FA5691F', '<p>编译错误<br></p>', '0', '611C81A51D714D5DA29ED4F5F25FEE60', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7FBE4A466C904E3DA7DC8B4E4D912232', '<p>以上说法都不对<br></p>', '1', '86897709AA9E4E049FCD8D8E19EB5706', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7FC069BE2C8542489F3D5DFDE058FBC1', '<p>new arr[3]会在堆内存中开辟3块连续的空间<br></p>', '0', '64757B20D9704DE8863EB18005700F1E', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7FC0F9A639744F26841C879FA9F7755D', '<p>equals()方法的的返回值是布尔类型<br></p>', '0', '7F26954476384AE180AB99B83770644B', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7FCB69336D01468F81CDBE462AA8A8C8', '<p>sum = sum+arr[i][j];<br></p>', '1', '723FBF5D4AFE456CA69CA953ED84DDEE', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7FD7CBFDCDF4432B9FBCF511D1FD0C2F', '<p>重载方法的返回值类型必须不同</p>\r\n', '0', '40BC6D3CB9894074B3229744A9B46128', '2016-01-05 10:58:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('7FF14CBFF0584148ACB19A96521D405B', '<p>getRandom(int&nbsp;i)</p>', '0', '45893D65D9D54B02A3DC7034F68BA22D', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('80127572537D49658031019E69F35606', '<p>转成后的List集合，可以往集合里面添加元素</p>', '0', 'F605CEE3377643D4A51B22A59CA20FFB', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('80467264E92949B68FF18D704A26C555', '<p>a<br></p>', '0', '979217D547154A34BCF2AFC3EB0DF9A6', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('80524347F3684D0D9139A9BEADABF977', '<p>Java接口中可以被多个子类实现,一个类也可以同时实现多个接口</p>', '1', 'C335D49C132E41599266BC11F1EDE53C', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('80553899EF344E608710D877A6FD65DC', '<p>&lt;&lt;<br></p>', '0', 'A475F62D72304E93A56EF57E60AB2F49', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('80796CBE083C486D95F1DD65F64CC4B9', '<p>此方法会报错，因为格式不对</p>', '0', '2B10E85490784C558198CD8CAFEAB066', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('807EC98C21F546E6AE07A2FF4B990BB2', '<p>&nbsp;read(char[] cbuf)方法表示将读到的多个字符存入字符数组cbuf中<br></p>', '0', 'AA60F98945B64B2A9EA5119DBEE91558', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('80858B170C8F4A93A05543F4C8B6EE10', '<p>arr[0]的值是null<br></p>', '1', 'AD39D5C392CA47D78330CD05001DC279', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('80A5CEA2266A43179A1F47A67B5D4BDA', '<p>让这个类继承Comparable<br></p>', '0', '54EFE16BBF6641AA8BA77FC97085368F', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('80AE274ED60B4326AE6B7C5960E6D92D', '<p>方法申明上的参数叫做实参<br></p>', '0', 'D03C5B366ED040E59A5EB7F0847BE3FA', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('80AF5B83DACD42B990C580CA0132C409', '<p>可以隐藏成员方法<br></p>', '0', '4EEAF542C47F4630921BEB3D3DF56CA8', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('80B9ADF3C8C34B62B0C987562FEE38A7', '<p>执行顺序是: ① &nbsp;③ &nbsp;② &nbsp;④<br></p>', '0', 'E46FF59D07254629BFC567C7816BDD44', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('80C3405C971B400DAB7DECE806212558', '<p>interface&nbsp;A&nbsp;implements&nbsp;B,C</p>', '0', 'A22444E251D24147A203939C7CF24DD4', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('80DF1F9C854E4919B370E7E7DE6CC9F7', '<p style=\"margin-left: 40px;\">int temp = arr[i];<br>arr[i] = arr[i-1];<br>arr[i-1] = temp;<br><br><br></p>', '0', '14F36999518642BB88E0EF9BC295CB74', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8108D118432B4BCF846D25E7B5EC03BF', '<p>得到的结果是10 <br></p>', '0', '12FBDA3104CB47028FD6489140714F01', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8109C6DB37EA4C51BCCEE26466A614FC', '<p>[a-z]<br></p>', '0', '023743024EA94486BBC98B4E82A7E7AC', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('810F19E4B1B9463C9D8AF2E616BD06CF', '<p>字符串是常量<br></p>', '0', 'A59247A6CE834AC1AC4E101A93C28E88', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('813D99FC00FA47B39F40F7465FD6E6EF', '<p>当对象使用完时,都必须人为的释放所占内存.<br></p>', '0', 'B95A2FCC46DC4E41B4B43A6BE35E0BA0', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('814A96114D7F47B9A733C4818A57C139', '<p>java.util.Collections<strong></strong><br></p>', '1', '31839F2DFE7844D7B2D244FBDF93D4BB', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('815060CF9CA34EBBA152608C7DB59294', '<p>int indexOf(String ch, String fromIndex)<br></p>', '0', '6FC6703501074930A7659F20DE08FEF7', '2016-01-02 21:48:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8160A06D57A84BEFBF0A358C9CD7D806', '<p>构造方法名不能与类名相同<br></p>', '0', 'B981F6DAD9A940E2A34A6B943FB73FC4', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('818DCBB1E0AA4B899403C61F71246387', '<p>关闭计算机<br></p>', '0', '250F9DE779A24CF591EFD2662443FF2C', '2016-01-02 21:48:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('818F1F8D24DB4AEABB2AA85A3C9DCA36', '<p>谷歌<br></p>', '0', '080FDAD8D4874AF3B15A83F0591A2163', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8195F439BE7448E88461B51170E9A844', '<p>同一个类的对象共用同一段内存<br></p>', '0', 'B6D9EF7FF95A4E9D85EF00C6888A59C1', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8196F44B3F424540B291ADB598BBB192', '<p>比较器:Comparator的子类对象</p>', '1', '4C2A73111D6E416EAB9047FF3051521E', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('81B4712EF1354E6C88087361637D1A1D', '<p>去除字符串空白和尾部空白<br></p>', '1', '6AECA4D395874C1DA874D0C88C1A7AE1', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('81B592EB95704039A845DD6203203E96', '<p>\\r\\n<br></p>', '1', '8C96C499F57C46CCBF96C27956FAFD7A', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('81CC90060874459DB4D782847FA093BB', '<p>Math.random();</p>', '0', '09F34928060A46DFB9C1C0FD308D2508', '2016-01-02 21:48:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('81D0BD92C9214D1883E2CC0F387627F2', '<p>集合体系中有很多子类<br></p>', '0', '68C9BD499C284A208690688ABBDB0226', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('81D0DB1C5CA243F19624A802A7CFE938', '<p>import java.util.*;<br></p>', '0', 'B5B711E7C367447CBF57FAB18A88281B', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('81FAF721578E4AF18E9C7DC605419309', '<p>八进制<br></p>', '0', '33F17F63850A47328FE0DA143089B374', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('820EEB5CDB8E4F04B16BA45F64F7A12F', '<p>定义枚举的关键字是：class<br></p>', '0', 'A3C61268AFA4459383DE274E8FB3F6AF', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('822A6F531D0942648CE10EF4838757CA', '<p>可变参数实际上这个参数是一个数组</p>', '0', '7F6F232F51E74EDB9127624A3053E707', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('826104C6925042C1AD9FEDFBD8C7BD01', '<p>ObjectInputStream流是读取Object对象里的内容</p>', '0', 'DBEF0A429C86455EA9EACB2E98F4EDAC', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8271D2D5B6D14365A38B2634A775A314', '<p>具有getKey()方法<br></p>', '0', 'C7DBA0E790634060BA8E48F26C438FAB', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('828D2296464641428ECC42E9C6B16880', '<p>Map是一个抽象类<br></p>', '0', '2415971B99164573BBD7B3D73E85FBEE', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('829F155AEACB4A068C5FBE6D9913A42C', '<p>①③②④<br></p>', '0', 'F703041585B24DD19CA1C1AFD7B5CDEB', '2016-01-02 21:48:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('82B027C10D5041F6854CEE1387E48347', '<p>charArray();<br></p>', '0', '1D145EF1AF534D06A1B09823C50527FB', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('82B38BB6882D416F836EF4EBE8161A13', '<p>int[] arr = {1,2,3};<br></p>', '1', '0ED9E5F47F9843A4B8235F48E7F7BD1D', '2016-01-02 21:47:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('82E2C83024904D06A21A5A580CF4AF3C', '<p>星期中的某一天<br></p>', '1', 'C090E3279C78499FBA2C55109E996B79', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('82EF398D5DCE4A3DB6AD841BB89B30A3', '<p>this可以调用本类的构造方法<br></p>', '0', '36E6EE66AE9F4140968D5FBCCB419414', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('82F1A6FD44164399A5037F11558B5752', '<p>Map体系<br></p>', '0', '2869700F7F8447529486E00C338F28E5', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('82FA4DAD04E34F02A0FF985F91D9A03D', '<p>Eclipse的Package Explorer代表工程视图<br></p>', '0', '1871BE8CAFCF45989ADF9A9F8EAAA4E4', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8313071832034554B10284E378FFA14A', '<p>getMessage()<br></p>', '1', '6564034877DC4650AFCD54F1B2AB5780', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('832C8A1D4E974734B1A1B5332FCF541A', '<p>StringBuffer是一个不可变的字符序列<br></p>', '0', '2C43CC1C4D1E4373BF8F2932AF7089E2', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('836398AA94764F5CBC13A0485E42A297', '<p>getInetAddress()<br></p>', '0', '0AB1A30AC8D84D2EA68853FED6B1CC3D', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8369FDEA5A584AA9B6C0F59CDA2D2FCF', '<p>定义包时，多级包用.分开</p>', '0', '813FEBFE81644A5FAFA2E072C6474F61', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8375059DDE81422FA77768E7BE48DCDA', '<p>泛型只在编译时有效，无法在运行期获取泛型的具体类型<br></p>', '0', '4710BBC3C4474A9687DC8788182F67B7', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8386B0325533443AAC9D4D0BBF5BE429', '<p>如果一个类没有抽象方法，却声明为抽象类，那这样做的唯一目的就是不让其它类创建本类对象。</p>', '0', '6F75076BEEA64ABBA891BF6E26843693', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('83A24C5289824B618A16BA9240A7152E', '<p>不管是什么样的数据都可以转换成int类型<br></p>', '0', '31EDA5FF01BF4F90912E7E69883F341B', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('83A4B7E134464B449B4A60E2616F9A2F', '<p>98<br></p>', '1', '1704CF5FE5D3469DB943E64C1D6DE4C2', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('83C32D9A6E7A4B84958F748144A232D4', '<p>6</p>', '0', 'BD4CA8CD3EE44A24B3F1C1B019FFD1AE', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('83C519F56B2C4A55B01326A9D248DE90', '<p>0<br></p>', '0', '45C35EF208D84B21A0898129B87180A7', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('83E3305BE36B491B8C15F5C712B3AEAB', '<p>12个<br></p>', '0', '73EA9A4A062D4C5991A587536E982FA8', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('83F1BB98123042AE802C078F317FC059', '<p>是把内存中的字节数组内容写入到文件中</p>', '0', 'B033C9EF48E6459E967DA4F5D6B4AF71', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8407FC272A9E477391EC445052B98E8D', '<p>md<br></p>', '0', 'EC033C2AC55D4A8C8D14153C9FA79CCF', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('840D48D2D1A34DA59A368E008458D0FD', '<p>ObjectInputStream是从文件中读取一个对象出来，读出来是Object类型的，需要进行强制类型转换</p>', '1', 'DBEF0A429C86455EA9EACB2E98F4EDAC', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('841888FD2F8147629BC26E7FBC66D265', '<p>用类名调用该类的静态方法时加载一个类<br></p>', '0', '7B7F65CA929448A689C6B5D5CD4FFDF0', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('84279FF3C17641C48B8ED9E573175736', '<p>10<br></p>', '0', '1FB777DEC2AB4491BDBAFD1C22C66F5A', '2016-01-02 21:48:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('846666951F864F09AF6289BA5F214C3E', '<p>abcd<br></p>', '0', '784D14DF68E14649BE511EB95E19A470', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('848CE61E66AA44C5BDD8777423581BB2', '<p>都有默认初始化值<br></p>', '0', '7E0BDD89EB604900962EBA838DD41CC3', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8492FFDB0F2D412E9495D7C6F48615F0', '<p>以上都不对</p>', '0', '1D27400B24294D5483ABACEA7527475B', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('84A09693F9ED4950A457C725B544F1DC', '<p>设置日期对象<br></p>', '0', '8BCBC2E1D3294EAA9FF5594E42D3E5C7', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('84A18CB7B7244F0A9D1FEDEAD193DD19', '<p>JAVA<br></p>', '0', '5DD25F2218824DC0A2E4E7A19AE9EF2D', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('84CDD7AFE573454BA7D4DA0EB1703D6F', '<p>true false<br></p>', '0', '8A1BDB49311241FD8A63F194BC433D3F', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('84E2D5FD76E941D8B25E32DD11D663D2', '<p>打印机等<br></p>', '0', '7D055CB4494043AEA4E9430901957716', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('84E890368FC942FC96410DBB587ACB3D', '<p>8</p>\r\n', '0', '3C802AF0274E4FCB97401CA6E5FDD722', '2016-01-05 11:17:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('84F60C9C92764C389CFFF8A10FCBACE0', '<p>子类可以继承父类的私有成员</p>', '0', '11CFABFBD4B24275A59916CA4A4EE08E', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('84F67F640BDF48CFBB7D34667F2CBBF1', '<p>dcbae</p>', '1', 'DACCE3CDF70A4369877FCA4442FEA708', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8500137BB032464C8ADB52283F293825', '<p>获取迭代器对象<br></p>', '1', '9432D0FE7E164BC6ABC8AD6EA7998CE1', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8500F632E3E348208A4F02E43D173E07', '<p>return 就是结束方法<br></p>', '0', 'A06316D8090B4479B8E165E59459F067', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('850D6DC59C904B34BB27DA37678F8355', '<p>b.length的值是3</p>\r\n', '1', 'B365A04AA4394FDD862A972F98CD81BD', '2016-01-05 10:50:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('85384FC845DC409288122AD9703ACF24', '<p>==和equals都可以比较对象中属性的值<br></p>', '0', '69B956F2AF6A4DE9AFD7EF106E672FC0', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('85394A14A7FA44E8896948FB35CBC069', '<p>edcba</p>', '0', 'DACCE3CDF70A4369877FCA4442FEA708', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8542C78BCD464AFE90DBC07366350A5F', '<p>show方法可以接收Person类型的参数</p>', '0', '70EFE4CF216445AA99F14BB8FB7BF79C', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8547FFF03E634343B3D5D031BC47B094', '<p>==<br></p>', '1', 'A1A018F0E1ED4528883587F6C4356DF7', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('854FE02AD88F486198C8AE1A1829A36D', '<p>饮水机<br></p>', '1', '8CD09E7AEE354B5986F896355F138795', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8557ABAD34B040B5B335C7E9939F6EB4', '<p>arr,length()的值是3<br></p>', '0', '53FFB5CEF5B74A0AAAC32872249A1EFC', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('85682B249BF34A619FFB12DA745A62B9', '<p>它里面包含了日历字段<br></p>', '1', '036DFCF4B15C42B49C06007CC9F18310', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('857104F16F5C4F139DD21F86101E6CFC', '<p>由于Math类在java.lang包下，所以不需要导包。<br></p>', '1', '9249DAA6C0ED483F982C0959E0F90EAE', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('85816BDC62CC461988C0F25F774AD0C7', '<p>&nbsp;多线程是指在一个进程中同时运行多条线程</p>', '1', 'DCD9AD1699694ABFA8E944983F26F017', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('858283A46C40431FA10514D8ED04672C', '<p>BufferedReader<br></p>', '1', 'D575FB6A65FA4EA9B1AC66964876F719', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8595C97044164A4FAB6B50514FD3EA54', '<p>arr[2]和arr1[2]在属于同一个地址<br></p>', '0', 'A896AB991E4A408D8E24F851156CD835', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('85C05067A7B149EC8090EFA28E3EEFC1', '<p>字符流读取字符, 就要先读取到字节数据, 然后转为字符<br></p>', '1', '23A1BC07261E4D148BCFF7800FD73746', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('85E9AF67BF074401B051E8F07AE9B60A', '<p>StringBuffer和StringBuilder的方法不同<br></p>', '0', '93CEA6E6E93541848B24BC750E0EF9E3', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8600D50FA4824D39B626DE317C74D6B1', '<p>装饰设计模式<br></p>', '1', 'E0A6C161809B45E4A1AE6465A1BE19F5', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8603BE0C5E3C42AC965783BF687FACED', '<p>调用exception()方法<br></p>', '0', 'FA00992F4283462EADC6D32A015294D0', '2016-01-02 21:47:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('86062F8E9EEF422E864A3B06321CC8AC', '<p>输出结果依次是 \"Hello04\"，\"Hello03\"，\"Hello02\"，\"Hello01\"<br></p>', '0', 'E044C868B30B47DF8E38653F878C0DD7', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8632A9F4F4BB4B17BF740410F8987720', '<p>以上都不正确</p>', '1', '7F6F232F51E74EDB9127624A3053E707', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('86409FF3C5F948B4B8E2A5F3D7A2FE14', '<p>HashSet的add方法没有返回值</p>', '0', 'F6F150F653AF468E92A847EAB9D32540', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8644E65084644F318C726F52CE45F586', '<p>false true<br></p>', '0', 'DBA85C4AA13D48568298D942257B447B', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('865C1B76C50740D9883EFAE7E566C2E7', '<p>16</p>', '0', 'B1D97BDD72364C67A1D59562EED7F17B', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('86879E216EA4469C86206C3820703EFE', '<p>接口编译后不会生成.class文件</p>', '0', '0F737DC4397A448CA1ACA1875D040FB2', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('868BE782F0DC4EE8BA05DE7A0612422D', '<p>0</p>', '0', 'E279B9ABBE7D4388B25EDB69A3610DAC', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8693FFAF5B5A4F58AC4CE81C25CC90D0', '<p>class&nbsp;Circle&nbsp;extends&nbsp;Shape{&nbsp;void&nbsp;draw(&nbsp;){&nbsp;}&nbsp;}</p>', '1', 'FA8A7E3C7BAA4C9C9C34C59417EBAC70', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('86A3BC6928C6446C9F290FAFCDB648D6', '<p>集合只能存储基本数据类型，数组既能存储基本类型也能存储引用类型<br></p>', '0', '84C4F3C13BCD4BDA90E2017CA9EDD8E2', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('86B7085DF3B54B82A9FCD2EBD770ADA1', '<p>List是一个抽象类<br></p>', '0', 'D056B5E073414D30AA34FAC661845B39', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('86DA1B26BF9A411A830C8E7873F4FFE4', '<p>6</p>\r\n', '1', '7D8545CB8A29471C93117419881D2264', '2016-01-05 11:03:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('86E448E6EAC346EE9D6605CF11543823', '<p>d</p>', '1', '7CEFF1E7084E45CEAB76349F5B5B1822', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('86F48100901D486B83A44CB70D7E5902', '<p>new Object().getClass().className();<br></p>', '0', '82F3B36967DC4361BA036A1EB7EAAFFA', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('870786547196408293103B31196FC31A', '<p>toArray()<br></p>', '1', '6D28595A62734E56AC3C6B291A789DD0', '2016-01-02 21:47:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('87356B1B44544C57B5D29796F84C1523', '<p>PrtScr<br></p>', '1', '3E18BF9C7CF74C649891D16DEF8662EC', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('873E96DA02414CE7AE857A44E5FBDD4D', '<p>getInt(int&nbsp;i)</p>', '0', '45893D65D9D54B02A3DC7034F68BA22D', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('874EE24B823A4094AF8881ED79F60F34', '<p>在控制台打印打印错误信息，中止程序<br></p>', '1', 'FA00992F4283462EADC6D32A015294D0', '2016-01-02 21:47:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8787BE8EC6CB4B579C828805FF60D184', '<p>编译报错<br></p>', '1', '1D1391BF3D57479DA6CD4B43F93D454E', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('878B1F8DCB354CB0B9C9094AA8657ACE', '<p>substring(int start,int end)<br></p>', '0', 'EA435461E9804BB3BD076299F94596C9', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('879EFD95FD7843E79C68CF89C0DC22DC', '<p>i = 2&nbsp; &nbsp;j = 1<br></p>', '0', '25D9A255AF234A598AE8133A7FD59402', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('87A394EA9A1C46BCB65B4DC720B35A01', '<p>将数组转换成字符串<br></p>', '1', '7CECADC2807A4A9393C1F4BA2D5D4C1C', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('87A7CC4FC4634B239B8AC4D5E1991008', '<p>k=2&nbsp; n =3<br></p>', '0', 'BC67217855E447C0B7CEF9BF7BEEF3EA', '2016-01-02 21:48:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('87CB4F94E3F7460DB52222522AC73247', '<p>OutputStream<br></p>', '0', '954F6308912B4238ADD722EC4CE2E16B', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('87DD217EC9284640957EE947E5DF180A', '<p>1024*8<br></p>', '1', '3CCE2C9289C147A886A36B03E3AD9553', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('87ED7EB313BC42D88299E16817BC6203', '<p>LinkedHashSet属于链表结构</p>', '0', '03E23694E6F548AB8D0BCBD21E69CAAC', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('87F626EB9E9249DAB4F9BCD6D74F4ADE', '<p>一个类可以在继承另一个类的同时，还可以实现多个接口</p>', '0', 'FA15B559892248939704CFF2784239AE', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('87F72822B13B4A37A3157DC8BEFBB694', '<p>arr可以是数组也可以是集合对象</p>', '1', 'DA1E40CB8C9D4BA79365EE3900756613', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('884A87612A7A40568425D71178395097', '<p>5</p>', '0', '4052B4D8ED1240428210C2AC3E3479F4', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('88635EED588B429C8ED2D71A1F8F9DB8', '<p>d 中存储了Demo类对象的所有属性和行为<br></p>', '0', 'A324A02D815146AA85681768D985ED0D', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8875AB221148497FBFE868758AFE2666', '<p>8</p>', '0', '5C0EAF5A51694E2FA4ABC35E4A865191', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8875F44EE4D34D91B6B0BE82D002070C', '<p>定义格式错误，此方法中&lt;T,Q&gt;应该改为&lt;T&gt;</p>', '0', '2B10E85490784C558198CD8CAFEAB066', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('887D1FF10A7B4A07B7D8831DA4D43199', '<p>可以隐藏成员变量<br></p>', '0', '4EEAF542C47F4630921BEB3D3DF56CA8', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('888773AFC5824AEE9886185307B855DD', '<p>String是一个不可变的字符序列<br></p>', '0', '5594D4A74E104DF689D44CF630F808AD', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8890C88FC6A34EFDBA20F81C63C24184', '<p>Collection是集合的顶层接口<br></p>', '1', 'B24E9C9EAB734CF0807C1D219DA66CFA', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('889D3965325845528309D39E6AD7BBFB', '<p>getDir()<br></p>', '0', 'D7A4A57FC12E474CBB9AE88C0D135A9D', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('88B1CE822C4548F39F5E7B33C96A7A75', '<p>.java</p>\r\n', '0', '5C193B5B31B3474C9B3DF2399A0DC00C', '2016-01-05 10:51:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('88B308410AE84F8DBE7CEFDE86F9AB33', '<p>7</p>', '1', 'BD4CA8CD3EE44A24B3F1C1B019FFD1AE', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('88B847187CDC451C8035173B1BDB4201', '<p>方法可以没有返回值 <br></p>', '0', '220EC8E9622F4702A57A59C54B932E56', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('88D3C0DD60A64E97BDF6A88668E4C8A7', '<p>getHosstName()<br></p>', '0', 'AB59FCAF7A41409887272F205C95DB7E', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('88D7DC451D1D4C7099B29FB3C0F33341', '<p>7</p>', '0', 'E1C51F373914491B8DB8D8BA07AE4CBB', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('88E43CACD7FE48F286F6BD8963D664D7', '<p>main必须定义在一个类中</p>\r\n', '0', '9EF88C52CDF24EF3B58AF38AB8AF9F64', '2016-01-05 00:08:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('88E7F2763E30451790249995071C7352', '<p>该方法会暂停其他的线程，直到当前线程执行终止。</p>', '0', '8F1AA4FB4A414E7EB5D9BE30B03CFD8D', '2016-01-02 21:47:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('890675D7E9FA4183AA2A14AF6D46587B', '<p>一个汉字占三个字节，三个字节都是负数<br></p>', '0', '05891635210E477EB6CD9E35F89DE0F8', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('890DCBD407784BFFA0764AE3BAEBE156', '<p>20 \\r\\n<br></p>', '0', 'EF6415F2F8854DC4973ECADB5D14546B', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8917D51C17114984879EBE065A9518C3', '<p>Eclipse是采用可执行文件(.exe)安装的方式<br></p>', '0', 'D41C9426C4BF4B33BE35AD5885478B07', '2016-01-02 21:47:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8918F8FA64874BAFAD66D9792E877C76', '<p>输出张三<br></p>', '1', '4576014BC221460894B8283B2945D4F4', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('891A4E90A2A1460485E1A5E91013104D', '<p>匿名内部类编译后不会生成.class文件</p>', '0', '0F737DC4397A448CA1ACA1875D040FB2', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8923C045115B4E72BD1DD139159699D5', '<p>new Object().getClass()<br></p>', '0', '82F3B36967DC4361BA036A1EB7EAAFFA', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8927175F7F7B414F87E185AFC5D078B4', '<p>jdk是java运行环境<br></p>', '1', '6DCE6229ED1C4EE2A7E672038B81E499', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('893083E2164643DEBB969418317F9549', '<p>static<br></p>', '0', '1D294DBEC5524BC6A1D5C631911AF8F7', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8932A16ED8BD4D979B1977CD9F6E32C8', '<p>多线程的形成原因是CPU在多个线程间做着高效的切换</p>', '1', 'DCD9AD1699694ABFA8E944983F26F017', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8933983FEB494A86896CF68B2472CA65', '<p>按需求可添加若干构造方法<br></p>', '0', '53972A8A8B14458C8341799FFA6FD180', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('893F8127215049CEA0A338E259D8E929', '<p>被final修饰<br></p>', '1', '525B7C54E37D46EAA896B2EDE0BBDD43', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('895B990AD3CB48718C428AD9D6B2876F', '<p>某个类的对象被创建时加载一个类<br></p>', '0', '7B7F65CA929448A689C6B5D5CD4FFDF0', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('89643952C2CA412B9D498701AE736901', '<p>Serializable<br></p>', '1', '1BE12F8B802B4621BF60F5D3D05F0D73', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('89846E660E3F43C8BC1C7A15FB66674A', '<p>0-1024之间的端口不建议使用<br></p>', '0', 'EAC6F8DD5F76422FB9B4EC9FACF0B092', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('89854B5687EE42B6AF02E3BA0BBF10AE', '<p>FileInputStream<br></p>', '0', '40488E49581B4BA5B66F9E7B5B6D6490', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('89943302D9D9416981BC7EFA3CE38535', '<p>静态修饰的成员方法可以访问非静态成员变量&nbsp;<br></p>', '1', '6194C4C981614D31BB6573E45C2AFCFC', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('899514CD8E6447A4913D6B957BE62017', '<p>true</p>\r\n', '0', 'AC5BA8E858B44799AB598A128F9FEC2C', '2016-01-05 11:11:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8996AE1954254E3B90DB369D11DEA270', '<p>5</p>', '1', '47F0A171A3524570A88D5B5DC293A113', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('89975E1679884BA4836B28594DE36B18', '<p>int&nbsp;num=s1.compareTo(s2);</p><p>return&nbsp;num==0?&nbsp;num:&nbsp;1;</p>', '0', 'A7BD754E6F6A4E4EADAA39E35EABC17A', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('89A748B8F7034779AC1F2D49EBABA4B2', '<p>do for循环<br></p>', '1', '7C22E6E486064C6481EAC9B3D303C0B5', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('89D6F1EB82934E1887986D90CBD53BEB', '<p>Ctrl + X<br></p>', '1', 'BC98BD294FDB43BD990D0EFB8078A55E', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('89F713553F9D47949BE8A79FA5230DFB', '<p>以上都对</p>', '0', '69279EA71E7E42A188385BBBF7C2E2DF', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8A1B9C2BF75E431A8EAB0DAA2FFFAE20', '<p>--<br></p>', '0', '02A7752C2C3540CDA19331A0A6A4C066', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8A2D499DAFFB4B5E92B23D7D8A4E9A94', '<p>抽象类的子类可以不用重写父类中的抽象方法</p>', '0', '91266B7CA73B4612BFB1D9F28956C1C9', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8A30B5456DB949DCB0923F729AC83E50', '<p>Vector里有size()方法<br></p>', '1', '0AD033E697B148A4896ADE14CEAD8D3C', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8A4257E9BCD047C698616B499CC74ADE', '<p>String</p>\r\n', '1', '53B4AD107B914B41ACCF48E9D2BC2FA9', '2016-01-05 10:57:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8A737212B3184C3790486E14CE6C3D90', '<p>成员方法，编译看父类，运行看父类</p>', '0', '2CEB58B718AF4C14B43FB3F1349ABE3C', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8A925850D32F43AB8D7E3C81FC2E46BB', '<p>编译报错</p>', '1', '37F2ECEE038043979CE8C2DA2E9105DE', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8A9B7DAC10C24F218DD6B5F8D7571114', '<p>子类创建对象时，先调用完子类的构造函数，再调用父类的构造函数<br></p>', '0', '916D511C49184BD182E2138EF748B917', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8AB385E837A240068A12C0F38BE300E4', '<p>多线程的形成原因是CPU可以同时执行多条线程，处理多个任务</p>', '0', 'DCD9AD1699694ABFA8E944983F26F017', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8ADA1770A8F541FD8C0FAB3C7D6ABCB4', '<p>String类中继承了Object类中的equals方法<br></p>', '1', '10440D70AC824DB0B71F0067532A0027', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8B0A90530CB3467284673D08C1B96271', '<p>不可以统一设置Eclipse代码和控制台的字体<br></p>', '0', 'F4F64204867443F6B7BAB2FA70C00131', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8B0E0F47604C481DA064A3E171B5D927', '<p>要存储的类实现Serializable</p>', '0', '77EA5743DA954BF8A0F5901E7AE17F65', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8B0F2D867BB5466EA9B3C65325535FA1', '<p>直接定义char数组拷贝<br></p>', '1', 'F038CBE9AC384DFEA52E7CA1D0712416', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8B209716B70742469312DEB346A84FAE', '<p>FileInputStream类的<strong>length</strong>()方法<br></p>', '0', '7832171B68494338971BED67B760058E', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8B24C246B4774A9287EFEE3392FB0367', '<p>帮助文档可以让我们开发在者更好的了解JAVA语言<br></p>', '1', '5C15B35EA1F44D5582CCD8EF298A7799', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8B772391760545C0A69BDEEC2ADB9AFD', '<p>load方法将Properties对象中的内容加载到文件中</p>', '0', 'CE396BF9BCF94F6BA3E7B417D0892085', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8B8B23DD078843D7B041D63BC52E5FD7', '<p>getDir()<br></p>', '0', '9B34B88C8C0F4C799AD962B7DC08FB5F', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8B8E81D443E74AD58C7FE05F5C9D756A', '<p>运行报错，报空指针异常<br></p>', '0', '030A511D18614F6E94C789EA1E3A9F6B', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8B92E85FC56B45588890C3AC45568413', '<p>否</p>', '0', 'E572A6C1E75146FE892D1951AC55C5ED', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8B933FE47DA84A1986A359D77908CED9', '<p>不能这样定义<br></p>', '0', '1ABFBBEAB95D4470ABCAC064478915D9', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8BCAAA4A1FAD4419BBF0124C8AA63143', '<p>static 被jvm调用，不用创建对象，直接类名访问<br></p>', '0', '00381D8AF4D14ACC9BD1B5A02FE67683', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8BCEF42337F54AF0AF498437CA39C4AC', '<p>实现一个接口用implements关键字</p>', '0', 'FE9CC184031F458CABB4A3434A9C2438', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8BF20AC6BC33471EABC24055396000A8', '<p>set()<br></p>', '0', 'DFF41E4B9E094818AD405D0B74BBF898', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8BF9E9526E224D84A190328CC803D573', '<p>this代表当前对象的引用<br></p>', '0', '7AEE9BAED57949AE9023535451C9CD2A', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8C2DE62A71684641AC8B4DFE43C3501B', '<p>arr[3]的值是null<br></p>', '0', '82D8B52B82CF44E6AE7EA66A24C6A7F5', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8C5771A211A443FCAE87FB5D4B8ED9B5', '<p>mkdir<br></p>', '0', 'EC033C2AC55D4A8C8D14153C9FA79CCF', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8C58DB192E4B449DA41077B113AB454F', '<p>以上说法都不正确<br></p>', '0', '1871BE8CAFCF45989ADF9A9F8EAAA4E4', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8C6BFC0F924A46AB8D96FA07252EE992', '<p>main方法的方法体重至少要有一行代码</p>\r\n', '1', '9EF88C52CDF24EF3B58AF38AB8AF9F64', '2016-01-05 00:08:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8C7BF146BE294AFFB36141B80E536F94', '<p>截取索引从start到end-1的字符<br></p>', '1', '328DFDBB71764E95BE1C7F5CF17E38F0', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8C848EF6C256482DA4EDC427D7054F4E', '<p>charArray(String str)<br></p>', '0', '1D145EF1AF534D06A1B09823C50527FB', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8CD05BC1FA544DD5A04438B482830743', '<p>成员方法也叫做一般方法<br></p>', '1', 'B4B90EB2EA6A4AA59B02B7BBC12F4A57', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8CF1BB56D6EC4694991D9734689EE148', '<p>对象的方法不占用内存<br></p>', '0', 'CF1F2A699D204A4EA6A220E8024BEB0E', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8CF50F8BE00F4791B24985C53301D92B', '<p>静态修饰的成员变量和成员方法随着类的消失而消失<br></p>', '0', '6194C4C981614D31BB6573E45C2AFCFC', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8CF9ADB36541450A81E4EB4F776503F5', '<p>这个方法传递的Collection可以是任意类型</p>', '0', '0843AAEE48DF422098782A2E877A1D87', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8CFB6F75A836462F99D7187405A73F5C', '<p>自动装箱：把基本类型转换为包装类类型<br></p>', '1', '52F74D03957B4E4399335353D3E7C168', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8D10992BB96B4DE9A63046ED1BF8B292', '<p>new&nbsp;Thread(new&nbsp;MyThread()).run();</p>', '0', 'A6D87F19B4C7479CA45F91BBF498F78E', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8D17E39B20D24B7BAC90CB0F88DC6601', '<p>close()方法尽可能的写在finally中<br></p>', '1', '5C58ACF8E5AE4C2AB1E30FA2098ACC32', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8D3615019BDD4E8EA400BC051D721D99', '<p>&nbsp;jvm<br></p>', '1', '8C77818A90E64208AE970DEFE35BE7B7', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8D3E244DF17D4513B2F8D5288E42A162', '<p>InputStreamReader<br></p>', '0', 'F8D4337DFAE44C239026362752B65868', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8D42831DAD4740BF9A6C1364468CAA31', '<p>true &nbsp; true<br></p>', '1', '54EE8161EB9D4BE4B957C6893CA832C4', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8D5E97D0DDC340ADAC9238373268BE52', '<p>Class类中的forName()方法<br></p>', '1', 'F7F7D00C082D4DCB94E2CB544ADC2B1D', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8D5F499FC4AB4BE4922E6CA5DA88CAD5', '<p>arr.length;<br></p>', '1', 'D0CEBD11343C4570937E04BC5926DC7E', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8D79A96E769F48BB881F3F4F7AED3609', '<p>使用Ctrl+Shift+S+R可以自动生成Student类中对应属性的getter/setter方法<br></p>', '0', 'FF25F22F71E4413F86B85CD668AAAE1A', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8D9842D2FE404E8480B72EE73239F787', '<p>return&nbsp;num&nbsp;==&nbsp;0&nbsp;?&nbsp;1&nbsp;:&nbsp;num;</p>', '1', '1FEDB9888FF844ED8CB40D0CE8306829', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8DA0AF130928472CB06F0775FEDBD8AF', '<p>7 &amp; 2的结果是2<br></p>', '0', 'B347EE4CED4C4BB190D2329FF3633F55', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8DBB469DE4EB4677A2B1F53CFB2A52D0', '<p>arr[2]和arr1[2]属于同一个地址<br></p>', '1', '40D8ABB364214CD59F300501FAE4FDBD', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8DCC8BE51DC6412B9B207F69313B7D00', '<p>new Fu().print();<br></p>', '1', '983E3C9038BC4A1D8A531525230D09CA', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8DF2D5CCA7DE4276A16A3C0DA76FD553', '<p>成员变量肯定有默认初始化值.<br></p>', '0', 'C30C352232A347CBA31D49BA18A9E785', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8E10A8D7AF9444CFBC58F74B13F2E0F0', '<p>Comparator</p>', '0', '8716AB4860FF450C82F1877CB38DEC6E', '2016-01-02 21:48:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8E2765038DCD41718224BA78700A4BAE', '<p>cd<br></p>', '0', 'C9C731E277614F7587CA1496206D3471', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8E28AE1983AB432781868EC77E7D01E3', '<p>只能让方法返回数值<br></p>', '0', '11AD8073BC5440578ADB14452E3D2094', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8E2C0EA8850D48D4BEC1E757179A0B90', '<p>&nbsp;abstract不可以和public共用</p>', '0', '6D8FAA56FF44400A92083E32C1EA713A', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8E6610DAAC9A496B80E9F3DE533A5E57', '<p>substring(String start)<br></p>', '0', 'EC0F5C6702344101B4BE3027F137FD64', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8EA3B0CD3DA3470489A0D47C3005ECD1', '<p>int[] arr = new arr[5];<br></p>', '0', '0ED9E5F47F9843A4B8235F48E7F7BD1D', '2016-01-02 21:47:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8EB3225314154D738C3DCB9B44BD532D', '<p>6<br></p>', '1', '1D5D0D888003473B801007FF491DBAAC', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8EDD1808747D4B5685D37B4370147F70', '<p style=\"margin-left: 40px;\">if (arr[i] == value)<br></p><p style=\"margin-left: 40px;\">{<br>&nbsp; return i;<br>}<br></p>', '1', '227695A9EEF0493CAA09E454222BC69D', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8EF3DF36D32147048B5E8F1526BBB6CD', '<p>ArrayList线程不安全效率高，Vector线程安全效率低</p>', '1', '6DB438E43B7D4B4493A4DF8BC65A09E0', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8EFDBA4B81F74DF8A99940043EC79D98', '<p>输出张三<br></p>', '0', '69F4B6F8166F4BFAA865CD6E16216B2C', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8F08A8CB1E8647A492DEE2911C9C9E53', '<p>对象的属性必须被我们初始化后才能使用<br></p>', '0', 'CF1F2A699D204A4EA6A220E8024BEB0E', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8F1E6FB4CCB2447398EE55F5C0AB3E3F', '<p>通过String的构造方法<br></p>', '0', '22093AD408C949E7B74D50FDDF7D79A8', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8F43287C1850469AB870D6F52B48C92E', '<p>try中<br></p>', '0', 'D5C23625513E46A5B20CC5513DD369E9', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8F461FD06BDA4080B6F2C1425B74CB4F', '<p>&gt;&gt; 左移,最高位是0,左边补齐0,最高位是1,左边补齐1<br></p>', '0', '73175E9E137A4486BDB17BAA2BE0C394', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8F4A75ECE3644E829468242E87030E05', '<p>删除数组里的元素<br></p>', '1', '637B02298C46445AB08CD99A898ED2E4', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8F4FB3800E804ED1BAA4F4AF48297965', '<p>如果条件为true,运算后的结果是表达式1<br></p>', '1', '021EA54393314F53B935CB6780D8F0A5', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8F54AA5B069D43C79A324201292B4DF2', '<p>main方法的定义格式为：</p>\r\n\r\n<p>public static void main(String[] args){</p>\r\n\r\n<p>}</p>\r\n', '0', '9EF88C52CDF24EF3B58AF38AB8AF9F64', '2016-01-05 00:08:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8F7022EDB0FB4C2DB672FACB27E07D07', '<p>InputStreamReader<br></p>', '1', '694054E43A514284AD1CE42B86917259', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8FD830018BB1431D9B1DB17C7F82EB41', '<p>&nbsp;Outer.Inner&nbsp;oi&nbsp;=&nbsp;new&nbsp;Outer.new&nbsp;Inner();</p>', '0', '792F6FADFBA249779275F57A33C37FAB', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8FE51E5745A747C0B14A0101B227EE52', '<p>引用类型，对象中的属性不可以改变<br></p>', '0', '68F041CDD39E4CA8B37588E30C716131', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8FE6C8F693FE41C08498DD5C6CFA9ED0', '<p>通过StringBuffer的构造方法<br></p>', '1', '22093AD408C949E7B74D50FDDF7D79A8', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8FECFBA3759942FFB38B30E7D23CBEB5', '<p>此方法返回读取到的字节<br></p>', '0', '7F6C3B9BF0854F5CA036D7F5DE7565C5', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8FF7253AFDB34F8790CFE801DAD01179', '<p>字符输入流的根类是Reader,而且Reader是个抽象类,不能直接创建对象<br></p>', '1', '23A1BC07261E4D148BCFF7800FD73746', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('8FFBE0D96E6B4D5EB9F09D0114D608F4', '<p>containsKey(Object key)<br></p>', '0', '79500A1D93AD46368158B723D5D74D5F', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9002D78425214C919EF8D710C65B16DB', '<p>extends<br></p>', '0', 'DF023BB151E44BD88EF66D5BA9FA5C5E', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('900D1A622F3A440397B40F817000E5FE', '<p>可以这样创建对象：new&nbsp;Tool&lt;Person&gt;();</p>', '0', 'F013B232A4F24439B78AFC7C747053E2', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('90104413BE5241ED901F2817FD2B59CD', '<p>判断File对象封装的是否是文件<br></p>', '0', '1B0B7BDF4F2D44F0A59E54240A227218', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9029BB74C768467C83DDD47A465D1FBA', '<p>Jdk1.5</p>', '1', '05B19DE7153D46E793BA78B89F5D2037', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('902E8B4587B2427886EED950597CEC68', '<p>put()<br></p>', '0', '2CE29EB738E0494B851E80649D5CFDA6', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('90398035486441D9A20684940149D1A9', '<p>&nbsp;class,&nbsp;float,&nbsp;double,&nbsp;public</p>', '0', 'F0369D708E5E4DA3A371B2C92AAFDADB', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('90439B7388634A5E9F57E8E710A2E70C', '<p>public StringBuffer deleteCharAt(int start,int end)<br></p>', '0', 'B6A49BDDC51A4CF397E1C43F52F475A9', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('904B44901059459CA9F89410582A4730', '<p>Eclipse在调试的时候可以使用快捷键<br></p>', '0', '111B56589A6D4100A4FB075A697424D6', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('90555A6F7110400F98DBD9FFB5AB11D1', '<p>集合的长度是可变的，数组的长度是不可变的<br></p>', '1', '84C4F3C13BCD4BDA90E2017CA9EDD8E2', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('90586156660141C084BBF4A0A6D30869', '<p>StringBuffer是线程安全的，StringBuilder不是线程安全的&nbsp;<br></p>', '1', '93CEA6E6E93541848B24BC750E0EF9E3', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9075B73B5B38445980ECD7D5F7EA8515', '<p>PhotoShop<br></p>', '1', '0F9A40D26D524697ABDA4A524D7E1C8E', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('90890343BD104516B676C46B56E280F5', '<p>减法运算<br></p>', '0', 'ED9C63FEB43D49AAA6970E24EA92C336', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('90A017E0E1B94A0DB3E9D524F3883E90', '<p>方法重写返回值必须相同或者是子父类关系<br></p>', '1', 'D55A5B0A8D3F401A9E8D9EE820D72B85', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('90A97C1366F943B2B054B70FF1791516', '<p>ReentrantLock在JDK5版本后出现。</p>', '0', '28A73EF55D184D5EA1A987DB11DB85FF', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('90C0FC590E5E406FA284E19511E37525', '<p>数组可以存储不同类型的元素<br></p>', '1', '6A4CEEBF9CC94157B1ED6D436ECC44AB', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('90D740916E694C9E979C72D6A1946ECD', '<p>詹姆斯.高司令<br></p>', '0', '9044D413056A4004B095EC7E13C4CF4A', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('90EA531C531643EAA831BFD1F907DC39', '<p>抽象类可以有非抽象的方法</p>', '0', '08DAEDCB974649E492F3DD65AADEE648', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('90F25C0E22E94B278FAFBE138115DA80', '<p>如果异常存在子父类关系，父类可以放在任意位置<br></p>', '0', 'F7B74976A0834AF7B38B52C2952E2CDF', '2016-01-02 21:47:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('910A7233E74343EDAD1E71078E1405DA', '<p>除积取积<br></p>', '0', 'F4C9C8EF4BE240C1ADDA7ED299A3B3D6', '2016-01-02 21:47:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9110D322FECE4C42A2B082B39E88404E', '<p>找工作时候把简历上传至网站上<br></p>', '0', '4075D5322C2B441D928A1E40D456EE19', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9114722B716940F2BB97F6E0A1FBC7C3', '<p>char</p>\r\n', '1', '53B4AD107B914B41ACCF48E9D2BC2FA9', '2016-01-05 10:57:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('914720BACE5D4B26A6B4AAE2C9BD74CD', '<p>DateFormat中的getTime()<br></p>', '0', '84D76288A25E41189383050ED586A9E8', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('91526A6D608D4BE18248946A41E68274', '<p>没有方法能解决并发修改异常<br></p>', '0', 'AB8605B532BA425780E3A35C9F84B36F', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9170F870C15A4B52B3D788E3D71466B8', '<p>public 被jvm调用，访问权限足够大。<br></p>', '0', '00381D8AF4D14ACC9BD1B5A02FE67683', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9171347731CA48C597FF7E9B5A6CF0F4', '<p>21</p>', '1', 'F369BA88280E4A3B85CD6AD676832054', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9173B6147AD6415A93A897ED71E2AC31', '<p>编译带包的类时，使用命令如下：javac&nbsp;-d&nbsp;.&nbsp;HelloWorld.java</p>', '0', '55B079B9F7D04073886498471192E889', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('917E4BB9FE1B421B98CD97001EA84B66', '<p>Java只支持单继承，不支持多继承（）<br></p>', '1', '97A38AC863154A1E8605832880A665E7', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('91A50585BB5247EDBD5DB3A11F156F9A', '<p>true true<br></p>', '0', '8A1BDB49311241FD8A63F194BC433D3F', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('91C14671C8B7427C83948BDC31D5AD90', '<p>可以存储任意内容</p>', '0', '3EFEC211932E4E69A8CDE98B2BAF20F1', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('91CE48218E88425B9EE0C77D7FD8C71E', '<p>它是一个接口<br></p>', '0', '18753E1650F441928BBA0651272ECBEA', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('91DD5A9D893646C3BEDB855331595714', '<p>初始化：将代码放到代码区，初始化静态成员，将静态和非静态分离<br></p>', '0', '7589802B2CA34372A08D08979F875DC5', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('91E481E3FEE74E8FA4F6713BFB2551C0', '<p>&nbsp;b[1][1]的值是5</p>\r\n', '1', 'B365A04AA4394FDD862A972F98CD81BD', '2016-01-05 10:50:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('91F22225DE2240AD84620E972DC4C637', '<p>注释指的是用来对程序的某个功能或者某行代码进行解释说明<br></p>', '0', 'E490CDF3A39043E690E3240AA06BAB4A', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('92004C797A80408787E50673796C4D16', '<p>finally是异常处理的一部分，它里面的代码正常情况下永远被执行<br></p>', '0', 'CF14E6E17877442E9724C74A118A9D95', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9204BDC323DF4532805B73BC9BCB1B83', '<p>Int<br></p>', '0', 'E9413BB2B1454186AA01B707B2AC9C4E', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9206650262AE4523BF280C04FFB9BB76', '<p>BufferedWriter<br></p>', '0', 'F8D4337DFAE44C239026362752B65868', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('921243B677F64847A7DCADBA73896846', '<p>x = x ^ y;<br></p><p>y = x ^ y;<br>x = x ^ y;<br></p>', '1', 'A9BEEC39274143529CAA33482538E62B', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('92125A0D3CD240D288A6650C645491E7', '<p>072表示八进制<br></p>', '0', 'BB64C3CA6D374D9F98818871DA2E0E2D', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9212FF1E5BE34CDABF400C7B87A456BB', '<p>142<br></p>', '1', '611C81A51D714D5DA29ED4F5F25FEE60', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('924E44252A7D449C984EF212A92EDFD9', '<p>常量：所有单词都大写，多个单词的情况下用下划线连接<br></p>', '0', 'F61A30A255A94840B53AB86B49674CBE', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('926871DB17FB47EE81055D668BD4005C', '<p>模板方法模式通过把不变的行为搬移到父类，去除了子类中的重复代码<br></p>', '0', '86897709AA9E4E049FCD8D8E19EB5706', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9268AC445D414418A25F27A93E4E2B60', '<p>返回一个随机的double类型数，该数大于等于0.0小于1.0<br></p>', '1', '581EF8E195424FE98A00D3F5CA044413', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9273260021A94134A562A5A54922B22C', '<p>通过Comparable子类对象中的compare方法与集合众元素逐个进行对比，等于0，不添加，小于0，放前面，大于0放后面。</p>', '0', '69279EA71E7E42A188385BBBF7C2E2DF', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('92A01270589B49B2A9D63188B7A38E36', '<p>toCharArray()<br></p>', '1', '1D145EF1AF534D06A1B09823C50527FB', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('92A548EF67874F31A265D14544202014', '<p>protected修饰的成员只能在本类或同包下访问</p>', '0', '5110A7A94F6C4F7A9FC8E8013D6E7B30', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('92A7BE8E7B8447B192EDAADA2DEFFAA2', '<p>.class<br></p>', '1', 'EA62BBDB43914C7284978905E43339C6', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('92C2FC6AD76C45418560873BB1A27DE2', '<p>学生类的成员变量要写在成员方法里面<br></p>', '1', '88B48617FD0D4665B7713D52AA670D39', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('92C43E6D109D4BE0B93F8CF46408E493', '<p>arr&nbsp;必须是一个集合</p>', '0', 'DA1E40CB8C9D4BA79365EE3900756613', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('92D1D662324C426A94A8E82A1EB0EDA6', '<p>Null<br></p>', '0', '1D5D0D888003473B801007FF491DBAAC', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('92D49A74A7B64DE3B97D9D378FB5B93E', '<p>只可以存放long类型的数据<br></p>', '0', '9ACB62DB28C64D218434CA9D817DF19D', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('92D670A9A9B6416B90E853250E2ED6C3', '<p>在成员方法中使用成员变量时,可以不用加this<br></p>', '0', 'B004E97AF3684BC7957CE2CE6B3C6F29', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('92DE61E97B334C9A9BCC6D3D1ED0DAA2', '<p>建议定义为1024的整数倍,但不能太大,防止内存溢出<br></p>', '0', 'E08F55F51B3148DCBB8DBC31CD0E2A9A', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('92F960529E8A409FB1ED800A039781AB', '<p>TreeMap</p>', '1', 'D61EA19FB199424B9CCDD97BD2CACAC2', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('93063A1B678C441C81BB8117F735E8F6', '<p>火影忍者/鸣人大战孙悟空.avi<br></p>', '0', 'B4445D2E69B04FD59F65D3D5BBD5D50E', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('930A3FA048E44D538418AF6F02032097', '<p>随着类的加载而加载<br></p>', '0', '024F0B258CB04508B76ED6ECAAA660DA', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('930F18760E164EEFB7F20D343F9839FC', '<p>5</p>', '0', 'E1C51F373914491B8DB8D8BA07AE4CBB', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('933A10C0F0FB480EBC1B9BCCE1D2D0F7', '<p>40</p>', '0', '6A287735F4D844A187A6A62A63377CBB', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('937823AE39A24E978C97550EA347DE9D', '<p>以上都不对</p>', '1', '6F75076BEEA64ABBA891BF6E26843693', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('937B85CD01E84501BD72821212D262FE', '<p>Collection是对集合操作的工具类<br></p>', '0', 'B24E9C9EAB734CF0807C1D219DA66CFA', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('937E7ABA7AFA4FF5B53F67C106FB9839', '<p>重载参数顺序不同<br></p>', '0', 'B4E652C0E40E4D1EB38360856ADFFC21', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('938FB215DCDD4A7D8821D8832AC3E683', '<p>具有keySet()方法<br></p>', '1', 'C7DBA0E790634060BA8E48F26C438FAB', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9398C6A324D042F68E1D3FAD3BF95B00', '<p>i&nbsp;=&nbsp;11</p>', '0', '6AC0DEC2F5444E62B028483DE5F98584', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('93A1335C3A794A9C98521B2FDD38F485', '<p>JVM默认不能处理异常</p>', '0', 'FA00992F4283462EADC6D32A015294D0', '2016-01-02 21:47:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('93BE8037EC4D42B4A482469ED3D3D858', '<p>InputStream fos = <strong>new</strong> InputStream(\"copy.jpg\");<br></p>', '0', 'DED238E982B3409BA7E2767A01A90E29', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('93D3F3D2A22F497697B267B72D595FDE', '<p>public void show(){}<br></p>', '0', '0BB77E63B8B54AB7AE7F8B315B6EB5D4', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('93D405F8B8A54120BC5C02C3C6E066BF', '<p>Collection</p>', '0', '8716AB4860FF450C82F1877CB38DEC6E', '2016-01-02 21:48:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('940FE3B411B148B09F573480310D8B79', '<p>它不是抽象类<br></p>', '0', '42C225CF6FAD46BA95AF3285E380BA0E', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('941A5DB337534667A29E2D922BE74714', '<p>该类的属性都隐藏<br></p>', '0', 'E0776C47C6974C1983E9E63838AC8011', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9425775A92C3407B8427722F709FFB0A', '<p>6</p>\r\n', '0', 'BA5E186DDF7E4012B542FECEA619047C', '2016-01-05 10:52:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('943D127B648F45A898F132370A3FA3B9', '<p>支持对随机访问文件的读取和写入。</p>', '1', 'DFFB2602D6244F6C94FF9520BF0E43C5', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('944BA94FE9AF4CCAB4A4D6BD1C3DAF03', '<p>不确定<br></p>', '0', '7FB057108FD84745BCF20A2A114D6872', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('946AA61C8BE74F32AE1A23B2623CB66A', '<p>0<br></p>', '0', 'AD8126F22B9F40CC9BB5622A40D4C415', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('948464419BC74ADBA9A9A213F99AEACF', '<p>int&nbsp; arr[] = new int[]{1,2,3};<br></p>', '1', '3E074807A73A4601A9335B2CAF606171', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('948FE9E39C3946B0980A97447D6980CE', '<p>IntGer<br></p>', '0', 'E9413BB2B1454186AA01B707B2AC9C4E', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9494C41C8DBD44FAA7390ABEA40E5BFB', '<p>private不能修饰类(不包含内部类)<br></p>', '0', '239108173BE64DFF86B3B0CD9EE51377', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('94D5A4E8AF5C4F249AED9A9896AF57F7', '<p>&nbsp;class<br></p>', '0', 'AD49D486EFCE47DE9C06F8A847DAD05B', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('94D6C3EBFD004D5EA87D6090ABAC6319', '<p>对象数组是基本数据类型<br></p>', '0', 'F4D8A46773C14661A3D5A4FF4AA4851F', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('95138150CA1A4CB6B6C387249DF8569A', '<p>程序正常运行,zzz.txt文件中的内容为”大家好”</p>', '0', 'D7690B5A97EE496F94666765927C8F0B', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('952A576A89E14C188AE6EC324EA4A662', '<p>i=c+i;</p>\r\n', '1', 'C19074D6CED04C0AB53E2F0A40BC4F3B', '2016-01-05 11:18:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('952AE9A5F3BC4D5C96683793638C4B6E', '<p>事物本身就存在排序规则</p>', '1', '9BE0823A56E946E595E5B53ADE7C6B84', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('952BF461C7894E75B6FBE43FB4B5C26B', '<p>sum = arr[i][j];<br></p>', '0', '723FBF5D4AFE456CA69CA953ED84DDEE', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9535907509334F2898106CA22F151C08', '<p>java.util.Vector<br></p>', '0', '31839F2DFE7844D7B2D244FBDF93D4BB', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('953E16426CE743488C4AB012F9752A00', '<p>Object中的所有方法均可被重写<br></p>', '1', '0843D282F5804FCA91AF2ED1C0400BEF', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9544FACE15F1414F962B97E8D1671938', '<p>方法<br></p>', '0', 'AC77607FFB684A25A91139B91974BBEC', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9564DC9C5AF246A28078A059CF5879A2', '<p>获取当前JVM的属性<br></p>', '0', 'D67896CD244343D09B93FDC307874825', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('957EC3922572459B9156F804FC3EC1CB', '<p>al含有”a”,”b”,”c”3个元素对象</p>', '0', '685DFB0453F440FEBE66AC2422839BE6', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('958BBF10672E4E76BD148C6E668C93F1', '<p>除法运算<br></p>', '0', 'AFC04DA743EE46A68DD50A0270409C36', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9596E762D9B54EF78A038364A511D24F', '<p>数组既可以存储基本数据类型，也可以存储引用数据类型<br></p>', '1', '6A4CEEBF9CC94157B1ED6D436ECC44AB', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('95A6E5F89C184E17A9C659961E583603', '<p>int max = -1;<br></p>', '0', '92851EA035E6414EA8E15FAA3FC9D818', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('95A71B18D065479AB9822B28CEBBF7E0', '<p>&lt;&lt;&lt;<br></p>', '1', 'A475F62D72304E93A56EF57E60AB2F49', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('95A8176D396240FEBAC5A786F19EC4B4', '<p>this:代表当前对象的引用,谁来调用我,我就代表谁<br></p>', '0', '36E6EE66AE9F4140968D5FBCCB419414', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('95B26172C7D64387B2A30C830F3079C9', '<p>switch结构中每个case语句中必须用break语句</p>\r\n', '0', '30E0743CAF524C0685457F7EE88C5216', '2016-01-05 11:01:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('95B439884B754B599D0A85F62F2F3391', '<p>13</p>', '0', 'F369BA88280E4A3B85CD6AD676832054', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('95E293ADD5524781BDFA67B017F3048C', '<p>class&nbsp;Circle&nbsp;extends&nbsp;Shape{&nbsp;void&nbsp;draw(&nbsp;);&nbsp;}</p>', '0', 'FA8A7E3C7BAA4C9C9C34C59417EBAC70', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('95E4B57B98B24B56B3B1F7C3F0CC4319', '<p>rd<br></p>', '0', 'C9C731E277614F7587CA1496206D3471', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('95E859FDADCD40B381E0E9C4937B3868', '<p>class&nbsp;Demo&nbsp;implements&nbsp;Inner{}</p>', '0', '002959145FF740F19D81782709F7BE4A', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('95F0DAC32AF342C887194659207BA5C1', '<p>int indexOf(String str, int fromIndex)<br></p>', '0', '6FC6703501074930A7659F20DE08FEF7', '2016-01-02 21:48:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9609E641C33240B3A59EAEC392ED67A3', '<p>方法重写是在同一个类中，方法名相同，参数列表不同的两个方法<br></p>', '0', 'D55A5B0A8D3F401A9E8D9EE820D72B85', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('96184BFF7DBE4F7E890A04AA6925CAB2', '<p>被private修饰的成员不可以在其他类(不包含内部类)中被访问<br></p>', '0', '8548169EABB5482581E0E7670DBE74E9', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('962EF918EBDB40828D02D8B4552270EA', '<p>抽象类和抽象方法必须用bstract关键字修饰</p>', '0', 'C7DA23A6A4BA42C8B35BA4970157756D', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('96527120C74A4DA89A64AB7858FFD916', '<p>Ctrl+\\可以注释选中的代码<br></p>', '0', '5C059B1C4AC14AFBB2362D864314C2E6', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('966680A0B18147998E0E3586F65E6D17', '<p>ob10010001<br></p>', '0', '8E0656F4C648464F955A1F1397EA26E1', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9667657FA9CE4D1489CC05C92A7041EB', '<p>Java API 提供了已经封装好的Java类<br></p>', '0', '2CE1787CC2B9461CA64313EB9F496F3F', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('96683557FB07423C87E2EA33E784A3D0', '<p>成员变量和局部变量的变量名可以相同<br></p>', '0', 'E3BD11B650F54823B2C4587D1C7AC065', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('96739130708B4F3F81BCF37459BEF5CF', '<p>password username 2<br></p>', '1', 'D4DE6C245A9440E7A684062758C9C347', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('967B719C803A49F1BC9A6C50BBD2AB76', '<p>final修饰的变量就变成了常量，只能被赋值一次<br></p>', '0', '33239BCD1BD044E0A316F6AE2072E271', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('969CBFFCBBCA4085BF77D93864E329D0', '<p>得到图形<br></p><p>*<br>**<br>***<br>****<br>*****<br></p>', '0', 'DA5004A928AF4E9282094B04A3D69C22', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('96BCC78FEC2F42E89C0A2621A7CFF7B5', '<p>java.util.ArrayList<br></p>', '0', '9D751D5474794F8098DAF547D4EE5675', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('96F16D361DAE4D55B582651359550A65', '<p>程序的执行顺序依次是import,package,class</p>', '1', 'E370201C092845348D435F665804D228', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('972E35CD2DBB495DB10341EADB211A36', '<p>三元运算符有些操作不能使用if语句实现<br></p>', '0', 'FC416AC468EC47D88113BBCA9D8353E4', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9730D7BF18314B6B8A0C337E5CE2239E', '<p>getHostAddress()<br></p>', '1', 'AB59FCAF7A41409887272F205C95DB7E', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('973AEC877A7643E397267AF9A8B11085', '<p>以上都对<br></p>', '1', '5C15B35EA1F44D5582CCD8EF298A7799', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9746436D3ECB44349C10C8341AF5108F', '<p>每个位置上的数相除<br></p>', '0', '9110653ACA9F48608306233DFD877CF4', '2016-01-02 21:47:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9769318389EB47D580DC8F1EFCF7FEA0', '<p>输出3<br></p>', '1', 'E83B1C8FAA5D4B528EECE56AA955A34A', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('976A1A80C92843E598D7891286DFA3FB', '<p>安全</p>', '1', 'F8DF29A4DA084A118091C5C9157E7184', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('976E7962736B4F0F8EAB486A5FE7D92A', '<p>1<br></p>', '0', 'D6A1F13C773E4C1FA93BE52EBA23D2C8', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('97798E96107C41579A34862455E64E9B', '<p>public StringBuffer delete(int start,int end)<br></p>', '1', 'B6A49BDDC51A4CF397E1C43F52F475A9', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('978CBF1098B04D7DA99211B72EDE104E', '<p>Package<br></p>', '0', '21020886B96D43E99B075B11FE939BEB', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('97A39245305A4F28BFD502BC090E0172', '<p>存储的元素有一定的顺序</p>', '0', '3EFEC211932E4E69A8CDE98B2BAF20F1', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('97A81FE7E5E147EE95D59C696B15B216', '<p>flush<br></p>', '0', '4297FC8F0BE7432AB131FA9F1D9C1A1D', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('97B274BA5F354B32BB3520B37895F0EC', '<p>b&nbsp;a</p>', '1', '28FF3BF1E3524ACEA7D3ACD5025F4A13', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('97C4993508B24EEB892E470FF53A5635', '<p>binarySearch()方法只能操作Set集合<br></p>', '0', '2CBA15AF85F1403A895C4FE0F565A4CF', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('97FF6592A09D4D5D8D44A61B88D6A897', '<p>队列的特点是后进先出</p>', '0', '1244EF5B065C413E8538D26FE6BD5DB7', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9805A2097EC54496B11698A132FBAB21', '<p>抛出异常<br></p>', '0', 'EF6415F2F8854DC4973ECADB5D14546B', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('98136C7758EB4D4EADBD99DA36DEA62D', '<p>以上说法都不正确<br></p>', '0', '9BA87153A4504A72AA7F8F8AE1E0CD1D', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9813E4FE8844495991F6F68D32923D25', '<p>编译报错<br></p>', '0', '4576014BC221460894B8283B2945D4F4', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('981E3ADFB53443DB8B812086AD8D1BD4', '<p>IP地址<br></p>', '0', '10CE2076CEB349AB96447415C0DCA62E', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('981EE165D18B4CEAA54F866ED236D729', '<p>catch 块后必须有finally块<br></p>', '0', '78690A146BD14FEF922F73FFB7F2B4DE', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('98341C4FD8A444E7B2EECF7D126ED5BC', '<p>编译通过，单出现运行时错误</p>\r\n', '0', '853F4AB89C774AB6917F098E243F5515', '2016-01-05 00:21:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9836B11AF5B64C6A90820BDD0A697551', '<p>&nbsp;currentThread()方法返回当前线程的名称</p>', '1', 'DBE23E3CE6D04E4DB47556C816E58864', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('983D2D3C25F84D69870BC3C3C5120781', '<p>不可以将字符串转换成字符数组<br></p>', '0', '3594B84AFBE84CA7B5EB04EB744A0113', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9848281E98ED4AA1B5F7655B54E83409', '<p>返回值是int类型<br></p>', '0', '124724C69E1244E8B8ADF5F42EFF2E34', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('984D7D9339694310847225EF1D39071E', '<p>BufferedOutputStream<br></p>', '0', 'D575FB6A65FA4EA9B1AC66964876F719', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('98647338A0004E42BC3FBDD8746662B3', '<p>arr是局部变量,存放在栈内存中<br></p>', '0', '64757B20D9704DE8863EB18005700F1E', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('98765EB83CFC4E41948E402FFD3A0807', '<p>在方法中抛出异常(throw 异常对象)<br></p>', '0', '70A6A9BEB41C48D0A1E316793F8C6301', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('98797C7D218B4BA188B827212D9EA960', '<p>C#<br></p>', '0', '5DD25F2218824DC0A2E4E7A19AE9EF2D', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('98826516D31A472DAF1F36CBF2EBF839', '<p>返回值是一个long型数据<br></p>', '1', 'AB80429ED70C4A45916CE9932CAC8E30', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('989D0E991B0F45C89CB67001F0382445', '<p>一个源文件只能供一个程序使用</p>', '1', 'D2B57A01A9774F96A298B625391C427E', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('98BEACE666274471BFB6ECC6F36E1DF6', '<p>13</p>', '0', 'E24407A59AA44399846B7A85F760C4F5', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('98EA48598FD947CAABDB84AEC3C68AC2', '<p>for(int b = fis.read();(b=fis.read())!=-1;b++){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fos.write(b);<br></p><p>&nbsp;}<br></p><p>fis.close();</p><p>fos.close();</p>', '0', 'C4DB57BB99F24DBEB13E9519043321C2', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9918A2A848C7425CA518D1893030C53F', '<p>切割字符串<br></p>', '1', 'E3A82A2134784974A7055D3F90358409', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('991DA11B217A40A9986B72788BE68909', '<p>static<br></p>', '0', 'DF023BB151E44BD88EF66D5BA9FA5C5E', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('991E86AE135A4E9F9C0EF63D9B080F18', '<p>[A-Z]<br></p>', '0', '7983EFF7EAB3486AA0439DE0C242C43A', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('99260724B7B340D7910932F80204175F', '<p>|逻辑或：有true则true<br></p>', '0', '7432E8CC7F344DED9CB52A709EAEE68C', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('99311FD80C584B369229242C14F0DE52', '<p>重复</p>', '0', 'D1BA325130EA460F85F8E56D4406A40D', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('993A67A55C9B4CA3A09429C0D705160D', '<p>跨平台<br></p>', '0', '396CE78AC3B44CC4B6158FDB69A9DEF0', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9943CC2B61AF47BC8171583900D54AC3', '<p>先找父类，再找子类本身。<br></p>', '0', '239434072AC84FF89E0E2A017BD34DF6', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('995883870A1F4D80AB1FAECF4D3A5425', '<p>抽象类中没有构造方法</p>', '0', '0F737DC4397A448CA1ACA1875D040FB2', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('995F853670A84620BC699856677ACB95', '<p>以上都不对<br></p>', '0', 'C720674C0FF943B8931BA0A155B188F5', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9989ED53BCCB4831978C4DCA305D3032', '<p>将jar包拷贝到Java工程下即可使用<br></p>', '1', '49C4E4FD37384A2B97E1F02D22D0E930', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('998C979EADCA4001912C26170F63C1C9', '<p>97<br></p>', '0', '156E866F773E4BAD84432DAF8EBA9C58', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('99900E48013644C89C15B76A4F80C694', '<p>false false<br></p>', '1', 'DBA85C4AA13D48568298D942257B447B', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('99ABFA8F1DF04630A4385684E7BCD769', '<p>不能创建对象<br></p>', '0', 'B424AB1C98294BDB894AEE8C540FE96B', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('99B1676D2C2E435E9A4A50301FE2B3D4', '<p>newLine方法是BufferedWriter中定义的特有方法，可以实现换行的功能，而且是跨平台的<br></p>', '1', 'EAFC0E3832DA40F7A57A9116F4F520F1', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('99BBB2E8D9394068BE02F7AE5F58C06F', '<p>通过Comparator子类对象中的compareTo方法与集合众元素逐个进行对比，等于0，不添加，小于0，放前面，大于0放后面。</p>', '0', '69279EA71E7E42A188385BBBF7C2E2DF', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('99F4A0583D7A4825BAF5541563CE92F7', '<p>一般不使用Object类中equals方法,而是重写掉<br></p>', '0', '10440D70AC824DB0B71F0067532A0027', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('99F63DB87CE44E1782E7E392419F115F', '<p>对象的方法不占用内存<br></p>', '0', 'B6D9EF7FF95A4E9D85EF00C6888A59C1', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9A0479615EEF4A55825DB6ABF2976483', '<p>java.awt包<br></p>', '0', '52CCF2D7B39D49A4B3DE9F4BC984AD46', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9A09A20DC8BB4DE39F577C3ED8623927', '<p> objectRead()</p>', '0', '75FDCF83B5864E2C94E3A434D9BE535C', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9A10C96E92474F2BBF63F9FEA293EEF6', '<p>定义1个一维数组和1个二维数组<br></p>', '1', '1ABFBBEAB95D4470ABCAC064478915D9', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9A3C6D0DC09B4226B397D249EE23DBA9', '<p>输出Hello World<br></p>', '0', '07D3FBF723F944EAA25CB8196E646934', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9A3E99F538A44A249B487A595C25C6E7', '<p>包代表的是文件夹，多级文件夹在定义包时用.来分隔</p>', '0', '6E9B219ABDCB45929B5B2DA56C3B6359', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9A5A55F321024CB19749E59430084170', '<p>Parent p = new Test();<br></p>', '1', 'EB81C87C0CF44DD8B69DB89B7956E0F2', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9A6290ACBDAA436DA192EF86BF212394', '<p>工厂设计模式<br></p>', '0', 'E0A6C161809B45E4A1AE6465A1BE19F5', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9A65A0DCCEDE4A6B83726AFDCF264245', '<p>如果是true，就执行语句体1<br></p>', '0', 'D909E65D60F44C7B89EBCD3F65C1B5F6', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9A67A7904F9240A185C8B5689979AC40', '<p>2<br></p>', '0', 'D6A1F13C773E4C1FA93BE52EBA23D2C8', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9A67DAF4B6D7460DA58D63E887711804', '<p>输出1<br></p>', '0', 'E83B1C8FAA5D4B528EECE56AA955A34A', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9A71199D10094E48A8870B3299E0C29C', '<p>Hashtable不允许null键和值<br></p>', '1', '54A8D0C2268A4968AE8DEB65F03C3009', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9A88B7EE225049FEB08F4B701E1F0507', '<p>增加数组中部分内容到LinkedHashSet类对象中</p>', '0', '678167F74A8242F682DAD56C6ECA1108', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9A8BB4D5C3BE464CAE538031A86E962B', '<p>StringBuffer是jdk1.0版本的<br></p>', '0', '5594D4A74E104DF689D44CF630F808AD', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9AA6EB22E0C24E9B9209CCA40B5EF49E', '<p>以上都不对<br></p>', '0', 'D72D6374D0A84E4C9F9D56B4703DC4ED', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9ABD05F1C666449F9AC1866714411731', '<p>用于存放同一类型的数据，便于使用<br></p>', '1', '9ACB62DB28C64D218434CA9D817DF19D', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9AE328A04C6D44EE8548744039F3E5C4', '<p>private void show(){}<br></p>', '1', '0BB77E63B8B54AB7AE7F8B315B6EB5D4', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9B01D5623A814B5580735BC3087A1D4A', '<p>以上都不正确<br></p>', '1', '33239BCD1BD044E0A316F6AE2072E271', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9B2A61EE3ED64C6B921B62847CC1EAC9', '<p>protected void <strong>finalize</strong>() throws <a data-cke-saved-href=\"mk:@MSITStore:E:\\java基础\\JDK_API_1_6_zh_CN.CHM::/java/lang/Throwable.html\" href=\"mk:@MSITStore:E:\\java基础\\JDK_API_1_6_zh_CN.CHM::/java/lang/Throwable.html\" title=\"java.lang 中的类\">Throwable</a><br></p>', '1', 'B2CE5860E9524DEAAA0D060A666E3D9A', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9B39582459084A289364AC56C7C24847', '<p>abstract不能修饰变量</p>', '0', '44AA838BFF29477A89185E72CFC2A059', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9B583069F4E044CE8D11A5C232B0DAD0', '<p>如果在方法中传入参数，该方法会造成其他线程等待指定的时间。</p>', '1', '7C6F9571B707408B906A9BDD1B07BC63', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9B59B3C0AB93482C8C1BAD42D686A0A2', '<p>输出结果123<br></p>', '0', '6E42BEF6CEFE44948D4E7E5A6D3BC0CB', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9B71A872D3E24FD7AB182FD2F3CEF48B', '<p>final修饰的方法不能被重写<br></p>', '0', '33239BCD1BD044E0A316F6AE2072E271', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9B73CFF6E5784AF4ADFDD3999788455A', '<p>运行错误<br></p>', '0', '611C81A51D714D5DA29ED4F5F25FEE60', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9BD15330235E42908F4243167D40DD2D', '<p style=\"margin-left: 40px;\">if (map.contains(ch[i])) {&nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;map.put(ch[i], map.get(ch[i]) + 1);&nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} else {&nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;map.put(ch[i], 1);&nbsp;<br>}<br></p>', '0', 'F0BCFB0C0DC640B990467D6472937FAA', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9BE45B650B294AC8BD8663F0975766BE', '<p>&nbsp;jre包含jdk<br></p>', '1', '677C00191B214420996DCA46B667519B', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9BEB49A37D3046BCB1444A7D17C3CE4C', '<p>int[][] arr = new int[3][3];<br></p>', '1', 'D8BEF3D0A1954D7FA0AD30A4C8CE1BA4', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9BF6E7002E7C49979ED66867B7A3B387', '<p>java.util.Set<br></p>', '0', 'B83657E346174DF9A72D84B69D89E74C', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9C2B11EF84E04B43B4BCFADA76AF18C7', '<p>hashNext()方法的返回值类型是boolean类型</p>', '1', '2419F299E0C745AC9D8916E8C248ED4A', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9C50EE864C9946F0A3E60253E63E7851', '<p>封装提高重用性<br></p>', '0', '20175B40D4B14A0DA895C28F3AA1923A', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9C69F5766F044E828F786938CFD60F96', '<p><s></s>多态的一个弊端是父类引用不能使用子类的特有属性和行为<br></p>', '1', 'F9C9E3F1CC4049808E592A3A6DA32E59', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9C7796EBF672486CB2733BF2FE241B55', '<p>以上都不正确</p>', '0', 'DCEA05941DA1408989ACA558273E8284', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9C7E209FEDB845DDB74F1306C5F5B4B3', '<p>迭代器是用来遍历集合的<br></p>', '0', '785A48B480A843E38BE9E375C5783B10', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9C9413CA54DF4630996D9ABE3F790DB8', '<p>①②④是重载<br></p>', '0', 'DEF376AD9E24405AB29FF39D5CCF73B6', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9CA8272F1B4A4296B4688D8687D10D95', '<p>getProperty(String key)方法是根据键获取对应的值</p><p><br></p>', '1', '70960B5A0F474ADBA008B51B72CB209B', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9CB1319886664D058914E44027834B37', '<p>通过代码Scanner sc = new Scanner(System.in);得到Scanner对象<br></p>', '1', 'ED1C8DF591CB4DF1BD8E4721001C5DF7', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9CBC98F142914881B911DDE3AB779F47', '<p>结合了链表和哈希表的操作原理</p>', '1', '7D9D826A9FC2477AAD979030DC8F76D2', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9CE791C6F2294393A96BB9C5F54C4EEE', '<p>如果这个方法的返回值是false，就说明集合中没有obj这个元素</p>', '0', '1E99BC1C9AD140F1AEF70A9684E9288E', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9CF502DE0DB247ACB665D13B3EFB7C65', '<p>final</p>', '0', '963BE09C92D540D0A4DF96D78FA84821', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9D19397828694ECAB84620A5F2D1796E', '<p>public void <strong>close</strong>() throws <a data-cke-saved-href=\"mk:@MSITStore:E:\\java基础\\JDK_API_1_6_zh_CN.CHM::/java/io/IOException.html\" href=\"mk:@MSITStore:E:\\java基础\\JDK_API_1_6_zh_CN.CHM::/java/io/IOException.html\" title=\"java.io 中的类\">IOException</a><br></p>', '1', 'B2CE5860E9524DEAAA0D060A666E3D9A', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9D1CD31FA4C44BF2872AE4E1C29A5251', '<p>定时退出虚拟机<br></p>', '0', '250F9DE779A24CF591EFD2662443FF2C', '2016-01-02 21:48:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9D2601E125A743A0862588B4632FC245', '<p>系统类加载器负责加载rt.jar包下的类，即JDK的核心类<br></p>', '1', '47910E17286646DD8E63E290548F5BED', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9D461AB2C2174A5F8015A070165E3D5D', '<p>show1</p>', '1', 'CB7D9F80ED264AB5A31D02CFB90BCFCF', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9D682AFC8AD446E7AA379D8AEB8C2955', '<p>容量大小定义成其它数值也可以<br></p>', '0', 'B373D4F7C8AE4D55B5B2EA8955A474FC', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9D68EFE3849A48219D1BC530E6B637CE', '<p>可以在TreeSet的构造方法参数中直接写匿名内部类实现</p>', '0', '8A3657F552B745508414D17A3C6CC13F', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9D812520D75445D9A6B62A78AACA8624', '<p>如果没有哈希值相同的对象就直接存入集合</p>', '0', 'B61B6856D1C94CD7B2E67FE31B36606F', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9DA3365FC60246D4AA3CF98EC2A03ECE', '<p>詹姆斯.高斯林<br></p>', '1', '9044D413056A4004B095EC7E13C4CF4A', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9DA658CF5911417781B83FBC92DEEDB5', '<p>默认可以保证元素唯一性<br></p>', '0', 'BF2452AB0C51426BBF9C6577658CE85B', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9DA7EA7CF4B24ED3979B77F0379653A8', '<p>public static void show(){}<br></p>', '0', '3E3E073C2B0D4E6F8BCA838807F0FA64', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9DC2C0AFBF9B4E998A59608AA9F1D5CC', '<p>E extends ?<br></p>', '0', 'B7EC491B45DF45B08BD24F050C11E29B', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9DECCAE29FD44E41BF7A83C4B3D5C869', '<p>将线程设置为守护线程，该线程不会单独执行，当其他非守护线程都执行结束后，自动退出。</p>', '1', 'EB970D206E3649868C19C270C41904E4', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9E00A33BB8E14105BC514FE12AE6550D', '<p>switch ( ch + 1 ) &nbsp;{ ...... }<br></p>', '1', '34A040350A9349EE8F1C2C852648058A', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9E108010DBF04972847EA19DE41934CD', '<p>arr必须是一个int数组</p>', '0', 'DA1E40CB8C9D4BA79365EE3900756613', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9E203710DD6644F59FDAACAB1A69DD8F', '<p>write(int c)写入单个字符<br></p>', '1', 'DC03150AE72749B5A74CA278014B2295', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9E483E7CEF5B479C8FB36A07C535B47F', '<p>不可以导入toString()方法，编译报错</p>', '1', '80EC425FA3714F388A1197AF6EABB575', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9E49B5877A444E7A85A12672C1EF2A91', '<p>interface</p>\r\n', '0', '285E75587454458A8F4974FE0301A961', '2016-01-05 00:04:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9E603293484C41EC8BA8EB410F0B4425', '<p>x &lt; y &amp; ! ( x &lt; z )</p>\r\n', '1', '361AF02FB5F940C1865B9AA9DB7AA7E6', '2016-01-05 11:07:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9E6C43CFCBB248A68270652A60555249', '<p>i = 1&nbsp;&nbsp; j = 1<br></p>', '1', '25D9A255AF234A598AE8133A7FD59402', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9E7D402EDACC46A9A03C27A1E2B522D1', '<p>枚举类型</p>\r\n', '1', '53B4AD107B914B41ACCF48E9D2BC2FA9', '2016-01-05 10:57:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9E9A568BD9834A4281445588CB41F968', '<p>执行顺序是: ①&nbsp; ③ &nbsp;④ &nbsp;②<br></p>', '1', 'E46FF59D07254629BFC567C7816BDD44', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9EAE0539DD05456D8106C41B73F62638', '<p>以上说法都不对</p>', '1', 'ADF3AC3FB5544E83B88E7FD92458D174', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9EB8523D2B4B47BD995FB7294ED96B41', '<p>woaiheimaniaima<br></p>', '0', '2F45BEB283FF421A8200E2AC491514FD', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9EC2ED7B9E12477CBDA81DFBC22CB204', '<p>都是类中的变量<br></p>', '0', '7E0BDD89EB604900962EBA838DD41CC3', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9EEAA66E6F374B06B413946B936E0106', '<p>get<br></p>', '0', '2A73CD0EB61845F48B99141874D2BB7E', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9F355C63DE94472FA25FB1F29B634EBD', '<p>返回的是一个字符串<br></p>', '0', '124724C69E1244E8B8ADF5F42EFF2E34', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9F74E1F4AC544E2EA0FD9448BCF07739', '<p>switch ( a%b ) &nbsp;{ ...... }<br></p>', '1', 'D1239F78C184432CAFB7CED4F941D4B5', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9F9A6A32671B4F618185A4F2B39F1707', '<p>Editplus<br></p>', '0', '0F9A40D26D524697ABDA4A524D7E1C8E', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9FD739A19E3C47CABBFAF644E8A097AB', '<p>=<br></p>', '1', 'CB85CC56285A4818B23686386CFED7BA', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9FDD2F30F8F9499A968A3B61D8109A5A', '<p>3<br></p>', '0', '52BD95F3B56347EE99DE157900D2128F', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9FE0D4E59A2E46A4979B8DAF6BA76E00', '<p>FileInputStream类的<strong>available</strong>()方法<br></p>', '1', '7832171B68494338971BED67B760058E', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9FE348F7C51C49858EC7FE4BEAB92C0B', '<p>arr[2]的值和arr1[2]的值相等<br></p>', '1', 'A896AB991E4A408D8E24F851156CD835', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('9FFCC169942C4D4E992CAAEA9F72E9DB', '<p>!<br></p>', '0', '15C8FCFE254D4AB2A7BE7F67D2129B3C', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A006754238544D8FBD9E82950DBE6602', '<p>对象是类的具体实例<br></p>', '1', '21A75707C7904D10B947EA894C964F17', '2016-01-02 21:47:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A00A844C792B4D9C9F42186C5E2F4281', '<p>public权限最大，在不同包下的无关类也可以访问</p>', '0', 'A9C38ABF8F2E4D5E9D90E4D96BB2E652', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A00F2D63F4D041A291D203CF8EF897A9', '<p>int[] goto = new int[]{1,2,3};<br></p>', '0', '3E074807A73A4601A9335B2CAF606171', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A028D8357BA14C2C8F02B2EEF583D43E', '<p>super可以不能调用本类中的成员方法，只能调用父类中的成员方法<br></p>', '0', '1260425F964E43A885DEF47F72190014', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A02DB05A9A474E7DBF02D3A9F5EF54BE', '<p>5</p>', '0', '3493B4F1F3264C0DBD67F03CC3BE19F2', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A03CAE5947194192B79F60F74D3BB9D4', '<p>compareTo()<br></p>', '1', '7A08FE2B04404496B27C9CBA0CAAC095', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A058994B9B7546DFAD7758B5E79E778E', '<p>该方法会造成线程死亡，不再继续执行。</p>', '0', '8F1AA4FB4A414E7EB5D9BE30B03CFD8D', '2016-01-02 21:47:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A0913C962021401B86BF8528AB464396', '<p>子类不能抛出比父类更多的异常<br></p>', '0', '8E2BEB381D974F468C78B55204EE35C6', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A098795103BE41198136110DC2EC3E58', '<p>DataOutputStream</p>', '1', '40488E49581B4BA5B66F9E7B5B6D6490', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A09DF7BD8D7B46338D9BDCA25D304ABC', '<p>-128至127</p>\r\n', '1', 'A73EB37FB22B47C797DCDB85C32201F5', '2016-01-05 00:03:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A0CCE9C06BAC4A43A9A8CBB1A2BB2777', '<p>Object&nbsp;x&nbsp;:&nbsp;list</p>', '1', '16E4716E3627450DB9D3608C877DAAED', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A0CDBC7FD1A046DB80DDC7C315B76938', '<p>常用基本数据类型（包装类）都已经实现了Comparator接口</p>', '1', '8366C52BC4454EAB89F2B674A19235C8', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A0EB28623A174A559304F90448BAB649', '<p>编译报错，因为it.next()方法返回的是Object类型，但却使用了Person类型来接收</p>', '0', '2419F299E0C745AC9D8916E8C248ED4A', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A1052C7587A9415EB053FAEB61A1946F', '<p>equals()方式是覆盖Object类中的equals()方法<br></p>', '0', '7F26954476384AE180AB99B83770644B', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A13A3BA1B0DA4102ACCC6603AEDD861B', '<p>当方法没有具体的返回值的时候，方法的返回值类型定义成void</p>', '1', 'E199B51ED8D7436ABCBC47BFAF515825', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A143C3FEB1484880890DBA449DAE4869', '<p>以上说法都不正确</p>', '0', 'F4D8A46773C14661A3D5A4FF4AA4851F', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A14895CBDB3E4919A7B8425080BD4171', '<p>List子类对象可以存储基本类型的数据<br></p>', '0', 'D38D5E17D79C4BB7BA018C0FC93996E3', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A1540AEF72BB4A21B183403880DEFE6D', '<p>接口的中可以有定义抽象方法也可以定义非抽象方法</p>', '0', 'AEBD3C1BA9D043C6B8FF5EAA11FA98A1', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A17C2491F42A45BFA13104023EE6B684', '<p>a<br></p>', '0', '1F8CA06547AD4987A56B66259C741711', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A1889C8333A34C63AF6FD6D325CE967C', '<p>finally中<br></p>', '1', 'D5C23625513E46A5B20CC5513DD369E9', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A18C110D0DAE402A85805D93B7E01A4C', '<p>对数据大小无限制<br></p>', '1', '451A8653D590413D8F44C1F4E2A19160', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A1AA8E9BDA4A48CDAC0AB3BBBBE73B29', '<p>方法必须要有访问修饰符<br></p>', '1', '220EC8E9622F4702A57A59C54B932E56', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A1B738C7C5F142A2B0101FF9BDCB04CC', '<p>Outer.Inner&nbsp;oi&nbsp;=&nbsp;new&nbsp;Inner();</p>', '0', '792F6FADFBA249779275F57A33C37FAB', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A1BCAE9129E0421887B432D5F63D3B82', '<p>A&nbsp;a&nbsp;=&nbsp;new&nbsp;B();</p><p>&nbsp;&nbsp;&nbsp;a.test();</p>', '1', '66128BDD3DE34807B8C62BBD2DFF0850', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A1CE1950FB764E9088B49353920852B4', '<p>提高了代码的维护性<br></p>', '0', '399128C1C0874BDCB334AB6018236F6F', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A1DC9C5576BE45629D254447A2B81A89', '<p>arr和arr1存放在堆内存中<br></p>', '0', '82D8B52B82CF44E6AE7EA66A24C6A7F5', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A1E0C5D1FB804BC8BC5D2C0307D2F4FE', '<p>底层是数组数据结构<br></p>', '0', '39B854F1E4634F71A42EA97AFC1DA370', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A1E3C4A153874312B9213B3A9E14E5CE', '<p>&nbsp;将类声明为&nbsp;Thread&nbsp;的子类，该子类应重写&nbsp;Thread&nbsp;类的&nbsp;run&nbsp;方法，分配该子类的实例并调用run方法启动。</p>', '0', 'A1FFEB9AF0A84C43BB462A7D2A588928', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A214223DEA654FEE8DB5B3D5B8314534', '<p>外部类要可以直接访问内部类成员包括私有的</p>', '0', 'F9F75F27924C45FE8FBA6ED8B067242F', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A21B85D12B344CB0A286B3570551ED25', '<p>SimpleDateFormat类中的format方法<br></p>', '0', 'A8134F8361D145AFBD23EE3D4F730B01', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A222221AFBA147CB8A1EDF1654065973', '<p><a data-cke-saved-href=\"http://www.it.com\" href=\"http://www.it.com\">www.it.com</a><br></p>', '0', 'F3A9105F84FF4B619156FD271A5246E8', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A232AF41374546FDB87C28412E6BFAA9', '<p>substring(String start,String end)<br></p>', '0', 'EA435461E9804BB3BD076299F94596C9', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A2533C3AD0B54E87A1D9C00DDB9A13E4', '<p>FileOutputStream fis = <strong>new</strong> FileOutputStream (new File(\"copy.jpg\"),true);<br></p>', '0', '20BBF6F03B8A472E8760EBBAF805B700', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A26AD4D57D914FCFB4481FB3EF36E542', '<p>以上都是错的<br></p>', '1', '00381D8AF4D14ACC9BD1B5A02FE67683', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A27E866E22FE4DD198360EC399DFA2A7', '<p>有语法错误，不能执行<br></p>', '0', '5D8392BF6E524007B98D281CE9827EA8', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A2AA64BCDF8148088242F989FD389BA6', '<p>DataInput<br></p>', '0', '7685C4AD4A094391A34D3511AE072F58', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A2AE4A4762374495ACA7C36AA4C4A488', '<p>使用多态时一般要方法重载</p>', '0', 'F61953694CE24E6B99668FCA1FE615BC', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A2C4AC57C8064A8EA330779A9549AF50', '<p>tomcat: 8080<br></p>', '0', '8827C46562E9440BB80871F6406C8135', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A2C7963325BD49ECB093E988BE8F9E43', '<p>int[] arr =new int[3]{1,2,3};<br></p>', '0', '0ED9E5F47F9843A4B8235F48E7F7BD1D', '2016-01-02 21:47:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A2C9D8C24CE043019669D72E1289B31C', '<p>执行3次<br></p>', '0', '60A51680B62D4AC88B2DB8D2FD22F207', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A2DA433AF419470283221601A393C726', '<p>arr.length-1 “]” &nbsp;“, ”<br></p>', '1', '4BD5FB6CCBF2416BB66C09067046831D', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A2E82A03EECF41E6890D54453FD2B437', '<p>如果是由多个单词组成，每个单词首字母大写</p>\r\n', '1', 'E3B0235E2A2D4BDDB3F100D9CD28305F', '2016-01-05 00:09:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A2F826FE42644A44B1BB88E3EB619A05', '<p>核心类库<br></p>', '0', '8C77818A90E64208AE970DEFE35BE7B7', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A2FE31C5A48F4C68900FDE04C894550A', '<p>IO流中jdk的源码中也都是用的1024<br></p>', '0', '8A8D43DD798849E6A3BEBDA063EEBC25', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A306A25B218B4217BFB416070E66D893', '<p>-11<br></p>', '0', '7CC4B66DB3914722823B6F357800EAC5', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A322B98AC68D4E38AC195565C8A40180', '<p>00000000000000000000000000000001</p>\r\n', '0', '7D8C36B83A4E4A649927ECFAD783A997', '2016-01-05 10:32:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A349826A2EAB43BCB4DCBBB532328A26', '<p>3</p>', '0', 'D6D6796525174C03A446CEFC57093B0F', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A360AA1E5CEB40F795C9C37EF1D7EF73', '<p>编译报错<br></p>', '1', '69F4B6F8166F4BFAA865CD6E16216B2C', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A36B3A5EC5AC4CF1B2DA439C4FBF9856', '<p>对数组排序<br></p>', '1', '12F15E24460741489FC9F95F49C8CF6F', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A37859CD8112459BBF399591E224035D', '<p>4</p>', '0', '30C0DFD41E144EF790498E8055558384', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A3794F794F4F4116BE7611AA214C7211', '<p>arr里面存放的都是0</p>', '0', '1083B83DE4EE4DC4A824866A1BB7C7AF', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A37AC9B2A1634BB59653E9FDC1A02AB2', '<p>直接创建父类对象对该私有成员变量赋值</p>', '0', '436F40CD84154E6CB2148FC15B8328F0', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A37F6FEC89994061A2E428A58C8A2440', '<p>底层是数组数据结构<br></p>', '1', '1DA52701C92B497CB51ECFF3DA659599', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A37F80932CFD474096DFA16FA11203A6', '<p>2Ab哈<br></p>', '0', '8F5830CF5FD9464E8FF252F79D1A320C', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A39228965E0041CFBE1C5FB247122D5E', '<p>16</p>', '1', 'E24407A59AA44399846B7A85F760C4F5', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A3A5371871CA4B04BB8A9D15F39BFCA6', '<p>只要是数字就属于整数常量<br></p>', '0', '75906B56A6B8419BBF1E9248577BF821', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A3B36E6CFF6C4A16921D488E8CA95D46', '<p>ThreadGroup</p>', '1', 'DDB499346C3541349E943B26C74E6BA2', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A3C6807D00FE49B4BF7DEC7BE461FBE8', '<p>LinkedHashSet适合增删操作</p>', '0', '03E23694E6F548AB8D0BCBD21E69CAAC', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A3CE320C218A4E2488AD7EDD204D1770', '<p>“ ”<br></p>', '0', 'C720674C0FF943B8931BA0A155B188F5', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A3F33E2D92BF469493B49B389BA81811', '<p>服务器端口和文件<br></p>', '0', '9C107AB645FE41F38061CA0B661A7700', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A419E693F0EC4DA782FCE38B72CE8408', '<p>Throwable 类是 Java 语言中Error类和Exception类的父类</p>', '0', 'D8D5184E3E7648339A82A7E8DA4E6F2B', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A4262A244D524B9D9D1C7296ECAD8555', '<p>getName()<br></p>', '0', '975BC6CDDFB642DD8B27E54342961BB8', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A427DA5596234CDFAAC40A9735E4CED2', '<p>和内存输出流对应的流是内存输入流ByteArrayInputStream</p>', '1', 'B033C9EF48E6459E967DA4F5D6B4AF71', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A4320290419A4848A39B2D24C801C1D8', '<p>this可以调用本类中的成员变量，也可以调用父类中的成员变量<br></p>', '0', '1260425F964E43A885DEF47F72190014', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A448EC973A6D45DC96CA3A31BD90AA42', '<p>负数的反码是对其原码逐位取反<br></p>', '0', '973198C9ED4543FCA96EC7EA3F681392', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A45005CB8AB84490910C8F300284D442', '<p>userName password 4<br></p>', '0', 'D4DE6C245A9440E7A684062758C9C347', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A45DE803425F488BA23529BE56024AAD', '<p>移除所有的obj元素</p>', '0', 'DE265D253B9F4F8DA1BF8173BE460D09', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A46FC28BFF8245638669CB01D47CD02A', '<p>new&nbsp;MyRunnable().start();</p>', '0', 'F9340C57509444A9AE46E15B4EEAD30F', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A496CFABC17544C5A4A730683BC13B6F', '<p>类是对象的具体实例<br></p>', '0', '21A75707C7904D10B947EA894C964F17', '2016-01-02 21:47:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A4A69CA9ADD241CDBCA870F27A502708', '<p>Eclipse的调试的时候会切换到Debug视图<br></p>', '0', '111B56589A6D4100A4FB075A697424D6', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A4A9ACC768BE4BA58150CFC2C9D2E3A5', '<p>新建的线程调用start()方法就能立即进入运行状态<br></p>', '1', '129CFC454B654A4BBB45D648BDB23225', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A4B73248F7264DB68B874840B5A9F025', '<p>\\.<br></p>', '0', 'C830253B6B7848AC9B8F0FDA92C4A022', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A4E58291965643CDB7B8FF08883FB973', '<p>int[][] arr = new int[][];<br></p>', '0', 'D8BEF3D0A1954D7FA0AD30A4C8CE1BA4', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A4F460D401214C92B39CE9566A1AFBBB', '<p>db文件夹是一个小型的数据库<br></p>', '0', 'CBE5220D07344E00A659917DFD9CBB58', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A508D1CB140D42AA8681D6A60F182658', '<p>true<br></p>', '0', 'FEFAB71B3F2C499DAE2CA8076F1BC0E9', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A509BA38367D40849278499AB9CD97E3', '<p>substring(int start,int end)<br></p>', '1', 'EC0F5C6702344101B4BE3027F137FD64', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A5133B18D3E3414D9FBC2A8C9DF8C913', '<p>superMan谈几个亿的大单子，飞出去救人。</p>', '0', '676B826E86E54EE8B1DDDC8FD190BC74', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A52E7956CC414D589D3EF479A3482D2F', '<p>&nbsp;abstract不可以和final共用</p>', '1', '6D8FAA56FF44400A92083E32C1EA713A', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A538F8BE5F3144468BD101EC0CD4EEC3', '<p>for (int j = 0;j &lt; arr[i].length() ;j++ )<br></p>', '0', 'D525B443A8604299A35D9F61CF559E3F', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A53D08328AC547F5A52822880B1C1989', '<p>正数的反码与其原码相同<br></p>', '0', '973198C9ED4543FCA96EC7EA3F681392', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A53E3D3E0AFC4E799A4315796EFCB07B', '<p>4<br></p>', '0', 'AD8126F22B9F40CC9BB5622A40D4C415', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A548019E8B2C4B04AE406D92530FD3AD', '<p>num,&nbsp;this.num,&nbsp;Outer.num</p>', '0', 'B3567B790AF24592BE56FD26425BC8B5', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A54C3C86DA5E41AAA1F723C137F810DF', '<p>调用getLineNumber()方法可以获取当前行号<br></p>', '0', '3B5BC9E664F84464B2EE00464D5E7D91', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A5519CE625A34645818F5D5E1955CC01', '<p>模版方法模式就是定义一个算法骨架，让子类来实现具体算法<br></p>', '0', '86897709AA9E4E049FCD8D8E19EB5706', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A55FF9A88CDF4076A02F2D2DAFE0611E', '<p>捕获异常（try{…}catch{…}）<br></p>', '0', '70A6A9BEB41C48D0A1E316793F8C6301', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A573CF66CE004C4FA70C5DFC0A021EF7', '<p>可以按功能分包，也可以按模块分包</p>', '0', 'DB704B6ADA424AA29065E34D55EA8425', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A58E023029C64243BC5E65B0ED94DAA2', '<p>substring(String start)<br></p>', '0', 'EA435461E9804BB3BD076299F94596C9', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A5A161FF150D44BEAE921F5ADD64C124', '<p>0至9数组出现任意次数<br></p>', '0', '7FDB670A43DE44DC903E2528F9E95D8E', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A5A8E92804C3436686032B3A411C8BED', '<p>20</p>\r\n', '0', '215BD317DDEF4C5E8E79B264460C2CC2', '2016-01-05 11:16:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A5D71C9C89B942BBBFFCDE9DD7104A8B', '<p>以上都不对<br></p>', '0', '52F74D03957B4E4399335353D3E7C168', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A5EE84F9A0CC4DB082AC6258F4DD1C1E', '<p>字符常量<br></p>', '0', 'E9E403D75C4741D1AA48CBBA3ED841EA', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A5F0684B7F3C4541AD7EF84000E684DC', '<p>先输出100&nbsp;个hello，然后是100&nbsp;个world</p>', '0', '9E1D64F685E34B92A4103F1211B4B95A', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A5FC28B1AFCC4BFD83A960BD1E072B5A', '<p>基数★基数的权次幂<br></p>', '0', '7C1CDDC0805F406D981C6B36FBF433D4', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A60839D5D09E43839C0AB8C96C97AFB7', '<p>软件制作的过程<br></p>', '0', '60AC22B4D0DA47718930B4F98369C472', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A60EE75B1DFF4777AA896CE3FE80E0BD', '<p>for (int i = 1;i &lt;= 9 ;i++ ) {<br>&nbsp; for (int j = 1;j &lt;= i ;j++ ) {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp; &nbsp; System.out.print(j + \"*\" + i + \"=\" + (i * j) + \"\\t\" );<br>&nbsp; }<br>&nbsp; System.out.println();<br>}<br></p>', '1', '8AC88875E657410DB0ED8DFFD648A386', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A66592D5E7244AF08B8BC892BB9476EA', '<p>Eclipse可以从官网免费下载<br></p>', '0', 'F1694C4FD1ED47FBBF31CE352344F49E', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A66956E297C7468382E763CA20ECF02E', '<p>5</p>', '1', 'D6D6796525174C03A446CEFC57093B0F', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A678343EE71C47B8AF8EA5DB3B6869A1', '<p>&nbsp;public&nbsp;class&nbsp;MyRunnable&nbsp;implements&nbsp;Runnable&nbsp;{public&nbsp;void&nbsp;run()&nbsp;{}}</p>', '1', 'BA3977A084B145A5BF09684B51B62246', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A687C3801B7144728CAC23B7C44593B5', '<p>类是对象的抽象<br></p>', '0', '21A75707C7904D10B947EA894C964F17', '2016-01-02 21:47:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A6892B40984D472A94D2223C61D9EEF4', '<p>arr.size;<br></p>', '0', '07B7C320E8814F87961A54500C335EA3', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A68E31DA524947B3A3283128CB059BE1', '<p>类中必须有成员变量和成员方法<br></p>', '0', 'A327EF48F62A483BBC718FB369E43458', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A6B39909F53542E3A5749BE0D82EA3F2', '<p>newLine方法是Writer中定义的特有方法，可以实现换行的功能，而且是跨平台的<br></p>', '0', 'EAFC0E3832DA40F7A57A9116F4F520F1', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A6BC89FDAD1C4CFEB1A2C6A721058F8E', '<p style=\"margin-left: 120px;\">for (int i = 100;i &lt;= 999 ;i++ ) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;int ge = i % 10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int shi = i / 10/10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int bai = i / 10 / 10 /10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (ge * ge * ge + shi * shi * shi + bai * bai * bai == i) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(i);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>', '0', 'D181F1B5A66B4F80B85A2B96AF4CE0F7', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A6C67E9695A743B4926A739D9FDAC8AE', '<p>parseInt()方法永远不会抛出异常<br></p>', '0', '486BDBB1E1774281923B41E3971B85D6', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A6F0B30FB5934F5A8DA8E2F0FD596D4B', '<p>方法重写：子类中出现了和父类中方法声明一模一样的方法。<br></p>', '0', '68D5B554ABF84DBFB8D3E32E8CC5B3BD', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A6F159FDDA8246C8BA4F28987517B08F', '<p>File类的<strong>available</strong>()方法<br></p>', '0', '7832171B68494338971BED67B760058E', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A6F2C9C5473B48D2A437C8F49EA4446A', '<p>子类的构造方法默认访问的是父类的无参构造方法<br></p>', '0', '0843D282F5804FCA91AF2ED1C0400BEF', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A6F3CE7597F547FABD582DE1F2E940FB', '<p>方法区当中<br></p>', '1', '9E473EA8F121455B9F3E561111B15163', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A715E75A4DE84E08AA22D08C57BB1527', '<p>import java.io.*;<br></p>', '1', 'B5B711E7C367447CBF57FAB18A88281B', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A732B1BEEE6E4EA0A378B849B11AF48A', '<p>隐藏实现细节，提供公共的访问方式<br></p>', '0', 'B7250FC6E5D141188C732DDEF690C51D', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A7607FBA1F534B28B0ECA22445A02D06', '<p>枚举中不能定义抽象方法<br></p>', '0', 'A3C61268AFA4459383DE274E8FB3F6AF', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A7660073683345B98599F6420596E5D0', '<p>Java程序要求用户必须手工创建一个线程来释放内存。</p>', '0', '01C7A074D47A4ACCBE08BED40078E82E', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A776C53CE7A7413195705B9AD50A0C49', '<p>线程由Runnable实例的run()方法开始执行</p>', '0', '129CFC454B654A4BBB45D648BDB23225', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A777FEFEEFAD477DA5F7E3B789E7E1DF', '<p>方法可以提高代码复用性，提高程序运行的效率</p>\r\n', '1', '2BEB9B564FB94C61B355D7438B21AEAA', '2016-01-05 00:01:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A7B14F1304E44F2DB4F22F0E514AE544', '<p>toHexString()<br></p>', '0', '4C654212C96740DAA48625D784C27DF3', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A7C04901B9B9436BAFEF651CB61D23CA', '<p>在堆内存中开辟了9块空间<br></p>', '0', '9D75DFD225904472AD17FB5F9C274603', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A7D85246438B4BC69D432B13B9A3CC2E', '<p>&nbsp;&nbsp; &nbsp;Eclipse一个工作空间可以存放很多工程<br></p>', '1', 'B6A0D94C0A0D4E0BB083EBD592BFBF8A', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A7DE2D83DE75466CAD7CF69CEAAFA92B', '<p>包含<br></p>', '0', '8A7E9A9E4E9140F7AF6250B16AA59E89', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A7E0020B803C4432B5A23F3029A5A6AA', '<p>以上都不对</p>', '0', '6BA9A5DC09074B8088BC24921E038050', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A7E37375C8C04646B017B21E5CA70366', '<p>以上都不正确</p>', '0', '73047572C7644AEB8FC9503F8E65DCA9', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A7F9A387F77248E7AFC2B5630640B920', '<p>并发是指多个任务都请求运行，而处理器只能按受一个任务，就把多个任务安排轮流进行，由于时间间隔较短，使人感觉多个任务都在运行。</p>', '0', '6E6B8269595945248D9A567970A1F006', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A80212780DB1440EB61119D37861191A', '<p>暂停当前正在执行的线程，并执行其他线程。</p>', '0', 'EB970D206E3649868C19C270C41904E4', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A809E9CD25CD4BEB90F4C614BF2F2699', '<p>如果一个类中有一个方法被声明为抽象的，那么这个类必须是抽象类</p>', '1', '18D60A3738584A2C8AE5FBBCCF6A1A1A', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A81BE14C11D34958888DFFBE241883BA', '<p>arr和arr1指向的是不同的数组地址<br></p>', '1', 'AE1170F6E882483EAE0861501243FE82', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A837AE043B95494E9A66C7A5F4E39F16', '<p>按照8421码的方式进行取对应位置上的数据<br></p>', '1', '9110653ACA9F48608306233DFD877CF4', '2016-01-02 21:47:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A83B029226074B20A66A3BC286CA2EFB', '<p>equals()方法默认比较的是两个对象的内存地址<br></p>', '0', '10440D70AC824DB0B71F0067532A0027', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A849AC9AFADB4F95A33503B85E3D0745', '<p>是线程安全的<br></p>', '0', '1DA52701C92B497CB51ECFF3DA659599', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A84A24E59DBD4BB993A73931705B5056', '<p>直接打印可变参数，得到的是一个地址值</p>', '0', '7F6F232F51E74EDB9127624A3053E707', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A852893ECCA648D790E7D18B464CEC63', '<p>getLocalPort()<br></p>', '0', '0AB1A30AC8D84D2EA68853FED6B1CC3D', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A896249097A64215B000C4F0D81FD52A', '<p>return&nbsp;num&nbsp;==&nbsp;0&nbsp;?&nbsp;1&nbsp;:&nbsp;num;</p>', '1', 'A503A9B328C4481AA283AD65EA13BB20', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A8A8AB9A4D1848B78A1436500C3E8CF1', '<p>for (int i = 1;i &lt;= 4 ;i++ ) {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for (int j = 1;j &lt;= 5 ;j++ ) {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.print(\"*\");<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println();<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br></p>', '1', 'E08D455384A148378FEA239EA4C17C16', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A8D1A7E16D414BBEA4EB02FA31700F5C', '<p>al含有两个元素对象</p>', '1', '685DFB0453F440FEBE66AC2422839BE6', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A8D82850413144BFAD27D0D5B6341EA8', '<p>int&nbsp;x&nbsp;=&nbsp;fun(1.0,2.0);</p>\r\n', '0', '0C9997D36DD54B168B960EC159815DF2', '2016-01-05 00:06:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A8DECB33240742638D0352D390D2A2A8', '<p>FileInputStream fis = <strong>null</strong>;</p><p>FileOutputStream fos = <strong>null</strong>;</p><p><strong>try</strong> {</p><p style=\"margin-left: 40px;\">fis = <strong>new</strong> FileInputStream(\"xxx.txt\");</p><p style=\"margin-left: 40px;\">fos = <strong>new</strong> FileOutputStream(\"yyy.txt\");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 40px;\"><strong>int</strong> b;</p><p style=\"margin-left: 40px;\"><strong>while</strong>((b = fis.read()) != -1) {</p><p style=\"margin-left: 80px;\">fos.write(b);</p><p style=\"margin-left: 40px;\">}</p><p>}<strong>finally</strong> {</p><p style=\"margin-left: 40px;\"><strong>try</strong>{</p><p style=\"margin-left: 80px;\"><strong>if</strong>(fis != <strong>null</strong>)</p><p style=\"margin-left: 120px;\">fis.close();</p><p style=\"margin-left: 40px;\">}<strong>finally</strong> {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 80px;\"><strong>if</strong>(fos != <strong>null</strong>)</p><p style=\"margin-left: 120px;\">fos.close();</p><p style=\"margin-left: 40px;\">}</p><p>}</p>', '0', '7D00EB30F0F64ACEB70B04B9065DFA90', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A8EAFC024F80499887817FD3953CF04D', '<p>方法重写的英文是Overload<br></p>', '0', 'D55A5B0A8D3F401A9E8D9EE820D72B85', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A8EB2D08C4C3492DBF136AFCAE0AD741', '<p style=\"margin-left: 120px;\">for (int i = 100;i &lt;= 999 ;i++ ) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int ge = i % 10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int shi = i / 10/10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int bai = i / 10 * 10 *10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (ge * ge * ge + shi * shi * shi + bai * bai * bai == i) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(i);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>', '0', 'D181F1B5A66B4F80B85A2B96AF4CE0F7', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A8EE5A206CED4C098DE4C5FFDEB74124', '<p>接口的成员变量只能是常量，默认修饰符是public&nbsp;static&nbsp;final</p>', '1', 'AEBD3C1BA9D043C6B8FF5EAA11FA98A1', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A8F846B9B78546C5BD08F564625884AF', '<p>getLength()<br></p>', '0', 'D05C0D691F944D1F9968D276C41994D5', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A93CBEC076AF471389ED002BFAE6CDB4', '<p>JVM就是Java虚拟机，包含java核心类库</p>\r\n', '0', 'E19659CECF6E4E53BD715D31570B7F8D', '2016-01-05 00:13:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A93D3CDC31D74E2BA197F3C0D5D0F5FB', '<p>因为它的成员全部是静态的,所以没有构造方法<br></p>', '0', '9249DAA6C0ED483F982C0959E0F90EAE', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A93DE3957575458DAA9C55095ACBEABC', '<p>默认修饰符的访问权限高于protected</p>', '0', '5110A7A94F6C4F7A9FC8E8013D6E7B30', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A9401DE2E9464377B84685B891CB002B', '<p>false true<br></p>', '0', '823179523FAB487E9D13AEC598CC4560', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A949239459F84DC79AEECFE042DE4532', '<p>顺序结构<br></p>', '0', '5C80F57C23D2411286CC72CABC31BF67', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A94A3D7F7BA9468C864E9AF6C5F24C2E', '<p>局部变量和成员变量名称可以一样，在方法中使用的时候，采用的是就近原则<br></p>', '0', 'C30C352232A347CBA31D49BA18A9E785', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A95094891AF841FAA0482F872A5A7E8F', '<p>StringBuffer是一个可变的字符序列<br></p>', '1', '2C43CC1C4D1E4373BF8F2932AF7089E2', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A97229D03EEC42348C49F239A5D678C0', '<p>javaw.exe<br></p>', '0', '881CD969294E430FA746861339B82825', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A9CA34D08FC74C4494E7F8A320A585F1', '<p>二进制0b100等于十进制的4<br></p>', '0', '50B161119C2040C4A4ED267103582F2A', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A9CDD52C3DC0493CB3EBF861DF6CD886', '<p>null可以调用方法<br></p>', '1', '469DBB56229349EBA5B35B7263B87B81', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A9D2E02FC7B74DABBC5DA6D8DBFACFEA', '<p>for (int i = 1;i &lt;= 5 ;i++ ) {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;<br>&nbsp; for (int j = i;j &lt;= 5 ;j++ ) {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp; &nbsp; System.out.print(\"*\");<br>&nbsp; }<br>&nbsp; System.out.println();<br>}<br></p>', '0', '620E82A73616435F840F499748915126', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A9E4C2EE75FC427C96739ECF815FCE5E', '<p>静态修饰的成员变量和成员方法随着类的消失而消失<br></p>', '0', 'D7983AD07843499CA3148A18146E6198', '2016-01-02 21:48:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A9EBE872DC6A499799FDDB9FDBB1CCE0', '<p>编译报错</p>', '1', '6AC0DEC2F5444E62B028483DE5F98584', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('A9F0845DEF41400F90F0DBFE2BF8401D', '<p>去除字符串尾端的空白<br></p>', '0', '6AECA4D395874C1DA874D0C88C1A7AE1', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AA1EA2DD2F254716A2550AA44C9D84D6', '<p>匿名内部类不会编译成.class文件</p>', '1', 'F21472BC32C54433B07816F5A09E80F0', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AA292B1B41C94F26A70BC89CA5DC3835', '<p>根据面向对象的思想要求，所有的字段一般都私有化<br></p>', '0', '53972A8A8B14458C8341799FFA6FD180', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AA57A52C67AA499EB4B51E47754000EA', '<p>for (int i = 1;i &lt;= 4 ;i++ ) {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for (int j = 1;j &lt;= 4 ;j++ ) {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.print(\"*\");<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println();<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br></p>', '0', 'E08D455384A148378FEA239EA4C17C16', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AA5F69A509264D9592094AE5BA8229E1', '<p> Writer</p>', '0', '1BE12F8B802B4621BF60F5D3D05F0D73', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AA651C268BA74708A66F19B6E4112922', '<p>ObjectOutputStream</p>', '0', 'E0CBD172F7544F0B8F9967B9B6F41B6F', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AA92382E816F4E0BB22A5054BBFE5426', '<p>PrintStream</p>', '0', '5B39CC05EBBE4AEFA53F69D79AC31BA8', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AAA6E802CE6F426FA92C0AD0ACD334BA', '<p>“”可以调用方法<br></p>', '0', '469DBB56229349EBA5B35B7263B87B81', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AAA820D6FD144D778347C76C423FE454', '<p>输入<br></p>', '1', '5A31B84F00D24A6D9D10F5AA65D3A032', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AAC37317B2E7455A863DD8AEDF1E07CC', '<p>list集合里面可以存放Object类型的对象</p>', '0', 'BF47B511F1FA4ABDACFE11DAD30C385A', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AAC437F897914B569A62006F00D128EC', '<p>x = y * x;<br>y = y / x;<br>x = y / x;<br></p>', '0', 'A9BEEC39274143529CAA33482538E62B', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AAF663E58E7642C3B806086E7F4E1EDB', '<p>可以直接把一个Map集合的元素转换成List集合</p>', '0', 'F605CEE3377643D4A51B22A59CA20FFB', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AB0B06654C044455841445CDDFC73DAD', '<p>mkdirs<br></p>', '1', '5EE5CE663C5D4F4B97ADE513BE3D01E6', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AB11E9D62C7F4CE5A566B44917F4DBE1', '<p>功能范围：JDK &gt; JVM &gt; JRE</p>\r\n', '0', 'E19659CECF6E4E53BD715D31570B7F8D', '2016-01-05 00:13:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AB1FF573BB1C42379EE9D5BE7EF1DFF0', '<p>定义构造方法，传入被包装类的对象<br></p>', '0', '4FCCEBA8910343FE9C3EB81A472B76C3', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AB3BC5C9B2A74960885E528377B63BF2', '<p>public int <strong>available</strong>() throws <a data-cke-saved-href=\"mk:@MSITStore:E:\\java基础\\JDK_API_1_6_zh_CN.CHM::/java/io/IOException.html\" href=\"mk:@MSITStore:E:\\java基础\\JDK_API_1_6_zh_CN.CHM::/java/io/IOException.html\" title=\"java.io 中的类\">IOException</a><br></p>', '0', 'B2CE5860E9524DEAAA0D060A666E3D9A', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AB457E9AA08C42AF913ED5C962B0B00F', '<p>sleep</p>', '1', 'A0EAA6FC0A3F48239C4F25D5934ADCCF', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AB49C0CAD07E4E2B92663583BB36BE6B', '<p>join</p>', '0', 'A0EAA6FC0A3F48239C4F25D5934ADCCF', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AB56E9221FE047E695C5FE3C4ADAAA62', '<p>fu fu 10 20 30<br></p>', '0', 'B93900F368D3426582BF764055F4B820', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AB7C59DE31064D63B1DD24A4CA784C34', '<p>代表字符串连接符<br></p>', '0', 'AB500DE2A4C343FAB446021D260E2ABF', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AB83A0CC83DE46899B5ABCF1EF618823', '<p>过String的构造方法<br></p>', '0', 'DD60C385B16445F1931B6C34F5E3A771', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AB84E4E303D34B6C8591FB19F4CCA7DF', '<p>arrr中可以存储3个二维数组<br></p>', '0', '90C634D1F0374751822F0987D5CE948B', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AB8DD25B18D94988B5BA90D93969A703', '<p>抽象类一定有抽象方法</p>', '1', '08DAEDCB974649E492F3DD65AADEE648', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AB9F6A4902FA474185B53258963F947C', '<p>在Eclipse中新建一个类的时候选择要继承的类或者实现的接口,就可以自动生成要重写或实现的方法<br></p>', '0', '42A26E2F819042C18518600FACE18619', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ABA48C3BF18845CE8DBD87F0DDC741FD', '<p>寄存器<br></p>', '1', '8D00691B69E84B08A222DC27CFCEF295', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ABB612740ED147D686848E6297839650', '<p>false<br></p>', '0', '25A2881255F447F4A07944DBEBDB5677', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ABC491A315B649B5812DC9BF9C02BFD0', '<p>10&nbsp; 20<br></p>', '0', 'AAFF84AD7A244E008ABB512CF54A50CC', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ABED3D0677FF4CC8BCDFECC98D01B9DA', '<p>Inner.print()</p>', '0', 'E29A9AEA6D304ECFA5AB1DF295D2E766', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ABF0C6D609BA4FC1ADEE0A17678FE11E', '<p>false false<br></p>', '0', '783E2928317C44178864F84BE2776A51', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ABF38B7EBAD14A95BF41B363846AE25D', '<p>以上都不对</p>', '0', '270639BBB31840FA98D5A37240A91DE9', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AC0403B645294604902F3F84F271F813', '<p>没有太大区别，意义都一样<br></p>', '0', '597ABAF3641F4B9C9937466F38C1FEA3', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AC1B4EEB852F427AB993BD41DB48BA8C', '<p>x=1&nbsp; y=2</p>\r\n', '0', '3F897C38AC0B401AB845A5D6A07D6DA2', '2016-01-05 10:56:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AC78AE525518458FBDDB109375E0A4CC', '<p>以上都对<br></p>', '0', '597ABAF3641F4B9C9937466F38C1FEA3', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AC7D737DC43E4A399DD2B367393B55C5', '<p>ServerScoket <br></p>', '1', '8AE3D46240074A02B35AD25E2286C158', '2016-01-02 21:47:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AC8048AE424E48ED9AB5E1E2EAEDC049', '<p>accept()<br></p>', '1', 'EAFBB0FAF40346CE8DDE217B235265AA', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AC87B756821C4E5AA354B7665BFFC5E2', '<p>Object</p>', '0', 'DDB499346C3541349E943B26C74E6BA2', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ACA12CAF360942A785E56119047F634C', '<p>Java接口中可以声明私有成员</p>', '0', 'C335D49C132E41599266BC11F1EDE53C', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ACA9B33594174F74A283E4F3490338BB', '<p>class com.itheima.demo.Object<br></p>', '0', 'DBFA1AEEDCD746B7BB2C6FC587226ED5', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ACAF19AB630B4FDCB7FD460BF5ECEADC', '<p>&nbsp;A&nbsp;a&nbsp;=&nbsp;new&nbsp;A();</p><p>&nbsp;&nbsp;&nbsp;a.test();</p>', '0', '66128BDD3DE34807B8C62BBD2DFF0850', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ACB2470F122E4D50AF05FA1E24C03E82', '<p>newLine()<br></p>', '0', '8D239F6A1D3F400EB9B0C583E9582508', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ACC7579448DB4E10AF83BFB159BE629F', '<p>coninue和break不能同时使用<br></p>', '1', 'D5CA68DAC00C46709D7913CC0252068C', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ACE6F9EA92DD45F496616C7D75CC87D6', '<p>这个类被final所修饰,所以不可以被继承<br></p>', '1', '3A58D147388F4DE9993481A748A806D7', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AD1E60D31F9C4484B40CF8E45A237011', '<p>是个接口<br></p>', '0', '036DFCF4B15C42B49C06007CC9F18310', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AD26AD2DF1AD4EA0BF5D1402648C2EFD', '<p>Math.abs（double a）;<br></p>', '0', 'A6439947B71C40CEAD1EC0391779736A', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AD2B5ED80A7C495A84EC657834304330', '<p>listFile()</p>', '0', '9B34B88C8C0F4C799AD962B7DC08FB5F', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AD366FAACD3347E4A3716F124DBD9058', '<p>TreeSet集合自然排序是让元素实现Comparator接口</p>', '1', 'EBD6207FD03840779A2B1F3FACF35868', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AD65879F90F348B09077A2CF0631ED14', '<p>泛型定义在接口上时，接口上的方法也必须使用泛型</p>', '0', 'CDF0A91CB25D402087422CB8EF9B441B', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AD926DD435FC49E7B02EEE634BB4D6B5', '<p>Java虚拟机的启动会启动一个进程，这个进程是单线程的。</p>', '0', 'ABEF0B340EC44077AD6C2CEA6561C10F', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AD958D6EB659428D8946645AE9FB57DB', '<p>int所占4个字节<br></p>', '0', '723775BD54D8497D88F659B14BBB32F3', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ADA35BA1B8B449A2A8DF8822F541AD19', '<p>&nbsp;arrr中可以存储1个长度为2的1维数组,1个长度为5的2维数组,2个长度为2的1维数组<br></p>', '0', '90C634D1F0374751822F0987D5CE948B', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ADA9EB370D774CC9AFD3CD9983B0AE70', '<p>对象名.class<br></p>', '0', 'F7F7D00C082D4DCB94E2CB544ADC2B1D', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ADB98850103D4F9FB48A5A2D51D3C9CD', '<p>BufferedOutputStream是FileOutputStream的父类<br></p>', '0', 'B94EBBCF0DE948F794FBA83978CFF19E', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ADC03084B08F4D3F9BE68AA8A730508C', '<p>for( ;int i&lt;1 ;i++){…}<br></p>', '0', 'E12729C58134468184A5EB870BD048FF', '2016-01-02 21:48:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ADC5F5EDAFF041FBA14D6AEEB1F6996A', '<p>TreeSet集合比较器排序是让元素实现Comparator接口</p>', '1', 'EBD6207FD03840779A2B1F3FACF35868', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ADDC31B85FF442289B7F7A72743E6731', '<p>以上都不对</p>', '0', 'F9C9E3F1CC4049808E592A3A6DA32E59', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ADE4D61DB6D542488020C2ECC1F551D0', '<p>write(char[] cbuf)写入字符数组<br></p>', '1', 'DC03150AE72749B5A74CA278014B2295', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ADFC0E5849CC4E588FB1C6006C48F519', '<p>在程序执行的过程中，在某个范围内其值可以发生改变的量<br></p>', '1', '7406034D5EE64C8FB1E2F7AAB8330479', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AE00E68E96E8474DA729076F517A37B4', '<p>根据成员变量重写HashCode方法和equals方法</p>', '1', '41CBAD63AC204A448F2522D147517BC8', '2016-01-02 21:48:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AE1DD16C588E478C9016A66E43ABE3FD', '<p>当异常对象是Exception类（或其子类）的实例时，能通过 Java 虚拟机或者 throw 语句抛出该异常对象，并能通过try…catch…finally处理<br></p>', '0', 'D8D5184E3E7648339A82A7E8DA4E6F2B', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AE38649A89AC4AAB9446E6A288BBF33E', '<p>通过对象名.方法名(参数列表)的方式调用该方法<br></p>', '0', '30A3D30DECD144BB97AA52A01513D6A1', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AE42FA053C35443BA4A2CE07627F8AFE', '<p>getClass()方法获取的是字节码对象<br></p>', '0', 'CCB84B105B274AF4ABBCA1FCD801D927', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AE47B43099024E8E863855E6F398EAB7', '<p>int c = (a &lt; b) ? a : b;<br></p>', '0', '59247DE99BC4484284F0FE64E35FE98A', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AE4E33F69E8044C5A6CA9D513D1CF562', '<p>File类的<strong>length</strong>()方法<br></p>', '1', '7832171B68494338971BED67B760058E', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AE5E30FA548C42D68A7FEA4FF7755F1F', '<p>Math.abs()<br></p>', '1', 'C6645ED07E5E43D1B02026C53C642B76', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AE68D362820C463FBCD4CD33FAD848C1', '<p>java.util.Map<br></p>', '0', '31839F2DFE7844D7B2D244FBDF93D4BB', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AE75B57ECFB6405DAB0D66398A8EA25E', '<p>加载：读取class文件<br></p>', '0', '7589802B2CA34372A08D08979F875DC5', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AE8C0390056A40D4A6D890AF27F6DF9B', '<p>for (int i = 1;i &lt; arr.length() ;i++ ) {System.out.print(arr[i]);}<br></p>', '0', '88764B0A8F174F5EA0AC954E7957F85F', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AE90D412182141F587F2E4FF26A7B586', '<p>startsWith(String str)<br></p>', '0', '92E5166629224AB5A8A22B7DA6BD9021', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AE98AAABF52D4F62B99589C8B25D0A75', '<p>1024*2<br></p>', '0', '3CCE2C9289C147A886A36B03E3AD9553', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AE9F6555F02A4A3F8A6A9AC0C448F636', '<p>Son&nbsp;s&nbsp;=&nbsp;new&nbsp;Father();</p><p style=\"margin-left:21.0000pt\">&nbsp;&nbsp;&nbsp;Father&nbsp;f&nbsp;=&nbsp;s;</p>', '0', 'F62FD53FC2854F519FF92BFFEE905FD7', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AEA40335A936409582FD887AF6DFEE81', '<p>z &gt; ( y + x )</p>\r\n', '1', '361AF02FB5F940C1865B9AA9DB7AA7E6', '2016-01-05 11:07:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AECA2346C2514CEA9B62F106FBF10118', '<p>6<br></p>', '0', 'D6A1F13C773E4C1FA93BE52EBA23D2C8', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AED0F873CFDB420CB403942C594F8251', '<p>这两个方法都会造成当前线程进入阻塞状态。</p>', '0', 'E4AAC9803A204AECA08B822E958F6BC7', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AEDA1F31544E42A6B2DC6218A98D80FE', '<p>一个类如果没有写明确标识出父类，那它就没有父类<br></p>', '1', '4A82737752DE483AA349A1C8F69AF539', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AEE546654C9B4C57BF9B63B6A9733F6C', '<p>true false<br></p>', '0', '9251C7A13D474CD28C7CB5E4E869441B', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AEEBC420B8F94B65A0E80DE334B1D2D6', '<p>②①③<br></p>', '0', '98846009C6134E72903DEECC3E04550F', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AEFFD8602ED34EC8A12DCA17CD619189', '<p>在程序执行的过程中不可改变的量<br></p>', '0', '7406034D5EE64C8FB1E2F7AAB8330479', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AF08A9290102497E9B5E778A9FEC87BD', '<p>60<br></p>', '0', '3493B4F1F3264C0DBD67F03CC3BE19F2', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AF1A64BBABEF4EA387EB97A4ECFCFBB1', '<p>switch(a+b); <br></p><p>{ ...... }<br></p>', '0', 'D1239F78C184432CAFB7CED4F941D4B5', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AF3D6C0FF89848F7A79A6B6C2486BF71', '<p>line.CharArray() &nbsp; &nbsp;0 &nbsp; &nbsp;arr.length<br></p>', '0', 'B142786382A44D27A8AB251F2B4D9CAC', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AF4D6B124DE348C998440B077E4073E3', '<p>b = b + 1 报错;<br></p>', '1', 'F5D31655810B4243A0A9FE390258464E', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AF5A28D5F5B04643ABCCE5B85AD599B5', '<p>ByteArrayOutputStream<br></p>', '0', 'E0CBD172F7544F0B8F9967B9B6F41B6F', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AF63CDD693D44C2E98AE8BED7D46E7AF', '<p>20&nbsp; 20<br></p>', '0', 'AAFF84AD7A244E008ABB512CF54A50CC', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AF65C2284EBE4A31B65ED6819580CFD1', '<p>==和equals都可以比较两个对象的内存地址<br></p>', '0', '69B956F2AF6A4DE9AFD7EF106E672FC0', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AFBA1A65170148A28C26A1827BE4553C', '<p>arr[3][3]的值是0<br></p>', '0', 'E092B7D678094144B90707B4288ED5F7', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AFED671A420B4F5CA1CF420309BE40E4', '<p>long<br></p>', '0', '0B9F88745EBA4854A16F1B71E2EDFE20', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('AFF2086612FF4822AE7A89539D36D0EB', '<p>一个线程是一个Thread类的实例</p>', '0', '129CFC454B654A4BBB45D648BDB23225', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B0030799B60744D9881D80A7780E264F', '<p>方法名相同,与返回值类型有关,不看参数列表&nbsp;&nbsp; &nbsp;<br></p>', '0', 'F1B12BA5A25E4B24AF72821832579E3A', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B00CEFC8816742EDAF89D0B3E9C190C3', '<p><strong>int</strong> b;<br></p><p><strong>while</strong>((b = fis.read()) != -1) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 80px;\">fos.write(b);<br></p><p>}</p><p>fis.close();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>fos.close();</p>', '1', 'C4DB57BB99F24DBEB13E9519043321C2', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B0104915408F45E5AE23CE5618BA174D', '<p>创建对象：为该类创建一个普通的对象<br></p>', '1', '7589802B2CA34372A08D08979F875DC5', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B0244DFB8DA04DD2992878B16F63E12B', '<p>获取日期对象<br></p>', '0', '124724C69E1244E8B8ADF5F42EFF2E34', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B02BD0DA2720433C98D367B60765C363', '<p>老师是学生的父类<br></p>', '0', '961962CDF579482D8DE35AF3DBF31BFC', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B04FACE2625D4046B8F7586BC3516E1A', '<p>设置日历字段的值<br></p>', '1', '8BCBC2E1D3294EAA9FF5594E42D3E5C7', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B0505B34567B4E8CBB28DD9E2D47E1D1', '<p style=\"margin-left:42.0pt\">int temp = arr[i];<br>arr[i] = arr[arr.length-i];<br>arr[arr.length-i] = temp;</p>', '0', '14F36999518642BB88E0EF9BC295CB74', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B095FFEB7C514EB99E5EFFB4401FF092', '<p>29</p>', '0', '79B602AAD637488BAFB1D62CBA7CA463', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B0A79A7D977F4DAAB4AAE6F39CBB7290', '<p>new int[2][3]</p>\r\n', '0', '6CBE3C70D0DA482CBE77BB3375CDBEDA', '2016-01-05 10:31:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B0BCC2031F3341638B2396AA1F2B3EB8', '<p>代表阶乘的意思<br></p>', '0', 'F9D20990860D414DA4E4E1F7B04D6F60', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B0C45E5982B64402B1691C4F80DACA4E', '<p>listIterator()返回的是ListIterator的子类对象<br></p>', '1', '6127974AD683482896FE2C196127A91A', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B0C9E77C757C40B3B65BB2EA3B95E08E', '<p>public int <strong>read</strong>()throws <a data-cke-saved-href=\"mk:@MSITStore:E:\\java基础\\JDK_API_1_6_zh_CN.CHM::/java/io/IOException.html\" href=\"mk:@MSITStore:E:\\java基础\\JDK_API_1_6_zh_CN.CHM::/java/io/IOException.html\" title=\"java.io 中的类\">IOException</a><br></p>', '0', 'B2CE5860E9524DEAAA0D060A666E3D9A', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B0EEFCB94CE34E8D81088DD3F4A206B6', '<p>Socket socket = new Socket(IP, 8888);<br></p>', '1', '542E4E11A78E42C4B90361B6A797B712', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B10A2A301E304C728F1C60474F929063', '<p>&nbsp;abstract不可以和static共用</p>', '1', '6D8FAA56FF44400A92083E32C1EA713A', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B11ACD7860E645B9930EE0BCE0869AE0', '<p>false &nbsp;alse<br></p>', '0', '0410F6FBDC46487E961BF860ECEF3FAD', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B11B09A78F254B8080A4B80D17D6BD6C', '<p>最优<br></p>', '0', '30C0CA825EAA47219CA0FF69743134FD', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B139C68B27294FE884A887CB4DECEA98', '<p>该类描述的事物是学生<br></p>', '0', '88B48617FD0D4665B7713D52AA670D39', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B147FA1E47944C609EB05A1B83010DFF', '<p>变量就是常量<br></p>', '0', '7406034D5EE64C8FB1E2F7AAB8330479', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B14A226B30724D8E98887A20DB844539', '<p>void</p>', '1', 'DBBEE1769E404ADCAD4462A129F60758', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B14F69DE30E7448289EEDD33438CCB81', '<p>sleep()方法可以在指定的时间内让当前正在执行的线程休眠，而wait()方法则会导致当前正在执行的线程等待，直到被<a data-cke-saved-href=\"#notify()\" href=\"#notify()\">notify()</a>&nbsp;方法或&nbsp;<a data-cke-saved-href=\"#notifyAll()\" href=\"#notifyAll()\">notifyAll()</a>唤醒。</p>', '0', 'E4AAC9803A204AECA08B822E958F6BC7', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B15A30EDEEC44A1DA1A54AF4A6BDE2AC', '<p>程序正常运行,但是zzz.txt文件中是乱码<br></p>', '0', 'D7690B5A97EE496F94666765927C8F0B', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B15A7D877207447DB9DDB315BFFF96FB', '<p>3</p>', '1', 'E1C51F373914491B8DB8D8BA07AE4CBB', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B19FC5F2EE9B4AF9BFD26762E8821EE0', '<p>删除数组<br></p>', '0', '73F542C499F74E68831C486654B98B21', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B1A41D9B3A894A1F8675AD49D76764F7', '<p>线程不同步，因此交替输出hello&nbsp;和world</p>', '0', '9E1D64F685E34B92A4103F1211B4B95A', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B1BA696BE7104D64ABD07B23BF7DD70D', '<p>BufferedInputStream<br></p>', '0', 'D575FB6A65FA4EA9B1AC66964876F719', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B1BAC35CDD844666B92C9FFEA68C725D', '<p>增强for循环可以直接遍历Map集合<br></p>', '1', '48D417D143DA43BF8049449D7082C6FA', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B1CD465B4DE84B5F9D09F59D0E56B878', '<p>Vector是一个接口<br></p>', '0', '9BA87153A4504A72AA7F8F8AE1E0CD1D', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B1D2D230E6EF42EDA4FC0DFD097EAE24', '<p>IO流<br></p>', '1', 'C9941695E82148F68B3F583A562C9A62', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B21711F023DD482C93DFC399C71EEB25', '<p>封装之后的字段在本类内也必须使用get/set方法<br></p>', '1', '53972A8A8B14458C8341799FFA6FD180', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B21D4C274C7147B3B867FD954EBB7DD6', '<p>9</p>', '0', 'E1C51F373914491B8DB8D8BA07AE4CBB', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B22D4751F7ED4AF4BD6449F8660AD8DF', '<p>反射机制指的是在程序编译期间，通过.class文件加载并使用一个类的过程<br></p>', '1', 'F11B456C93F444F1A347EA1E79E7FBC7', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B23777751233444B9D8696BDE06FE494', '<p>getDate()<br></p>', '0', '3DD40B0051E5410BAC65E7777FA277DF', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B2412888F7144308B7D6E3E209122CEC', '<p>if后表达式可以是比较表达式<br></p>', '1', '6801C0F41E3C422A8D4E054B17ED5250', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B24EB8065A824D0B81E70DC786C4F4F0', '<p>java.util.HashMap<br></p>', '0', 'B83657E346174DF9A72D84B69D89E74C', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B2640F65800F4607B76B5FF91B8E93BC', '<p>是JDK1.5版本的<br></p>', '0', '910616FE32D74EDF9BE08990793380D7', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B28CE11A65A3481F927106E2370971BE', '<p>&nbsp;抛出异常<br></p>', '1', '979217D547154A34BCF2AFC3EB0DF9A6', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B2C80165E2734D1083043945118BC6F2', '<p>软件项目中的设计模式是可以提高代码的效率、易读性，使代码更加简介。<br></p>', '1', '4AA86A7960B84562BE0A1F96D081064C', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B2D99A413F97455EA1AA111758130B85', '<p>import<br></p>', '0', '1D294DBEC5524BC6A1D5C631911AF8F7', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B2F2FD7693864611AED03E71F83457E2', '<p>以上都不对</p>', '0', 'EBC63FEDFC534B978F58EAC50EC5950E', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B2F3B3FC85A64AEA81A9949C291CC443', '<p>equals():&nbsp;没有返回值</p>', '0', '1D27400B24294D5483ABACEA7527475B', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B300C3C044A14CF0841197412E91ECA2', '<p>可以通过Reader r = new Reader(“c:\\\\java.txt”);创建一个输入流对象<br></p>', '0', 'B9D64DEC92674AEEB98A1D34C9266E16', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B31A708AA5E8487E8EC03F994AD83ED3', '<p>多个线程运行时执行顺序是按顺序执行的</p>', '1', '68867F39CC7F46FA8D1316B7F3B811E0', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B31ABD97AA6245E6A37E6E5B99EAC575', '<p>效率低</p>', '0', '39B854F1E4634F71A42EA97AFC1DA370', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B340C79FADC44A5D83C2B656EED676FC', '<p>执行4次<br></p>', '1', '62B73B2E710C427D8CC060B7B937C9DA', '2016-01-02 21:47:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B3614E61360E414C9C2308C800E3E4DB', '<p>101</p>\r\n', '1', 'F307AA3E5E5B4A10B6616053F4AD8CEF', '2016-01-05 10:36:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B364CB64EFFC4C73AB95C9E46072DEF5', '<p>break只能在switch中使用<br></p>', '0', '86F3841E6C6945C4B90EE3FD5BE6E2F9', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B3C3A46BE232488FB1000A586A851C0B', '<p>封装<br></p>', '0', 'F8DF29A4DA084A118091C5C9157E7184', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B3F4B0DD4EEA4EE183F9C21811DB8493', '<p>Eclipse下低版本的JDK编译生成的.class文件不能够在高版本的JDK下运行<br></p>', '0', 'F4F64204867443F6B7BAB2FA70C00131', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B3FBA17C7E9F4265ADEF6CDE6C085FDD', '<p>泛型可以避免强制类型转换</p>', '0', '2C416F37A6994C14B3D87C469DAC3D8A', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B43C192E338A406781B2CB9BA4C3E21A', '<p>keySet()<br></p>', '0', '005A1DFF0D044DB08C8AE85D8A358C7C', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B43D59E5085744EC9E560903321106F0', '<p>用ByteArrayOutputStream和ByteArrayInputStream实现文件的复制，会出现乱码</p>', '0', 'B8E832318E7E45858627E4128B6C682D', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B43E980C344043C880799CFA90C1D3C6', '<p>成员方法，编译看子类，运行看子类</p>', '0', '2CEB58B718AF4C14B43FB3F1349ABE3C', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B45CA13F54574E88AB31CD33B1D58933', '<p>每个位置上的数相乘<br></p>', '0', '9110653ACA9F48608306233DFD877CF4', '2016-01-02 21:47:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B4682EC62E3A480EBA7B10530948E793', '<p>97<br></p>', '1', '129512937C50417BBDD4EC4B2FC54C3B', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B47E3D9D7EAD4B1388C77894E8380FDA', '<p>&nbsp;线程是指进程中某个单一程序的控制流，是一条执行路径</p>', '0', '9F2B7FDB50304EE79C9D1F4008F36040', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B4A554E0F037437481832B7E37BAF552', '<p>length()<br></p>', '0', 'D05C0D691F944D1F9968D276C41994D5', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B4AFA63A4E3E49509DD0A04EBCABDA3A', '<p>Ctrl+N可以快速新建一个java文件<br></p>', '0', '5C059B1C4AC14AFBB2362D864314C2E6', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B4B994EA18C74F4E8E4D2D0C6634F325', '<p>98</p>\r\n', '0', '10BCED75F1324ED792FD968B905CAE24', '2016-01-04 23:46:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B51C44C4DD744D039B04E60290D83C37', '<p>将字符串变成字符数组<br></p>', '0', '577A0399B4CE42D08044BB0726034354', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B528E843585943899CA0FE17BE97F357', '<p>没有源文件,字节码文件也可以加载进内存<br></p>', '1', '4B8EE8199AA543C8A168C7D7E14ED783', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B5292D39D29B44059226B64BE6D99E44', '<p>符号字符<br></p>', '0', '023743024EA94486BBC98B4E82A7E7AC', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B52C82A54FB84F26AF8173BE58AD4D7B', '<p>for (int i = 1;i &lt; arr.length ;i++ ) {System.out.print(arr[i]);}<br></p>', '0', '88764B0A8F174F5EA0AC954E7957F85F', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B535FAE10764406D9116981022D209DF', '<p>提供get和set方法访问其属性<br></p>', '0', 'E0776C47C6974C1983E9E63838AC8011', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B545E9B4422849E59E13A939431A7C3D', '<p>\'A\'=&lt;c&lt;=\'Z\'<br></p>', '0', 'FA85969CBD934CE8B667BC44499BC40B', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B545EBA746F4434DACEA92B2468102D9', '<p>instanceof是关键字，判断前边的引用是否是后边的类的实例</p>', '0', '6F75076BEEA64ABBA891BF6E26843693', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B554B70B43EE47A3A5B37434900AC8E9', '<p>arr.size();<br></p>', '0', 'D0CEBD11343C4570937E04BC5926DC7E', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B5559B92C4DE4E6DB6AE85320083B606', '<p>equals()方法用于比较两个对象是否相等<br></p>', '0', '10440D70AC824DB0B71F0067532A0027', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B56B3818A8FF419DBF5057B05786E25E', '<p>add()<br></p>', '0', '8E0079A51EEC4699A5D710D35D29DD2C', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B56D120E22284995A974CFE9F0756435', '<p>向上转型就是把子类对象赋给父类引用</p>', '0', 'C227C2AD2B684621A3C11949260EC402', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B57B176E456F4FB79DCAD1215CB7264C', '<p>write(char[] cbuf)</p>', '1', '3853C01BD30A4CD18A1F90BCE961F137', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B5A14116AF66493AA430669B2BBDE28B', '<p>BufferedReader<br></p>', '0', 'A2666A4C84B147AD8609D748CA52EA04', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B5A1EC93C2974B88AEF40D546042136E', '<p>对数据大小无限制<br></p>', '0', 'F1AFAEA79CC340B2B2BCC378C0F81379', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B5BD627B45EE4EB0AABD30A467C52171', '<p>月中的某一天<br></p>', '0', 'C090E3279C78499FBA2C55109E996B79', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B5C364C6DE914AF6A514101AACA9D931', '<p>if语句可以没有else语句对应</p>\r\n', '1', '30E0743CAF524C0685457F7EE88C5216', '2016-01-05 11:01:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B5CB09D433BF4CBCBBC8D73E4F000C05', '<p>void x( ){ return true; }</p>\r\n', '0', 'C20E08B1A8874E14A662A03B51934758', '2016-01-05 10:53:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B5D9D8137029483993648BE2E478994B', '<p>在调用show2方法的时候，才会确定T的类型是什么</p>', '1', '2B10E85490784C558198CD8CAFEAB066', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B5DAB8B8927C469892501B09A3BE5EDB', '<p>方法中可以有多条return语句<br></p>', '1', '11AD8073BC5440578ADB14452E3D2094', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B5E2F7BC09F54C8EA859FF03A4A7AB5B', '<p>[0-9]<br></p>', '0', '7983EFF7EAB3486AA0439DE0C242C43A', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B5E36F25680C45F2926FC2CEC0D967A4', '<p>import&nbsp;static&nbsp;java.util.Arrays.sort;</p>', '0', '3A5A4A1B904E468D9C12FC86476F3A06', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B5EDC449002645F183B27831D5AE970A', '<p>seek(long&nbsp;pos)<br></p>', '1', 'EFFFA7A3C7D4439E9ACB8A91C58CB8BA', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B5FD89596A5D45719772396F154559FE', '<p>00000000000000000000000000000000</p>\r\n', '0', '7D8C36B83A4E4A649927ECFAD783A997', '2016-01-05 10:32:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B6061DE3BECC476082747B1E079D15E3', '<p>Eclipse 安装插件只能采用把插件拖到dropins目录下<br></p>', '0', 'B6A0D94C0A0D4E0BB083EBD592BFBF8A', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B6198AEC1B534803AE05C21E72889D17', '<p>正数 负数 0<br></p>', '1', '99438713791F4BE5B06AA1C51F25A1E4', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B62179515ED344CF98C1A0654BA7E73C', '<p>八进制010等于十进制的48<br></p>', '1', '50B161119C2040C4A4ED267103582F2A', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B65128F5416B48D4B67F20453453C241', '<p>相同对象的hashCode()可能不同<br></p>', '0', '7A48391745034D779414787C58D3C0ED', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B6589FD517254216A87E8F38673080A5', '<p>boolean isEqual = (x = y);<br></p>', '1', '093164F779F84F12A6592CD451E8CD72', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B66321C6353F4BC4B85DB7760B782A1E', '<p>即使去掉了泛型信息，代码仍然不报错</p>', '1', '2FF773FFEE944FC292F92C6B09F338E3', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B6896F1665874134BAE7FC3560E096B4', '<p>HashMap线程安全，效率低。<br></p>', '0', '54A8D0C2268A4968AE8DEB65F03C3009', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B68C18F2986343ADA5087FC31B8360BD', '<p>12</p>\r\n', '0', '215BD317DDEF4C5E8E79B264460C2CC2', '2016-01-05 11:16:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B693466270A54911BCEB37606E808FA7', '<p>不允许重载</p>\r\n', '0', '40BC6D3CB9894074B3229744A9B46128', '2016-01-05 10:58:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B6960E9CE3ED44A698DC8CAA6273128D', '<p>不会影响TreeSet本身的排序规则</p>', '1', '9BE0823A56E946E595E5B53ADE7C6B84', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B6DFE8A7FF254BB1B26A951AFB04DBA5', '<p>long start = System.currentTimeMillis();<br></p>', '1', '84D76288A25E41189383050ED586A9E8', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B6F1B03A3A724FD38F92E43D96D47D12', '<p>int compare(String str) &nbsp; &nbsp;1 &nbsp;-1<br></p>', '0', '23CF65229C414EA4AB416B8DD803955A', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B7236E1B74884968804C07ED8AEB8B59', '<p>100</p>\r\n', '0', 'F307AA3E5E5B4A10B6616053F4AD8CEF', '2016-01-05 10:36:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B746B7F9F1684369A3657CAA950377B4', '<p>k =3 &nbsp;n =3<br></p>', '1', 'BC67217855E447C0B7CEF9BF7BEEF3EA', '2016-01-02 21:48:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B7472E04EE0F4579A577BD8B535CDE0C', '<p>16.6<br></p>', '0', 'AC6C058ECC3C458C87B81921EDA4B36B', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B7763F225579481B9DCF104A0B4EF148', '<p>编译失败<br></p>', '0', '1D5D0D888003473B801007FF491DBAAC', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B777E4288A0B4F16AF2FE880926BB5FB', '<p>判断文件是否存在<br></p>', '1', '1D3ED14895164E81A695DCB17CD19016', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B77D9CEFAB054EB9BBF5B8252207E1DD', '<p>A类继承B类,B类继承Object类,A类相对于Object类来说是间接继承<br></p>', '0', '0843D282F5804FCA91AF2ED1C0400BEF', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B7A816CD35694ECBA4B0D8A7C5ADF490', '<p>API是一些接口<br></p>', '1', '2CE1787CC2B9461CA64313EB9F496F3F', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B7B00F50C39D475F8643F307BC3B9DA3', '<p>File<br></p>', '1', '4A2B28406C684288B1159D4EA26BE87F', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B7D3FF84FA484907815BFAFEE072BA95', '<p>自定义的数组既不能太大,也不能太小<br></p>', '0', 'E08F55F51B3148DCBB8DBC31CD0E2A9A', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B7F6CFFB7C174749B69BC6B44078DF0B', '<p>int a =10,sort b = 20; a = a + b;<br></p>', '0', 'BBA6C034844F4D2A94B5E112DE0EACDC', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B7F7EEB0583C45ADB863125C35A7E0FB', '<p>对象的创建格式是:类名 变量名 = new 类名;<br></p>', '1', 'F8FC413C1E344492BA0171CBBB2B2465', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B80F8C635ABF405CBC4B230D171FC0DD', '<p>1</p>', '0', 'AF44665882AD400CB5E5726549B81E7C', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B821A0721E3048B886B92D444E17B17C', '<p>return&nbsp;num&nbsp;==&nbsp;1;</p>', '0', 'A503A9B328C4481AA283AD65EA13BB20', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B83409921C2245858D937D3360D69642', '<p>使用增强for循环遍历集合的时候，内部原理是使用了List的特有方法</p>', '0', '7BE991C876C44E74AAA4E5A61C955A61', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B83A7383864F4D499BE85F8B01E5E368', '<p>自动生成toString()方法<br></p>', '0', '24CDF9D0EEF14C1BAEA0F6175302FFD9', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B851DD412AF94E3DA58A84A41A3EB39F', '<p>Ctrl+Shift+O(字母)快速导包同时删除不用的包<br></p>', '0', 'A02BDEB5F5CF41BDA3FEF20195D15152', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B86C06289CF248E489E6249D31CCBE7F', '<p>以上说法都不正确</p>', '0', '5DE260DDA01C460499AD950A91F41948', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B87D04029DCD40C2A7D9AC45CEBDB1B2', '<p>同一个类的对象共用同一段内存<br></p>', '0', 'CF1F2A699D204A4EA6A220E8024BEB0E', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B8BB80C836C7443891B6945F37967BEF', '<p>Andr0id<br></p>', '1', '5DD25F2218824DC0A2E4E7A19AE9EF2D', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B8C47AF142884B82B047A01D34CC4CEB', '<p>LinkedList底层数据结构是队列</p>', '0', '17F1640F63494149AC681672117A2B5F', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B8D5B5474C724C098C8FFA925E85823E', '<p>get()<br></p>', '0', '6564034877DC4650AFCD54F1B2AB5780', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B8FB399E42744BC695452D8823343883', '<p>show方法可以接收int类型的参数</p>', '0', '70EFE4CF216445AA99F14BB8FB7BF79C', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B900DFDA6CE642748E3242979C4BCECF', '<p>整数常量<br></p>', '0', 'E9E403D75C4741D1AA48CBBA3ED841EA', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B904D1351D38401284A31C81CDE69B24', '<p>for (int i = 0;i &lt; arr.length ;i++ ) {System.out.print(arr[i]);}<br></p>', '1', '88764B0A8F174F5EA0AC954E7957F85F', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B917F2700C3B47358A03CB8AF6E8E39B', '<p>add()<br></p>', '0', '403BCD4E74E34D9F9ED4961F931A6ECF', '2016-01-02 21:47:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B932F8F35692446F8B424A171FC6C242', '<p>String<br></p>', '1', 'A71138CFF2474222B8E54FF95DDBAFBD', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B93C117F1BF844838A8E8106ECC1C99F', '<p>35</p>\r\n', '0', 'B66CC6E588694071A282A230E094864E', '2016-01-05 11:12:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B961F7B0BFFC477DB98165EF148B7766', '<p>close()<br></p>', '0', '3853C01BD30A4CD18A1F90BCE961F137', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B9882724070C47388D4DF4510E7D6DA2', '<p>class&nbsp;Circle&nbsp;extends&nbsp;Shape{&nbsp;int&nbsp;draw(&nbsp;){}&nbsp;}</p>', '0', 'FA8A7E3C7BAA4C9C9C34C59417EBAC70', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B9BE8BB26A1543C09B64AC678CF9C992', '<p>false false<br></p>', '0', '5ACAC47FBE344D889A5C6E2C016B1153', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B9CB9B6B84CB4592B385A609AE0131A4', '<p>用列表迭代器可以解决并发修改异常<br></p>', '1', 'AB8605B532BA425780E3A35C9F84B36F', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('B9E37BF8828347C2BF809B15264210BB', '<p>编译错误</p>\r\n', '1', '853F4AB89C774AB6917F098E243F5515', '2016-01-05 00:21:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BA0A8BCB9397401899B63AC71140CFB8', '<p>for (int j = 0;j &lt; arr[i].length ;j++ )<br></p>', '1', 'D525B443A8604299A35D9F61CF559E3F', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BA2DAA9340D14EF390ECB213768D606F', '<p>一个汉字占两个字节，两个字节都为负数<br></p>', '0', '05891635210E477EB6CD9E35F89DE0F8', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BA5ED429AB714028965BFFAA24C7AC2B', '<p>false true<br></p>', '1', '8A1BDB49311241FD8A63F194BC433D3F', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BA76466274CE4647A1378E31B49B79EF', '<p>1.0</p>', '0', '49CA866471104062BF3BAECB782992AF', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BAA57DD2647440F995E1C273EC87F368', '<p>如果int和long两种数据类型运算，得到的结果为int类型，这叫做隐式类型转换<br></p>', '0', '016E0619AC654B509E9F2741BD693EEE', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BAC0FD676A884656934A59962C6695C2', '<p>Comparable</p>', '1', '8716AB4860FF450C82F1877CB38DEC6E', '2016-01-02 21:48:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BAD52D274094467DBE6DC3163DB4091D', '<p>匿名对象多次调用方法，不会创建多个对象</p>', '1', '963A09F451EC465E88DE1CA98A923D51', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BAEB0EC750ED4FF2A1AFF4D9D5AE067E', '<p>一个汉字占两个字节，第一个字节一定是负数，第二个字节正负都有可能<br></p>', '1', '05891635210E477EB6CD9E35F89DE0F8', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BAEB39EC9B5E4307ADBAC9DE6ED77A37', '<p>传输数据不可靠<br></p>', '0', '451A8653D590413D8F44C1F4E2A19160', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BAFE22D1249447B1B9990F593B33F043', '<p>reverse(char[])<br></p>', '0', 'A0C2880F81BF48F1B52F1FB9877460BB', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BB035931F30A4805B5560E278346722D', '<p>程序需要读取一段文本, 或者需要写出一段文本的时候可以使用字符流<br></p>', '1', '778CCB9CFF80475699111D9E6EA4DED4', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BB0851D5DD974B399A6B361B3522C369', '<p>HashSet是双列集合</p>', '0', 'F6F150F653AF468E92A847EAB9D32540', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BB183BBD455B4378BBE0B42CDCCDD034', '<p>在当前工程下使用jar包时,jar包中的类的名称可以和工程中的类的名称相同<br></p>', '0', '49C4E4FD37384A2B97E1F02D22D0E930', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BB3AF3A0FC2143DF9E4C8D5AAE6B6D3C', '<p>(byte)b1+b2</p>\r\n', '0', '4E6F877880184D5998E9581F020AB5F7', '2016-01-05 00:11:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BB89951083C04B90A31D2E827803F923', '<p>PacketSocket<br></p>', '0', '8AE3D46240074A02B35AD25E2286C158', '2016-01-02 21:47:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BB96C46865174B939FB5F6C021772141', '<p>编译失败</p>', '1', '5408AD8EEC0946C49B68D68093806F21', '2016-01-02 21:48:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BBBEAB26C0E049428B55E0D3C12123E4', '<p>打印流只操作数据源</p>', '1', '9210201370134A3A8A4087A6DF243726', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BBD3E2A2EAA040FCB9A29E102C272808', '<p>&nbsp;该流可以很方便的将对象的toString()结果输出, 并且自动加上换行, 而且可以使用自动刷出的模式<br></p>', '0', '9210201370134A3A8A4087A6DF243726', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BBF1A266B59348B8A218DBC4BF054E2F', '<p>可以通过增强for循环的使用过程中，往集合里面添加新元素</p>', '0', '7BE991C876C44E74AAA4E5A61C955A61', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BC054DBC12BA450E837BB61700F2B62A', '<p>将毫秒值转成日期对象<br></p>', '0', 'AA82F2ACF1A347EABA14B929590FC824', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BC1A8C7201C44CC4A0C4EBB5C867DB39', '<p>&nbsp;private&nbsp;int&nbsp;MALE&nbsp;=&nbsp;1;</p>', '0', '7CBA09F92E8243F887A5870A80CC1F46', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BC1D0AD41D9743688F15534AA3996DCB', '<p>编译报错<br></p>', '0', '030A511D18614F6E94C789EA1E3A9F6B', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BC23279EEDFF4BF1BADAFB15F99BC1EF', '<p>System.out</p>', '0', 'D7C9C9F9A18347739E33E66F88405FB1', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BC3340B66C53459B97F2B85DAC384FDA', '<p>public<br></p>', '0', '916FD7975C0748C1B977091139AE2920', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BC44E820EBED4F68A08356A81AC9A775', '<p>当一个方法的行为不确定，不好描述，咱们就可以定义为抽象的方法</p>', '0', '44AA838BFF29477A89185E72CFC2A059', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BC44E98CD77B42AF88F0F83E95A77F52', '<p>ListIterator是一个抽象类<br></p>', '0', '9C318EE3C8534C2B87699FB4FDCEB2D7', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BC64426DFCF941C1BE4514C8DE84B6FB', '<p>此方法将读取到的字节个数返回<br></p>', '1', '7F6C3B9BF0854F5CA036D7F5DE7565C5', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BC67786CA8BE4288944708970E7CEAA8', '<p>private权限最小，只能在本类访问</p>', '0', 'A9C38ABF8F2E4D5E9D90E4D96BB2E652', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BC7EBA04D1B54661B4F3921C53CA5175', '<p>它是List里特有的方法<br></p>', '1', '7C9DAB2CBC5841A4BA9F98553E894DB4', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BC8E6205842746DA8F06F3CCA48C5031', '<p>s.charAt(i)<br></p>', '1', '01CF3AB7BBBD428BBAC7AB947756FE36', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BC8F4951394E412B877E57B4FFBC29A8', '<p>listIterator()方法不是List体系中特有的方法<br></p>', '0', '6127974AD683482896FE2C196127A91A', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BCBEF345BD0E47B0972EA0D69E104789', '<p>1<br></p>', '0', '3E9665E3DA3044A7B21EEE97452696A8', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BCC0A3716CA843E9B356A469A0D14721', '<p>Map集合的值是可以重复的<br></p>', '0', '63008372A67D44D8894A04AAE9211AE5', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BCC1F8275CE445538582468EE56A3B67', '<p>extends</p>\r\n', '0', '285E75587454458A8F4974FE0301A961', '2016-01-05 00:04:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BCC61A0D62FA404388751EC43F576A78', '<p>8</p>\r\n', '0', 'BA5E186DDF7E4012B542FECEA619047C', '2016-01-05 10:52:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BCCA160C1A6F46809D1259A6CFC85A9D', '<p>基本数据类型传递的是地址值<br></p>', '0', 'D03C5B366ED040E59A5EB7F0847BE3FA', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BCE2605983AB4B90935A9F99D500EEAF', '<p>是将数据写入到内存中的char数组中</p>', '0', 'B033C9EF48E6459E967DA4F5D6B4AF71', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BCE5AFB86A924AADB783A0EEB02F8923', '<p>41</p>', '0', 'E279B9ABBE7D4388B25EDB69A3610DAC', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BCF613DC7F3843A78E65810B49212721', '<p>端口的值可以任意<br></p>', '1', 'EAC6F8DD5F76422FB9B4EC9FACF0B092', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BCFF522B1AE74D278153C3755021C420', '<p>getPath()<br></p>', '0', '975BC6CDDFB642DD8B27E54342961BB8', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BD4BCC72419843A3B2D7633C216AF761', '<p>写出的时候可以直接将字符串写出,不用转换为字节数组<br></p>', '1', '778CCB9CFF80475699111D9E6EA4DED4', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BD4CE1A022A043B6B798FBAC63899EC1', '<p>jre是java运行环境<br></p>', '0', '677C00191B214420996DCA46B667519B', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BD5155B6C792489D84AE318D4B2F1C11', '<p>FileStream<br></p>', '0', '4A2B28406C684288B1159D4EA26BE87F', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BD5D7FACEFE34A4F902A41B77CC9ED89', '<p>int&nbsp;x&nbsp;:&nbsp;list</p>', '0', '16E4716E3627450DB9D3608C877DAAED', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BD6E2B3D69BA44A0BF2D0D5706C4FDA2', '<p>以上都不对<br></p>', '0', '02057E92DC3840A79ED42A411E2D26B5', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BD7C364347DD49D9807B75A977D94F98', '<p>底层是链表数据结构<br></p>', '1', '39B854F1E4634F71A42EA97AFC1DA370', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BD82BE054CC848238E22DFF5D1537ED6', '<p>-13<br></p>', '0', '7CC4B66DB3914722823B6F357800EAC5', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BD8D2893358748B39F226F4A399DF6F6', '<p>IndexOutOfBoundsException</p>', '0', '8C5CAC4A30FF45C4AFE115782F8C0145', '2016-01-02 21:48:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BD90B84F3DE5459C8962C14ED3B95006', '<p>爱爱</p>', '0', '30E2F61D607D43FCA7B2D203D82452C3', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BD945310787E48ABB49DA65FE4B75A22', '<p>方法中必须写return语句<br></p>', '0', '11AD8073BC5440578ADB14452E3D2094', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BDA592DF6EDD4821A07D0950BBC7D42F', '<p>变量：所有单词都要大写<br></p>', '1', 'F61A30A255A94840B53AB86B49674CBE', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BDB819AD6179433188F8ACCBFAAC74D3', '<p>3</p>', '1', '5C0EAF5A51694E2FA4ABC35E4A865191', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BDE0820704034C7797A2BBFA367DAF4F', '<p>在path路径里不需要;号进行分隔<br></p>', '0', 'D82E262D49964DA5BAD682A347609C27', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BDE95C898E854EA687D9BE8D9339048E', '<p>2</p>', '1', '30C0DFD41E144EF790498E8055558384', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BDF227A8411F48C9AAD7CE91C3AC94EC', '<p>true true<br></p>', '1', '823179523FAB487E9D13AEC598CC4560', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BE070BD297C8415CA5E64F4ADCFEC6A1', '<p>如果匹配的case或default没有对应的break,程序会卡在当前位置<br></p>', '1', 'FC8DEDFB10BE4BDF96606C3AE28D3980', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BE0DF8E386574485953710B028227055', '<p>帮助文档只有英文版本<br></p>', '1', '5C15B35EA1F44D5582CCD8EF298A7799', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BE1E845E998D4EFA86899D3AB4C5B517', '<p>open<br></p>', '0', '4297FC8F0BE7432AB131FA9F1D9C1A1D', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BE212C057C5146AE9ED0645E5FC99D1C', '<p>抽象方法只有方法声明，没有方法体</p>', '1', '267C44DEC8724C72BB1700B9C3B8FE2A', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BE3D2D964D514B12B5E7229F984E9D1F', '<p>getOutputStream()<br></p>', '1', '0AB1A30AC8D84D2EA68853FED6B1CC3D', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BE6909BB96A24D86A4811E648AF4C9FE', '<p>除法运算<br></p>', '1', 'ED9C63FEB43D49AAA6970E24EA92C336', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BE76EA25296E421B8A802DDAD0BD832A', '<p>a=2,b=3</p>\r\n', '0', 'D8C854B6CEFF48A4A93ECEF0580C6ADF', '2016-01-05 10:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BE7D288739784F428EC50F24C7C31D71', '<p>泛型信息写在接口名字后面</p>', '1', 'CDF0A91CB25D402087422CB8EF9B441B', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BEA7730A0B7A4564AFE601BADE627FC9', '<p>抽象类可以被实例化</p>', '0', '18D60A3738584A2C8AE5FBBCCF6A1A1A', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BEBD2B3F5FB4460FA3191FA4636FD9BB', '<p>contains(String str)<br></p>', '1', '92E5166629224AB5A8A22B7DA6BD9021', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BEBF78618446449AACD498605A22BA5D', '<p>获取指定键指示的JVM的属性<br></p>', '0', 'D67896CD244343D09B93FDC307874825', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BEDBB9EF6C6D43BDB0E95C7DCAB041F0', '<p>Ctrl + C<br></p>', '0', 'BC98BD294FDB43BD990D0EFB8078A55E', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BEFB704C43084C89A1EF144F6C3BA0FF', '<p>append(Object obj)</p>', '0', '9C4236EEC0F247099FCF5268597F055B', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BF306281F3FC476C8342BC91FFCA76B6', '<p>抽象类不一定有抽象方法，有抽象方法的类一定是抽象类</p>', '0', '91266B7CA73B4612BFB1D9F28956C1C9', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BF3B0008599B41818EBBC23C49F12CBB', '<p>fu zi 30 20 10<br></p>', '1', 'B93900F368D3426582BF764055F4B820', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BF3C8D21391C4A34BB52A4A3CBBCCB78', '<p>我可以使用快捷键为某个类生成toString()方法<br></p>', '0', 'E9FB9E6007C84DA380F98382B484735C', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BF55563233894B7396401CCFE6F2195C', '<p>main</p>\r\n', '1', 'AC5BA8E858B44799AB598A128F9FEC2C', '2016-01-05 11:11:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BF659B10203949A49050F8FF1B1307A8', '<p>src目录下存放的java基础的源文件<br></p>', '0', 'CBE5220D07344E00A659917DFD9CBB58', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BF68C569CF7C481996E8F3805920396B', '<p>创建了一个Demo类的对象<br></p>', '1', 'A324A02D815146AA85681768D985ED0D', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BF749FA03E02450C8562791EA1DBD92D', '<p>int和double两种数据类型在运算的时候，得到的结果一定是int类型的数据。<br></p>', '0', '016E0619AC654B509E9F2741BD693EEE', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BF7A408D639B435E8ED10FD6F07A8C90', '<p>返回一个新的字符<br></p>', '0', '12E6DB0B3B644FDC950D4CCEA0CA93CD', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BF7A5171214E4DB5ABB50BA34146D36D', '<p>15.0<br></p>', '1', 'AC6C058ECC3C458C87B81921EDA4B36B', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BF7EB91CB5B04ADBBDDA57747F4B8930', '<p>java.util.Collection<br></p>', '0', 'B83657E346174DF9A72D84B69D89E74C', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BF8E6B522A75464381D40B24B3FBB84F', '<p>以上说法都不正确<br></p>', '0', '7C9DAB2CBC5841A4BA9F98553E894DB4', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BF940AADC97C43978B39DAA77728E6FE', '<p>多个构造方法方法中相同的代码存放到一起，每次调用构造都执行，并且在构造方法前执行<br></p>', '0', '5C1B8766AA0849039A4E25E64A8B5BD9', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BFB00087215D43BD93E8A4AA1A1332A7', '<p>keySet(K key,V value)<br></p>', '0', '79500A1D93AD46368158B723D5D74D5F', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BFE948E590084E909544E7F2C6FB29EB', '<p>Student [sno=null, gender=]<br></p>', '0', '71B1BD5CC78744DB82CE4AC38EF7D6AF', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BFF1D752FB204CB0A67EEF58328D4D56', '<p>该程序能返回一个指向不存在的路径的File对象<br></p>', '0', 'DDC888002C8D4CB7AF2E2977365CD216', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('BFFD4675B9F74CDBAEB765554B6081AE', '<p>d = null;d1 = null那么new Demo()在堆内存中就是垃圾会被马上释放掉<br></p>', '0', 'DD3CB7FE0943492EBD0EC6B87478A802', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C0121A5E702E40D7AF6813F7AE1FA44C', '<p>extends<br></p>', '1', '1D294DBEC5524BC6A1D5C631911AF8F7', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C081D080D5E34476A9BAEC5D9ADDC96F', '<p> System.setOut(OutputStream)，用来修改输出流</p>', '0', 'AD231382B0D443668FF1125DF016562C', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C095F81B3E524AB3846CAADA8A23C34E', '<p style=\"margin-left:18.0pt\">for (int i = 100;i &lt;= 999 ;i++ ) {</p><p style=\"margin-left:18.0pt\">int ge = i % 10;</p><p style=\"margin-left:18.0pt\">int shi = i / 10 % 10;;</p><p style=\"margin-left:18.0pt\">int bai = i / 10 / 10 % 10;</p><p style=\"margin-left:18.0pt\"><br></p><p style=\"margin-left:18.0pt\">if (ge * ge * ge + shi * shi * shi + bai * bai * bai == i) {​</p>', '1', 'D181F1B5A66B4F80B85A2B96AF4CE0F7', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C096810008C742C6B874587679E12CA1', '<p>新增枚举类型<br></p>', '0', 'E0006883C7F3414383C990502DBD087D', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C0A047CC1DBA4FBAAF0BDABD5447886D', '<p>-255至255</p>\r\n', '0', 'A73EB37FB22B47C797DCDB85C32201F5', '2016-01-05 00:03:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C0A29219AC404CEF8048742E6204B3DF', '<p>该类可以利用链表作排序</p>', '0', '7D9D826A9FC2477AAD979030DC8F76D2', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C0A6BC10B26E42338154648A2560381A', '<p>如果我们给出了构造方法，系统将不再提供默认的无参构造方法<br></p>', '0', '27F0DB3629724236AFCAAC9D331E9B7B', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C0CA3384B3514CD296CC57F80BFCA93A', '<p>编译正常，运行时有错</p>', '1', '08D1459AD44445B0809072D37704C374', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C0D168B097B84A5EA3C3FAAD32EB70D8', '<p>Jdk1.6</p>', '0', '05B19DE7153D46E793BA78B89F5D2037', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C119F60273D8445A8327C72785FD5558', '<p>getClass().getName()<br></p>', '0', '75E4611404A84B718E5FDA55092FF074', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C11DE1683B47425584DFD560597671DC', '<p>listFiles()</p>', '0', '9B34B88C8C0F4C799AD962B7DC08FB5F', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C14EF64EAB3243DA80A15B943F634585', '<p>byte<br></p>', '1', '731403B23CAD463E91A5FB776C1FAB55', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C161007DE99B4F48A63E279029F989BC', '<p>com.itheima.www这种命名包的方式,不是必须的,只是一种约定俗成的习惯</p>', '0', '6E9B219ABDCB45929B5B2DA56C3B6359', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C16EB69FA444434BAA464A712F468BCA', '<p> writeObject(Object obj)</p>', '1', '9C4236EEC0F247099FCF5268597F055B', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C170D641EFFA4BE5A186052B272928A3', '<p>FileOutputStream<br></p>', '0', '6DA75C307E244075B477E5FECB9D4952', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C1745A074AE04B599FDD1F0F79B430AB', '<p>如果构造方法中有this(…)，那么this(…)必须出现在构造方法的第一条语句上<br></p>', '0', '5465ACE300EF4C29920B87FE41EF9082', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C17A6AB9F924469B8EFF7772D1D41AED', '<p>Java程序启动时加载所有的类到内存中<br></p>', '1', '7B7F65CA929448A689C6B5D5CD4FFDF0', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C1835BF64E7E4B61B324431A42E4DB82', '<p>-1<br></p>', '0', '45C35EF208D84B21A0898129B87180A7', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C194A256D74D41E0AD106C6F423457D4', '<p>OutputStream是个接口<br></p>', '0', 'B94EBBCF0DE948F794FBA83978CFF19E', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C19A70EFB6704843B37F574A3A894BA3', '<p>获取集合的长度<br></p>', '0', '9432D0FE7E164BC6ABC8AD6EA7998CE1', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C1A0EA34AC174993A8B10B3DD502D78D', '<p>自然排序底层调用的是comparable方法</p>', '0', 'F2BA91FEBE1441C69ABE862E9FC110C6', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C1B1133BCE2046F5BF30211C65CAD8AF', '<p>甲骨文公司<br></p>', '0', '080FDAD8D4874AF3B15A83F0591A2163', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C1B55FE44165478DAA760F14B6503BDB', '<p>reverse()<br></p>', '1', 'CC439803EACC4AFCBC25A088871C8F30', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C1BAB72A1EAA4688A6F3E78D9800B715', '<p>Socket<br></p>', '0', '85489CF01E1344DF87DC15CA75ECAF89', '2016-01-02 21:47:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C1D458B04D9745ADA18CE693CC0945EE', '<p>&nbsp;编译运行都无错误，产生1&nbsp;个线程</p>', '0', '08D1459AD44445B0809072D37704C374', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C1E2ED71373C4833A34568EF60E57510', '<p>随时可以初始化<br></p>', '0', '85505AFAADB447C28986F3D5809633A3', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C1F41332D12849BC8248CF0F5A707CC1', '<p>首先计算比较表达式的值，看其返回值是true还是false<br></p>', '0', 'D909E65D60F44C7B89EBCD3F65C1B5F6', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C20139E6E9AB4E70A2447F3B51009A4C', '<p>执行顺序是: ① &nbsp;③ &nbsp;② &nbsp;④<br></p>', '0', 'E46FF59D07254629BFC567C7816BDD44', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C209105AB6C74BC0AFCD25CB096DB5EA', '<p>store方法将Properties对象中的键值对，写入到流中<br></p>', '1', 'CE396BF9BCF94F6BA3E7B417D0892085', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C21445D206664876BFEC64EADC03AC70', '<p>该方法在启动线程后可以调用。</p>', '0', 'EB970D206E3649868C19C270C41904E4', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C2296292F0C54DEABF9A7777DF901192', '<p>&nbsp;B&nbsp;b&nbsp;=&nbsp;new&nbsp;A();</p><p>&nbsp;&nbsp;&nbsp;b.test();</p>', '0', '66128BDD3DE34807B8C62BBD2DFF0850', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C274473ED3A7475B941D14CAB2CAD7BC', '<p>isReachable()<br></p>', '0', 'AB59FCAF7A41409887272F205C95DB7E', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C2801F0FFF7F4E1DBBA615FB13876850', '<p>x=7&nbsp; y=2</p>\r\n', '0', '3F897C38AC0B401AB845A5D6A07D6DA2', '2016-01-05 10:56:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C297E056E8E84BE4A83882DAD5C3980D', '<p>2<br></p>', '0', '52BD95F3B56347EE99DE157900D2128F', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C29C77A080B64384BAE3691895617B5C', '<p>没有参数</p>', '0', 'D7C9C9F9A18347739E33E66F88405FB1', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C2C7AF0AF82E45CF86A8B99E14ABDDCE', '<p>代表加法运算<br></p>', '0', 'AB500DE2A4C343FAB446021D260E2ABF', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C2C85B9F054140D69954D89A82F939DF', '<p>BuffferedInputStream</p>', '1', '01C58DFD07654C5F97CA9BC05F8DDBD9', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C2E9F81681F645B1A4280818955DFAF6', '<p>增强for循环是JDK1.7版本后出现的<br></p>', '1', '48D417D143DA43BF8049449D7082C6FA', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C2F6BE77406D41F18742B605B79E97C2', '<p>局部内部类只能访问被final修饰的局部变量</p>', '1', '0F737DC4397A448CA1ACA1875D040FB2', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C30E38E3761D46BDA1EE943354EB6616', '<p>让这个类继承RuntimeException</p>', '1', '54EFE16BBF6641AA8BA77FC97085368F', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C329C4CB53A84F209742BC0B5344A100', '<p>编译错误<br></p>', '0', '156E866F773E4BAD84432DAF8EBA9C58', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C33D97B92A554866941714737817DE70', '<p>以上都不对<br></p>', '0', '73F542C499F74E68831C486654B98B21', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C3416C4CC1774423BED9178D4D1D01C3', '<p>子类重写父类方法时，访问权限不能更低<br></p>', '0', '1F249CA9B969470A954470FD62CB2F34', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C378734118BC49328D591D51889E9733', '<p>2<br></p>', '0', '8D04E113F7054CFCBE6C6BB20C5EBD8A', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C379D1596C534FFD969086A9A50C0DB5', '<p>一个类中有方法重载<br></p>', '0', '760B0E3F38214009B32C614241582927', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C3907D58C38D4505BFB6132BCE1E7A2C', '<p>FileOutputStream</p>', '0', '40488E49581B4BA5B66F9E7B5B6D6490', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C398EE61CD5D4B7DA3997118C5823829', '<p>deleteChar (int index)<br></p>', '0', '68B2BC19D7FB4B349E744A7044540A0A', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C3A1A230D17F4267A60FDA7C991787A2', '<p>a&lt;b<br></p>', '0', '25A2881255F447F4A07944DBEBDB5677', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C3B3829BECBE4E47A3640F09DD1B70A8', '<p>97<br></p>', '0', '1F8CA06547AD4987A56B66259C741711', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C3BCDEE2C69E4688800E7B0B2B2598BD', '<p>remove()<br></p>', '0', '2CE29EB738E0494B851E80649D5CFDA6', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C4088E47796241AABCB6304EFB763DA9', '<p>list里面含有3个对象和1个int类型的整数</p>', '0', '2FF773FFEE944FC292F92C6B09F338E3', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C420013F96304095A78E8B7C302E8D8F', '<p>receive()<br></p>', '0', 'DFF41E4B9E094818AD405D0B74BBF898', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C420BC3567AE4771AF37419744AB19BA', '<p>join</p>', '0', 'E48D6C8EE79F469E8142C778E0AC2466', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C428F394A9A646FC81786BE58BDD7D3B', '<p>构造方法是用来创建对象或者初始化成员数据的<br></p>', '0', '67496E8CD2A4412C8A9DA508ED2DA2F2', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C43502CA4B7F4BDDA353172C6C0FEC74', '<p>dir<br></p>', '1', 'EC033C2AC55D4A8C8D14153C9FA79CCF', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C438ECC7CC734AA5A7C9FBF52FE6663F', '<p>只能完成读的操作</p>', '0', 'DFFB2602D6244F6C94FF9520BF0E43C5', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C44486D7B7564075B55795728BEFBFB9', '<p>8次<br></p>', '0', '5D8392BF6E524007B98D281CE9827EA8', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C47ED72BC4A64D869A45BD62AC1E87BD', '<p>%<br></p>', '0', '02A7752C2C3540CDA19331A0A6A4C066', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C47F302A5E824841AC9A172AE7E72B9F', '<p>0b110表示二进制<br></p>', '0', 'BB64C3CA6D374D9F98818871DA2E0E2D', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C4814F9288FD468E9DD15A2811E7E499', '<p>00000000000000000000000000001111</p>\r\n', '0', '7D8C36B83A4E4A649927ECFAD783A997', '2016-01-05 10:32:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C49D1E9DEC6142B2AB3B7400AF911E77', '<p>int[] arr[] = new int[3][3];<br></p>', '1', '6F1ED2CABE3E49FC9A30BEA2AC003EE7', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C4C28F04627E43F19B1431B754AE1FC4', '<p>可以存储3个一维数组<br></p>', '1', '9D75DFD225904472AD17FB5F9C274603', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C50F3B778B6245D0952A51B2CD58FD8F', '<p>3</p>', '0', '49CA866471104062BF3BAECB782992AF', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C5171D09BA484E34890D9979A7B5ED8E', '<p>重写equals方法</p>', '0', '41CBAD63AC204A448F2522D147517BC8', '2016-01-02 21:48:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C51AC7FA620B4987B37C7EDD58EBE265', '<p>FileOutputStream没有缓冲区，而FileWriter有缓冲区<br></p>', '0', '48A3DBAA47A245569C1A9B7B0DCDBE2A', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C52F44C06D5B40D49D9DED909D210741', '<p>代码执行后会输出每一个元素的值</p>', '0', '1083B83DE4EE4DC4A824866A1BB7C7AF', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C5371B81851548CC86D5F642D1CA2A33', '<p>以上说法都不对</p>', '0', 'B033C9EF48E6459E967DA4F5D6B4AF71', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C54235AD93C0496FA99602E6278981A6', '<p>编译报错</p>', '0', 'AA12F39BE1944F0DBA3C9E853C92CDB6', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C5450F82E145446C81CD37181FB8D5D8', '<p>单例设计模式<br></p>', '0', 'E0A6C161809B45E4A1AE6465A1BE19F5', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C57E0E4438EE4DE6A431D9A73E685047', '<p>效率高<br></p>', '0', '910616FE32D74EDF9BE08990793380D7', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C5834E6D969B4E8A8F4C159C5B0F06A3', '<p>Ctrl + Y 反撤销<br></p>', '0', '94A2B826758B4D8C86E3EC7C5174342A', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C5C05BEF0AE746CC8AC866F0FDA2452C', '<p>运行报错，报索引越界异常<br></p>', '0', '030A511D18614F6E94C789EA1E3A9F6B', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C5CC4118342C4FB99ABA523074D16419', '<p>toCharArray()<br></p>', '0', 'C95F3BF8FFDA49918691CE4261CCE135', '2016-01-02 21:48:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C5DCA1E1648B42978F6F4C94AC2B1465', '<p>readLine<br></p>', '0', 'EFFFA7A3C7D4439E9ACB8A91C58CB8BA', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C5E1C11F1EA94E0A8DA70E3765D30AAF', '<p>protected修饰的成员在不同包下的子类可以访问</p>', '0', '813FEBFE81644A5FAFA2E072C6474F61', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C5E64820E25B417B8CED66C7579670BC', '<p>默认初始化<br></p>', '0', '85505AFAADB447C28986F3D5809633A3', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C61ED9A9F9634F2EB000264671915C99', '<p>B类</p>', '0', 'C4866D79B1204FC6936BECD569B51A03', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C62A31F3B0E545F680C9A5348DB13535', '<p style=\"margin-left: 40px;\">for (int i = 1;i &lt;= 3 ;i++ ) {<br></p><p style=\"margin-left: 40px;\">&nbsp; System.out.println(\"i = \" + i);</p><p style=\"margin-left: 40px;\">&nbsp; for (int j = 1;j &lt;= 3 ;j++ ) {</p><p style=\"margin-left: 40px;\">&nbsp; &nbsp; System.out.println(\"j = \" + j);<br></p><p style=\"margin-left: 40px;\">&nbsp; }<br></p><p style=\"margin-left: 40px;\">}</p>', '0', 'E08D455384A148378FEA239EA4C17C16', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C68C6E6A9FDB4A14B848C8B98F529421', '<p>iterator()方法是用来遍历集合的<br></p>', '0', '6E1A4BB1FD7A4AB98612C6AD883EC55A', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C68C9916E716471F9BA991BA1E0B07F6', '<p>double d = 12.2;<br></p>', '0', '0DE02B30B9624BCDA2D532954D0F13BB', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C6C03B3CA1BE4588830E9B443A514B5B', '<p>①②③④</p>', '0', '8CC5F2AD665846FD94B11045D6D4BB6B', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C6C046FA5830498F8C682E20D32DBC51', '<p>26个英文单词大小写可以用做起名<br></p>', '1', 'F7B83A4A5F414E258FA2BE53B41E5D78', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C6C7016FD85644FBA645A6231C6B8C9A', '<p>5<br></p>', '0', '1FB777DEC2AB4491BDBAFD1C22C66F5A', '2016-01-02 21:48:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C6C92DD281794945A1BB1C8BC2D8A5C5', '<p>对象中必须有属性和方法<br></p>', '0', 'C1AD6963B5C944A79F5DBACD1B6440FA', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C6D178159CE345988009EAD91E6611DD', '<p>java.io包<br></p>', '1', '52CCF2D7B39D49A4B3DE9F4BC984AD46', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C6DB94D11D9842F7B1FE8160D623A483', '<p>private只能修饰成员变量<br></p>', '0', '239108173BE64DFF86B3B0CD9EE51377', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C6E30FC39FC345D98D6BAA4DDECD30D1', '<p>send()<br></p>', '1', 'DFF41E4B9E094818AD405D0B74BBF898', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C7125C1AC71D49A18FE106015A5978FB', '<p>FileReader只采用GBK码表读取文件<br></p>', '0', '5C991C62665541F3B187E735E201A4EF', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C71986DA1C3646C4B73CB3E3D6418E5C', '<p>可以这样创建对象：new&nbsp;Tool&lt;String&gt;();</p>', '0', 'F013B232A4F24439B78AFC7C747053E2', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C7370F8D4E934EA8879322CA6D23677A', '<p>引用数据类型传递的是地址值<br></p>', '1', 'D03C5B366ED040E59A5EB7F0847BE3FA', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C73D357D9AFC438E8DE6798AB67A16DA', '<p>File()</p>', '1', 'D673A54F40704922BD0286D2E93546C6', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C77299E83D9A4AF6BCE179E90DABDB03', '<p>20&nbsp; 10<br></p>', '1', 'AAFF84AD7A244E008ABB512CF54A50CC', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C783A910EB2D43D58EA640E9EF372212', '<p>NullPointerException<br></p>', '0', 'D236ADB4E3D0408CBE101DCA23AC8E77', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C79C94FD84CF415EA92EB2FF3D1115CE', '<p>在黑马论坛上下载学习资料<br></p>', '0', '4075D5322C2B441D928A1E40D456EE19', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C7B7A1DE1A004EADBCE7F6E5512ABF9C', '<p>不同对象的，hashCode()一定不同<br></p>', '0', '7A48391745034D779414787C58D3C0ED', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C7C4FAE0C1EC4A069357198719723312', '<p>Eclipse是一款免费的IDE开发工具<br></p>', '0', '0D9A8E62FBE541EBA102263994E43699', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C7CA268D8CA8484D83B2A5A9AAC285BE', '<p>Java虚拟机的启动会启动一个进程，这个进程是多线程的。</p>', '1', 'ABEF0B340EC44077AD6C2CEA6561C10F', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C7E2820BBE2E4A1486FC907225BAD0D4', '<p>并行是多个任务同时运行，例如甲任务进行的同时，乙任务也在进行。</p>', '0', '6E6B8269595945248D9A567970A1F006', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C7EBE84548984A63B1D1171D4CFD4607', '<p>因为计算机的存储空间都是以1024进制的，比如1024byte是1kb，而1024kb是1Mb<br></p>', '0', '8A8D43DD798849E6A3BEBDA063EEBC25', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C7EE19925B4D4EC79F363979A3A7E0DE', '<p>arr[6] =1;会出现ArrayIndexOutOfBoundsException<br></p>', '0', '38F24C79B28E4739949A918808B2CA05', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C871CAAF8A53474BB527EF1E9332130E', '<p>catch<br></p>', '1', '72B03FEFF96D49CCA08A0B1A8502394C', '2016-01-02 21:47:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C8BA8BAAD1AF4FA09B564BF24B1A1C25', '<p>以上都不对<br></p>', '0', 'E2525262D08243E38EADD4BF65ACBA41', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C8BF9E06385E498BB6EEF6464C945402', '<p>可以是Java已经定义过的关键字</p>\r\n', '0', 'E3B0235E2A2D4BDDB3F100D9CD28305F', '2016-01-05 00:09:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C8C6E6B9B6B24FCFAD5547FEDCA45148', '<p>一个接口只能继承一个接口</p>', '0', 'AEBD3C1BA9D043C6B8FF5EAA11FA98A1', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C8D87EA500624596875ED8E6CFBACA8E', '<p>y = 100<br></p>', '1', 'BDDCF8E09A4F471F9285BB85182F9EB8', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C8DC9E008B014C0EAC7834BA409CEEF8', '<p>true false<br></p>', '0', '3962C2674C4A445394AFD8E290EB3F6E', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C8E45D53B4AB4654AC0A3A503BF3BA85', '<p>24</p>', '0', '47F0A171A3524570A88D5B5DC293A113', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C8F1E0698DF841408FCFE101ADA37175', '<p>&nbsp;yield&nbsp;</p>', '0', 'EA0C77D893244729AA6C38CBC9DE7EBB', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C916E6221A0C43538579F3E393706D62', '<p>只刷新缓冲区<br></p>', '1', 'AA8F784105F34FBEA2BBCDFBC15CEC02', '2016-01-02 21:47:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C92A81851F744F4FBF548A79A4334991', '<p>run方法是运行线程的主体</p>', '0', '68867F39CC7F46FA8D1316B7F3B811E0', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C937787D71FE4F8EA4B8045FA26AB4F0', '<p>一个源文件中可以有多个类</p>', '0', 'D2B57A01A9774F96A298B625391C427E', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C95B5190BF8B444D873E99323CEEC019', '<p>iterator()是一个对象<br></p>', '1', '6E1A4BB1FD7A4AB98612C6AD883EC55A', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C962B6DDDA564325883C5A0F15143C9E', '<p>该接口只是一个标记接口，里面没有抽象方法<br></p>', '1', '8359E963825544A9A9FBEC370ACC95B8', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C98D67A00D304613BED8E3B5EDB86E17', '<p>arr.size();<br></p>', '0', '07B7C320E8814F87961A54500C335EA3', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C98DB958D7804C808F00D5E7DBA9FCE3', '<p>连接：验证内部结构，为静态资源分配空间，处理非静态引用<br></p>', '0', '7589802B2CA34372A08D08979F875DC5', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C9A62955EB594F848D45E495170E3A1B', '<p>if语句控制的语句体如果只有一条,大括号可以省略<br></p>', '0', '1BECAC261E36474791552E2DAA633661', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C9A92B6477FE494A93B61F125AA56DD0', '<p>return&nbsp;num;</p>', '0', 'A503A9B328C4481AA283AD65EA13BB20', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C9B3312EF3CC418BA9F1DFD7F6297B2B', '<p>&nbsp;Java接口不能被实例化</p>', '1', 'C335D49C132E41599266BC11F1EDE53C', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C9B4B686A8D3402E88622DC004FC12F9', '<p>编译报错</p>', '1', 'D7690B5A97EE496F94666765927C8F0B', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C9CB80AAF15847CFA9A05F8BE4BE107D', '<p>数组的最大索引是数组的长度-1<br></p>', '1', '37890E00DE1B4C458A90287102070D7F', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('C9E1FFEAE55A451FABE084A3F76505AC', '<p>手机<br></p>', '0', '8CD09E7AEE354B5986F896355F138795', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CA2379FEA4994C2DB85C73F0CF90A29B', '<p> writeFloat()表示写一个float类型的数，readFloat() 表示读取一个float类型的数据</p>', '0', 'E4A02616EFE449F080062EB49D422A8D', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CA339B151730409DB85FE8ED4A30160D', '<p>以上说法都不对<br></p>', '1', 'D8D5184E3E7648339A82A7E8DA4E6F2B', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CA35A788A76F4D249B5426933828DA3E', '<p>18912345678：张三</p>', '0', 'F591CC06732443919C37C2191C470C9A', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CA3D20A9BA284E2FA5FE926C4351F439', '<p>得到的结果是40<br></p>', '0', '12FBDA3104CB47028FD6489140714F01', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CA551C5BEC734C6FBDC84DB78457ED32', '<p>b++报错;<br></p>', '0', 'F5D31655810B4243A0A9FE390258464E', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CA56290C86DA4731BCD66F301CF90C5E', '<p>this是一个关键字<br></p>', '0', '7AEE9BAED57949AE9023535451C9CD2A', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CA6A719DFCD8457EBD8585E9D3CE2F65', '<p>3</p>\r\n', '0', '7D8545CB8A29471C93117419881D2264', '2016-01-05 11:03:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CA712955482341E587AD264F9BF6480F', '<p>继承其实体现的是一种关系：\"is a\"。<br></p>', '0', 'B8257C4E694D4D92AE9E0D6F8727FB99', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CAA1AA0DD9304B2FAD6CC5DAB0BB8C54', '<p>int&nbsp;num&nbsp;=&nbsp;r.nextInt(20)&nbsp;;</p>', '0', '09F34928060A46DFB9C1C0FD308D2508', '2016-01-02 21:48:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CACF4D1BAB52416099617DD17AC37CC7', '<p>class&nbsp;Inter{void&nbsp;print();}<br></p>', '0', '199C217200F248CA8901EF185C605765', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CADA9C1C69D24863B6976FBC31079E65', '<p>&nbsp;print(s);<br></p>', '0', 'D3C8927E157C4962800409D5D21A5F0E', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CAE2F48992A34E97969329E8DA1554DF', '<p>Calendar中的getTime();<br></p>', '0', '84D76288A25E41189383050ED586A9E8', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CAE3011020ED4DFFAF4D38F3A12FB5B3', '<p>局部内部类不能访问外部类成员</p>', '0', 'EBC63FEDFC534B978F58EAC50EC5950E', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CB0DC799223441AEBBE084663D07B8CB', '<p>如果异常是平级，有顺序关系<br></p>', '0', 'F7B74976A0834AF7B38B52C2952E2CDF', '2016-01-02 21:47:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CB331CCF279F402DB0584A7649ED2CBC', '<p>toString()<br></p>', '0', '7A08FE2B04404496B27C9CBA0CAAC095', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CB83AE75541C4F7CB2CF7CADA753D9A4', '<p>30.0<br></p>', '1', '3A0EB703E970410697D65575ADBA5888', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CBAA48AFB3F54C538E9DCE7EE98424B3', '<p>删除对应list中所对应的对象</p>', '0', '678167F74A8242F682DAD56C6ECA1108', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CBBCD7AD9C79419F8F2D78B0E0478A44', '<p>定义在类上的泛型信息，可以被方法使用</p>', '0', 'B4D4DDE23A774B88B59CD3AAF6AC50EE', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CC0931B2C3044C05ACFCF58E89388AF9', '<p>OutputStreamWriter<br></p>', '1', 'F8D4337DFAE44C239026362752B65868', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CC09A2E67DA946288E36C5B5FC905680', '<p>编译错误<br></p>', '0', '3A0EB703E970410697D65575ADBA5888', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CC18FDF549D54E56B542769BF9063D23', '<p>JRE就是java运行环境，包含java程序编译运行的工具环境</p>\r\n', '0', 'E19659CECF6E4E53BD715D31570B7F8D', '2016-01-05 00:13:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CC1B54D1A8C94412B2AE0DA3D9FE8361', '<p>0</p>', '0', '4052B4D8ED1240428210C2AC3E3479F4', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CC32B7E0458B4C909138018F53C8E1F4', '<p>不确定</p>', '0', '8A7E9A9E4E9140F7AF6250B16AA59E89', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CC349E07767F4955BFEC1C6FB21CA46D', '<p>&nbsp;class&nbsp;abstract&nbsp;Animal{&nbsp;abstract&nbsp;void&nbsp;sleep();}</p>', '0', '44A49A9EF03A4EA6998B38348D7009DD', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CC364E0A533149F789F1C23E03E1FF1C', '<p>Arrays的asList方法，可以把一个int类型的数组，直接转成一个List对象返回</p>', '0', '43EA319D8CE04500B43BB2FBA8B36C0E', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CC3EEA11C9D548CABE79587B8511AC0A', '<p>byte b = 15;报错<br></p>', '0', 'F5D31655810B4243A0A9FE390258464E', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CC47BABA0E1D44BC81617CC847CC2F55', '<p>③这一行错误<br></p>', '1', '4BE2556B98B244B7B8B91F7EDEDE8D17', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CC514C3FE8A641039D9BBDB8D270C046', '<p>是线程不安全的<br></p>', '0', '6A4FE26E975A4078BE9413A5335FF96E', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CC54D14681E743E99EB296960F0A652B', '<p><strong>for</strong>(<strong>int</strong> b ;(b=fis.read())!=-1;b++){</p><p style=\"margin-left: 40px;\">fos.write(b);</p><p>}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>fos.close();<br></p><p>fis.close();</p>', '1', 'C4DB57BB99F24DBEB13E9519043321C2', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CC63B340C2824618AB7716A3ACB3FF1E', '<p>增删慢<br></p>', '0', 'BA186F671712469ABD11D239EF870550', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CC6907A25DE241DDBC75091861A155CA', '<p>方法名相同,与返回值类型无关(构造方法没有返回值),只看参数列表<br></p>', '1', 'F1B12BA5A25E4B24AF72821832579E3A', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CC6AC545CAAB4994A91FB50692D982AC', '<p>可以有方法体</p>', '0', '088E65967C914A588E8CEB142443A326', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CC6BEFFB43614353A239FA5307BFBB56', '<p>SequenceInputStream<br></p>', '1', 'E493D22E863643849AD408D19B0C6E82', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CC813DD88D874D2D88A673DE9AA4AB20', '<p>Map集合是双列集合<br></p>', '0', '63008372A67D44D8894A04AAE9211AE5', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CC8676BBAA49449AA5A5EC9590FE1327', '<p>字符输出流, 在输出字符时需要把字符转为字节再写出,该过程是自动完成的<br></p>', '0', '79E7F90ACD63403EA18EF9DE987A6104', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CC910B289FB54CCEA9BEE670412A3ACD', '<p>finalize</p>', '0', '72B03FEFF96D49CCA08A0B1A8502394C', '2016-01-02 21:47:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CCBD87FC97964AE9AEB6E48BBA37AB3C', '<p>isDirectory<br></p>', '0', 'BF68B1AE0B614A3EB4549DE393EA849F', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CCBF20F397D748C588F5EDCB977DFC7D', '<p>该方法只能获取公有属性<br></p>', '0', '8020AD29906C45B9AF3DAB7E5994FD35', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CCD496B2CE0C4FB58455D1BD3FF30C56', '<p>获取指定键指示的操作系统属性<br></p>', '0', 'D67896CD244343D09B93FDC307874825', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CCF1491F84B14891932A97E838CE3C7D', '<p>一次</p>', '0', '62B73B2E710C427D8CC060B7B937C9DA', '2016-01-02 21:47:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CCF3CBDB5DD74F18B9700161BF8A66ED', '<p>在C盘创建文件demo.txt,但文件是空的<br></p>', '0', '241C001A59B44737A1F152EB8D0235BB', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CCF51876F1974F04AD6F22416159E6F3', '<p>arr[3]的值是0<br></p>', '0', 'E092B7D678094144B90707B4288ED5F7', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CCF6562C8AB245BDA17357A01E169AC0', '<p>for (int x =1; x&lt;=100;x+=2){ sum=sum+x;}</p>\r\n', '0', '08422B7E8F8A4CCE801131A62FCFCF6C', '2016-01-05 11:09:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CCFE1B91B0524805885D5FF5EA054459', '<p>read()方法的返回值如果为-1,表示到流的末尾<br></p>', '0', 'AA60F98945B64B2A9EA5119DBEE91558', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CD02B218F12C4AB9B5E782F9B3D1A58C', '<p>字节流也可以拷贝文本文件，但不推荐使用，因为读取时会把字节转为字符，写出时还要把字符转回字节<br></p>', '1', '778CCB9CFF80475699111D9E6EA4DED4', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CD15E56996B5471EA53CF6D67195DB29', '<p>true false<br></p>', '0', '65B39DA3D5B34693880C941359DDCB3A', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CD1C3253E66E45F8BAEE4C0F880BBEEC', '<p>32位的Eclipse只能使用32位的JDK<br></p>', '0', 'F1694C4FD1ED47FBBF31CE352344F49E', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CD1EDB43346A4F75959523C38E1E9D0D', '<p>int[] arr = new arr[3];<br></p>', '0', '3E074807A73A4601A9335B2CAF606171', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CD26C2D80658411897A7B5CCED15E1AC', '<p>抽象类可以没有抽象方法</p>', '0', 'C7DA23A6A4BA42C8B35BA4970157756D', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CD416E250CA0485AA04CB0885983438D', '<p>print(new Student());<br></p>', '1', 'D3C8927E157C4962800409D5D21A5F0E', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CD46BBD0E91A45FAB0EFE868D6C02CAD', '<p>设计模式（Design Pattern）是一套被反复使用、多数人知晓的、经过分类编目的、设计经验的总结。<br></p>', '0', '4AA86A7960B84562BE0A1F96D081064C', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CD4AE7C566D84762B9690568E837BCDD', '<p>Date中重写了equals()方法<br></p>', '0', '42C225CF6FAD46BA95AF3285E380BA0E', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CD5C853C0AA8428582E7BEE58D03C170', '<p>栈是给CPU使用的<br></p>', '0', 'A22FC99A1847414BA590D98DC55DB4E7', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CD74BDA91DC143AD808FE84482DCE7EA', '<p>将不需要对外提供的内容都隐藏起来<br></p>', '0', '4EEAF542C47F4630921BEB3D3DF56CA8', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CD8EC92856DD48339FEF945734FC4E58', '<p>命令行<br></p>', '0', 'C9B9CE0BCC134C44A9DFA1BFB5E2F74C', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CD96BC96834B4D3E92F432B581A14E87', '<p>JAVAEE企业版<br></p>', '0', '76B14F01291D4AE09A9A4927AD4F0E1D', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CDAD3E58884E47E3A7A3A62C4BE855DD', '<p>for (int i = 0;i &lt;= 4 ;i++ ) {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for (int j = 0;j &lt;= 5 ;j++ ) {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.print(\"*\");<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println();<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}</p>', '0', 'E08D455384A148378FEA239EA4C17C16', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CDE991E6F86847B4804F845F58EB7644', '<p>char<br></p>', '1', '0B9F88745EBA4854A16F1B71E2EDFE20', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CDEA8E54C341425886B693368706A6B5', '<p>getTime()<br></p>', '1', '3DD40B0051E5410BAC65E7777FA277DF', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CE11414EDB13441380C8C271279A2E0B', '<p>public,&nbsp;private,&nbsp;protected</p>', '1', 'F0369D708E5E4DA3A371B2C92AAFDADB', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CE14428F74D3456DBCE5F4D2BBD552B4', '<p>OutputStreamWriter<br></p>', '1', '694054E43A514284AD1CE42B86917259', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CE1D5D84F56147459A746ED326924AF3', '<p>^逻辑异或：相同则为true,不同则为false<br></p>', '1', '7432E8CC7F344DED9CB52A709EAEE68C', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CE20076B9DCB4CBF8115FB70573D9497', '<p>979899-1<br></p>', '1', '030A511D18614F6E94C789EA1E3A9F6B', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CE2F981CAD054CF099C97AA78132F26B', '<p>符合条件,已经进入if流程体<br></p><p>结束<br></p>', '1', '747AF21CDC7541C98292D04A6AD6E15A', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CE34B571D575418FB8F382E1F3F16C70', '<p>如果想用这个体系的所有功能用最顶层的基类创建对象<br></p>', '0', '1EA120BF3FE04991B16A5CADE159A2EC', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CE6DAE1AE7DF4726847956CEF51D38B6', '<p>运行报错<br></p>', '0', '4576014BC221460894B8283B2945D4F4', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CE7C6CDC87354F54B2ECEBD66DCF419B', '<p>34</p>', '0', 'F369BA88280E4A3B85CD6AD676832054', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CE8CAA7CC31F4D90BFA3137AABE5B905', '<p>每个位置上的数相加<br></p>', '0', '9110653ACA9F48608306233DFD877CF4', '2016-01-02 21:47:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CE8FAD0CAB3840C3B0B7077DF8D5D9C6', '<p>8</p>', '0', 'D6D6796525174C03A446CEFC57093B0F', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CEA19E511792400FBB4654304BACFAAB', '<p>给类中的属性赋值,但属性必须public所修饰<br></p>', '0', '6045FECE4B5A45C9AC20DA97721F9B8D', '2016-01-02 21:47:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CED04C7E21B04A97812EE3F1386763B8', '<p>false true<br></p>', '1', '783E2928317C44178864F84BE2776A51', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CED366EFE1A14554A02F16A81C5B9541', '<p>是抽象类<br></p>', '1', '4393D62D0D454BCD82440A6A510CC6CB', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CED69ED727A24E1DB6445F12DCF37606', '<p>public StringBuffer replace(String str)<br></p>', '0', '78BFA4A094004746B07D8F7ED682B30C', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CEE967A191994D6A81ADCA40DADAD2A7', '<p>类加载器只读取JDK提供的核心类库中的类<br></p>', '0', '29E5BE4B7C294A9E8F4E9F6C0FE7A0A4', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CF05B7BB43D34CFDA1D8C87BF843563E', '<p>arr.length();<br></p>', '0', 'D0CEBD11343C4570937E04BC5926DC7E', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CF0A7E9C133541698C999880E2025D32', '<p>自动装箱和自动拆箱是在JDK5之前就出现了的<br></p>', '1', 'E0006883C7F3414383C990502DBD087D', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CF0E0001964C4AD7BE941069DC76D786', '<p>执行顺序是: ① &nbsp;② &nbsp;③ &nbsp;④<br></p>', '0', 'E46FF59D07254629BFC567C7816BDD44', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CF1321E9545A4141B4A751BC552F67FE', '<p>Eclipse导入工程就是把该工程拷贝到当前工作空间下<br></p>', '0', '8257B99B2060481195BD179F11E876BB', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CF140395605E481091CEC516CACF686C', '<p>Date类中的setTime方法<br></p>', '0', 'A8134F8361D145AFBD23EE3D4F730B01', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CF14AA551BA84E6C97602397C34EDD86', '<p>a是最大值<br></p>', '0', '0EF6FB630044444EB4987440FD362DA7', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CF16BDF47E3049C8855E5369B0A6EF79', '<p style=\"margin-left: 40px;\">Student[] students = new Student[5]<br></p>', '1', '2C5BF2B0184A40FEA0C066A9058E6F28', '2016-01-02 21:47:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CF240E50143A47DDB87375508129E6A1', '<p>finally<br></p>', '1', '72B03FEFF96D49CCA08A0B1A8502394C', '2016-01-02 21:47:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CF404898168A4B1E8595B998D1B5B755', '<p>jar包运用了面向对像的封装思想<br></p>', '0', 'D50355B184A74EAFB20599199DC3C329', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CF46B7443BEE4D76BA8B9F050EB00C48', '<p>&nbsp;Writer类<br></p>', '0', '5895335F73064D669D62BB222B4E288B', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CF67FA35DB8842BF9CDB988B317069EC', '<p>如果想看这个体系的共性功能,看最底层的实现类<br></p>', '0', '78302AFDADD148AAB10C3089529E8BB7', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CF6A1608068A4C07B8C8BD1CE1AC742E', '<p>acdbe</p>', '0', 'DACCE3CDF70A4369877FCA4442FEA708', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CFA79158774B47A6A4C8CC86A100E885', '<p>任何字符除了abc<br></p>', '1', 'E3074074B0594D58B0877A11149B5156', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CFAB0E9CACAD4C21AC06D38137D2D5EE', '<p>以上都错<br></p>', '1', '3A58D147388F4DE9993481A748A806D7', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CFB842C51DD44FD99FE7BC41571B8C83', '<p>表达式1处的代码会被执行多次</p>\r\n', '1', '9B5D75894C81487EA56A9955B9159CEF', '2016-01-05 10:29:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CFC6FE9FBDB841AEB446D4A37EE4B1FD', '<p>5</p>', '0', 'F369BA88280E4A3B85CD6AD676832054', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CFD3F7E238C8421C8389E297783D24CE', '<p>int[][] arr = {{1,2};{1,2};{1,2}};<br></p>', '0', '6F1ED2CABE3E49FC9A30BEA2AC003EE7', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('CFDC587B1F9D44C3BDA587C4A007E892', '<p>createTempFile()<br></p>', '0', 'CB8F89FDA6D94D199548C3ECA0977F93', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D0094630B49047CC90C322A77EF97BC1', '<p>-1<br></p>', '0', 'E38D396B8E074D408FD29D50FAE5C90B', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D0141F12D6D8482A80D8AE39ECF7DA64', '<p>c=c+i;</p>\r\n', '0', 'C19074D6CED04C0AB53E2F0A40BC4F3B', '2016-01-05 11:18:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D01E459D85C7438381DDFA77034AE1D6', '<p>line.toCharArray() &nbsp;0 &nbsp; &nbsp; arr.length-1<br></p>', '1', 'B142786382A44D27A8AB251F2B4D9CAC', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D048C9394B3640F5A69FA36CA89A8939', '<p>重载参数类型不同<br></p>', '0', 'B4E652C0E40E4D1EB38360856ADFFC21', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D04A2492D7D04C778A70EE90A4E3A31B', '<p>&nbsp;%也可以用做标识符的起名<br></p>', '0', 'F7B83A4A5F414E258FA2BE53B41E5D78', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D0627794D6DF4D5DBCEC6FCFF8681B2C', '<p>Eclipse不能对多个程序同时开启调试<br></p>', '1', '111B56589A6D4100A4FB075A697424D6', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D088EFF29B704245BFF6DF300D722673', '<p>overload<br></p>', '0', 'D1BA325130EA460F85F8E56D4406A40D', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D0946EFA589348D6B48C7379CA6A9096', '<p>Socket套接字<br></p>', '1', 'C9941695E82148F68B3F583A562C9A62', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D0AD0877C4A445468652468D4A2AF292', '<p>&nbsp;MyEclipse<br></p>', '0', '0F9A40D26D524697ABDA4A524D7E1C8E', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D0B2FF93E32D4E8A839B47174C1966D2', '<p>内部类不能再继承其它类</p>', '0', '494B987FEA4648E880F8D7C2FB4BD37D', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D0C0EDF9049E4F13B9E2E19DCEEF5DE4', '<p>获取集合中的下一个元素<br></p>', '0', 'DE3E588268E544EDAC25B5FE6768DDEF', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D0CD38657D63407AB0FA646457527CAE', '<p style=\"margin-left: 40px;\">ArrayIndexOfBoundsException<br></p>', '0', 'D236ADB4E3D0408CBE101DCA23AC8E77', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D0E621776D3A4363ADA4B2F3ADCF7CD6', '<p>Vector</p>', '0', '76408DB7AA0D4B369FFEAB1BB73AFA4E', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D0F176CBC0074060870B6E11C62783A2', '<p>java.util.Hashtable<br></p>', '1', '9D751D5474794F8098DAF547D4EE5675', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D0FDCECD379047CFA2AB5A291A169395', '<p>使用Eclipse不能在子类中自动生成要重写的方法<br></p>', '0', '42A26E2F819042C18518600FACE18619', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D1001ECC403045D4B0A8A4C33C47EA5B', '<p>yield</p>', '0', 'A3A2AA41A95148C395A4B962D4D909E8', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D1040E18CC544366ABE3D8A61205A811', '<p>int [] arr=new int[10]{};</p>\r\n', '0', 'BFCF0DE5819E4AD69E0E507950EE35AF', '2016-01-05 10:54:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D10FD5538BED4773B95782DAF6BD3CED', '<p>构造代码块<br></p>', '1', '44B0AB0854214465BE5B6A7DBDE23B89', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D1105E10F42E4F57B2785CBBB9832562', '<p>private&nbsp;void&nbsp;aMethod();</p>', '0', '6DDC9DBD20474961BA8433E665F28363', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D15A939B29CF419B94533B74D839840F', '<p>FileOutputStream fos = new FileOutputStream(“a.txt”);<br></p>', '0', 'BE14C78DB74B45B98795860138E63D83', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D196B82135B84A6D88335060176767C9', '<p>获取的是一个毫秒值<br></p>', '1', '02057E92DC3840A79ED42A411E2D26B5', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D1B36AD7EC24432980CFC26DCD28848E', '<p>super:代表当前对象父类的引用<br></p>', '0', '36E6EE66AE9F4140968D5FBCCB419414', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D219EE7B72A94A03B98EC2E711BD5E56', '<p>Writer类<br></p>', '0', '89E2B9BACB054CAB8EF91B0D95A40520', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D229FA81213A4DE8B8213931F3ECF6FB', '<p>DataOutputStream<br></p>', '0', '7685C4AD4A094391A34D3511AE072F58', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D23D1BFC755949259C304D0A06508D02', '<p>0</p>', '0', '848C122FCDF54222A12F365187AB580E', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D248C72BEE1B4A94A37F3AA8E4099BEA', '<p>return<br></p>', '0', '2A73CD0EB61845F48B99141874D2BB7E', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D252487E17154D979E836EBC5A9F191F', '<p>subsequence()<br></p>', '0', '8DF1BB6A6A7C4B32800826424E607400', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D2545E79672F4BD1A9870E3275B29472', '<p>该方法会让出CPU的执行权，并且会完全按我们的预期效果运行。</p>', '0', '8F1AA4FB4A414E7EB5D9BE30B03CFD8D', '2016-01-02 21:47:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D2769B8330214E5592FE02F3E1102CE7', '<p>d</p>\r\n', '0', '815707A427DB4395910AA176F36D07B3', '2016-01-05 11:00:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D28C206A836A46EDAAB81BEF5EBFF621', '<p>readLine方法是BufferedReader中定义的特有方法，一次可以读取一行<br></p>', '1', 'EAFC0E3832DA40F7A57A9116F4F520F1', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D2AC7E73BC9443A1836095851CE4615C', '<p>以上说法都不对<br></p>', '0', '961962CDF579482D8DE35AF3DBF31BFC', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D2D629C79B884CE89C13A70ACE66479B', '<p>2</p>', '0', '4052B4D8ED1240428210C2AC3E3479F4', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D2E2700FAF924B01B5E9B0F2D31868F3', '<p>集合框架<br></p>', '0', 'C9941695E82148F68B3F583A562C9A62', '2016-01-02 21:47:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D2EC763435564DD9B3193F5E9324F84E', '<p>switch结构中必须有default语句</p>\r\n', '0', '30E0743CAF524C0685457F7EE88C5216', '2016-01-05 11:01:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D2FB682C9A3F4F23B5956946DDD5CBD2', '<p>6<br></p>', '1', 'AD8126F22B9F40CC9BB5622A40D4C415', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D30B960DFCD04443B183FAEB52AE10C1', '<p>在编写代码的时候标点符号可以是中文也可以是英文状态<br></p>', '0', '6069A2B7B4654ED2985E41F0E40DC1AE', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D315667562C047AEA5758A985F048D93', '<p>可以用字节流实现图片的复制<br></p>', '1', '42156B65734C458EB56B59297A7615C0', '2016-01-02 21:48:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D31A94620EA94FEC8D4E8173D5BA6FB8', '<p>jar包可以被Eclipse多个工程使用<br></p>', '0', '49C4E4FD37384A2B97E1F02D22D0E930', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D31E62EF01124F42B7A774C6EECD44B6', '<p>除积取余数<br></p>', '0', 'F4C9C8EF4BE240C1ADDA7ED299A3B3D6', '2016-01-02 21:47:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D32413C2C5B646BAA6B724593BE8DEE5', '<p>E super ?<br></p>', '0', 'B7EC491B45DF45B08BD24F050C11E29B', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D347AEC83A564A56B6D7660175D51A4D', '<p>for (int x =1; x&lt;=100;x++){ sum=sum+x;}</p>\r\n', '0', '08422B7E8F8A4CCE801131A62FCFCF6C', '2016-01-05 11:09:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D34C11F645D14B06AF16A0E90E6B7BA9', '<p>return&nbsp;num&nbsp;==&nbsp;1?&nbsp;0&nbsp;:&nbsp;num;</p>', '0', '1FEDB9888FF844ED8CB40D0CE8306829', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D34CB98EC9F944899E2FB642383F74B0', '<p>接口中一般定义的是一个体系的扩展功能</p>', '1', 'FFD83203F8D84B398B12F29349D27B0B', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D351740378C849E78487D1449F1C8585', '<p>在C盘创建文件demo.txt,并写入数据abc<br></p>', '0', '241C001A59B44737A1F152EB8D0235BB', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D37386DD30C9430AB320BF4E541F9045', '<p>有语法错，不能执行<br></p>', '0', '74FDBB5D7BDD414AA3B230749EB17314', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D37943F86743417B9A2A30610545D3EF', '<p>7</p>', '0', '5C0EAF5A51694E2FA4ABC35E4A865191', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D37DFE2CFBB94B779A2DBB839069458B', '<p>listFiles()</p>', '1', 'D7A4A57FC12E474CBB9AE88C0D135A9D', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D37EEC51C26B47DBB6431F6D5C87314C', '<p>Throwable<br></p>', '0', '4B4C72449AEA4C26B147B90D9D21F282', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D3A00B79BA614481A86CC0DF692F2E1D', '<p>方法重载与返回值类型无关。<br></p>', '0', '68D5B554ABF84DBFB8D3E32E8CC5B3BD', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D3BE4BCB61864A2F8BF8314E8183A944', '<p>抽象类中不能定义常量</p>', '1', 'C7DA23A6A4BA42C8B35BA4970157756D', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D3F3725AA47A434F9F5FA269D9F0062E', '<p>size()<br></p>', '1', '8E0079A51EEC4699A5D710D35D29DD2C', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D3F9FAE9A3C24F5D8726E7645C5A9F19', '<p>含有get(int&nbsp;index)方法</p>', '1', '4CEED7721F1E403CAEDC40CA76136CD1', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D447C57AC89B4F668DC5D2C9763C532F', '<p>BufferedReader的read()方法读取字符时会一次读取若干字符到缓冲区, 然后逐个返回给程序, 降低读取文件的次数, 提高效率<br></p>', '0', '8FCBC819AB19401D9FA03CAF9F98E774', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D44E4C1782BC42FD87803E69F9A88C98', '<p>insert()<br></p>', '1', '403BCD4E74E34D9F9ED4961F931A6ECF', '2016-01-02 21:47:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D44F1066BB5F4F7881F1C8D0F977E9A5', '<p>方法中可以有多句return</p>\r\n', '1', 'C2BAE395C1334F0CB54A2470D90568AA', '2016-01-05 10:34:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D44FFAF3D270427B86B00D8F7AD8E53C', '<p>Map集合的键可以是重复的<br></p>', '1', '63008372A67D44D8894A04AAE9211AE5', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D4783008EF8E4CCD8033A8F545A536FC', '<p>length()<br></p>', '0', 'DAB3B91EDCEA4ABBBA424F0AB07D8190', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D484F05277C54E27A38207D08C8F9FAD', '<p>&nbsp;线程A通过调用interrupt()方法来中断其阻塞状态</p>', '0', 'DBE23E3CE6D04E4DB47556C816E58864', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D4C1EA3031BD4C12969EF24D967518F8', '<p>Ctrl + Z 撤销<br></p>', '0', '94A2B826758B4D8C86E3EC7C5174342A', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D4D2919A3C81449A8A756776D15775AE', '<p>匿名对象就是没有名字的对象<br></p>', '0', '963A09F451EC465E88DE1CA98A923D51', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D4D7477011B74BCD8C9380283803FC92', '<p>FileInputStream fis = <strong>new</strong> FileInputStream(\"海贼王全集.avi\");&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>FileOutputStream fos = <strong>new</strong> FileOutputStream(\"海贼王全集2.avi\");&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p><strong>int</strong> b;</p><p><strong>while</strong>((b = fis.read()) != -1) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p style=\"margin-left: 40px;\">fos.write(b);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>}</p><p>fis.close();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>fos.close();</p>', '0', 'A8E88D3C9C5A447BBDD238DF2D320C5C', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D4E71D87BAFE4879B42B0D8438A6442F', '<p>4<br></p>', '1', '52BD95F3B56347EE99DE157900D2128F', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D4F98739DE5442F18BD9CCFAC64BA2C4', '<p>多态应用中如果要牵涉到类型转换，可以使用instanceOf关键字进行类型判断</p>', '1', 'F9C9E3F1CC4049808E592A3A6DA32E59', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D50ABB12C28B440DAD877F1192063FF8', '<p>截取索引从start到end的字符<br></p>', '0', '328DFDBB71764E95BE1C7F5CF17E38F0', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D517A384F0F34F7FB21CF7E376185868', '<p>传输速度快<br></p>', '0', '451A8653D590413D8F44C1F4E2A19160', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D5291CA60D544AD8925C26B2FFA248B3', '<p>针对数组进行操作的工具类<br></p>', '0', '4393D62D0D454BCD82440A6A510CC6CB', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D539FD810460472E9018C8BC4BD3A0DA', '<p>队列的特点是后进先出</p>', '0', '1244EF5B065C413E8538D26FE6BD5DB7', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D54288F139654373AECACA4EBF4518E9', '<p>该接口里面什么都没有，是个空接口<br></p>', '1', '8359E963825544A9A9FBEC370ACC95B8', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D543A7E46D514F33B0E950CB55BCB1D2', '<p>switch语句遇到break或执行到switch语句结尾结束<br></p>', '0', 'FC8DEDFB10BE4BDF96606C3AE28D3980', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D58FC1256AE145E9A5A3D41F10393324', '<p>a1<br></p>', '0', '1704CF5FE5D3469DB943E64C1D6DE4C2', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D59E3A936CFD42D8A2DCDAF70F46A404', '<p>append()方法没有返回值<br></p>', '0', '2F878C45E88947E7B097C5601AFA8184', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D5B7900A500E4D0B9E8E8851762C1059', '<p>符合条件,已经进入if流程体<br></p>', '0', '747AF21CDC7541C98292D04A6AD6E15A', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D5C7A09BB15245C3A7A386A89C034273', '<p>面向无连接<br></p>', '0', '451A8653D590413D8F44C1F4E2A19160', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D5D4EC00EEF84025B8222E0BC84EC28D', '<p>这个类被final所修饰,所以可以被继承<br></p>', '1', '3A58D147388F4DE9993481A748A806D7', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D5F4953476294EC2AB2E9C58F6C53154', '<p>以上说法都错误<br></p>', '0', '85505AFAADB447C28986F3D5809633A3', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D5FC43DA30C848E09BBFCE5770DF0BCC', '<p>一个类中可以没有成员变量<br></p>', '0', 'E3BD11B650F54823B2C4587D1C7AC065', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D5FDA14B956547EEA9ECB80F1DF639F1', '<p>k = 0&nbsp; n = 0<br></p>', '0', 'BC67217855E447C0B7CEF9BF7BEEF3EA', '2016-01-02 21:48:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D611028BC7B34A4B8722609A5AECC0CE', '<p>面向对象思想, 可以将复杂的事情简单化.<br></p>', '0', '3D8FCCCE165E488FA2BD34F2DBCD6A80', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D62DE994CF4347A4A943CF432841F978', '<p>(byte)(b1-b2)</p>\r\n', '1', '4E6F877880184D5998E9581F020AB5F7', '2016-01-05 00:11:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D65C52B4913842BEA3E983016684540B', '<p>jar包中存放了java的源文件和类文件<br></p>', '1', 'D50355B184A74EAFB20599199DC3C329', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D660A3FF7C7F4E3DA2CB1ACCFD539A23', '<p>&nbsp;abstract不可以和private共用</p>', '1', '6D8FAA56FF44400A92083E32C1EA713A', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D66A56F78EF540E3B15941B2FE6429F8', '<p>public void show (){}<br></p>', '1', '3E3E073C2B0D4E6F8BCA838807F0FA64', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D67CB306556D47819CA3E20C6F9E5C50', '<p>迭代器不可以遍历数组<br></p>', '0', '785A48B480A843E38BE9E375C5783B10', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D694D5EAAB494CAE97EFDFEFA14FDDEA', '<p>该类具体2个成员变量和3个成员方法<br></p>', '1', '6AA23DF2F0914A0394513EB052C500A7', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D69E603CC9844C409621A5256F7C0743', '<p>先输出100&nbsp;个world，然后是100&nbsp;个hello</p>', '0', '9E1D64F685E34B92A4103F1211B4B95A', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D6CF81D49C9D405ABF9BA8D8B501DC27', '<p>write(char[]&nbsp;cbuf, int&nbsp;off, int&nbsp;len)写入字符数组的某一部分<br></p>', '1', 'DC03150AE72749B5A74CA278014B2295', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D703B5DFCB164E0A93F8708F0C832ACE', '<p>[a-z]<br></p>', '0', '7983EFF7EAB3486AA0439DE0C242C43A', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D7077E6A98924DD89DF8A0E4F0548BBF', '<p>字符串常量会放在常量池中存储<br></p>', '0', 'A59247A6CE834AC1AC4E101A93C28E88', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D71C55363106493288A1A8BDBE7D770A', '<p>建议把close()写在catch中<br></p>', '0', '5C58ACF8E5AE4C2AB1E30FA2098ACC32', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D74520DE0B88460BBB2F24A7FD218CD8', '<p>输出4<br></p>', '0', 'E83B1C8FAA5D4B528EECE56AA955A34A', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D74724AA4CF34CAB9D7417BCA44AD05C', '<p>&nbsp;第六行会产生运行错误</p>', '0', '88941271C47C4408B48FA4E74607536A', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D75B2B7CB5A44F8FAEBD132B14B2A72A', '<p>x &gt; y || x &gt; z</p>\r\n', '1', '361AF02FB5F940C1865B9AA9DB7AA7E6', '2016-01-05 11:07:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D76E338A67F24EEFBD381E8D29CAC88D', '<p>执行一次<br></p>', '1', '5D8392BF6E524007B98D281CE9827EA8', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D770AF641BC04684A8031522114F20E2', '<p>泛型是JDK5的新特性</p>', '0', '717ED7B09938469192862B04A021AD62', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D784548C7E36488985F3BED1FACE7BDA', '<p>double&nbsp;a&nbsp;=&nbsp;fun(1,2);</p>\r\n', '0', '0C9997D36DD54B168B960EC159815DF2', '2016-01-05 00:06:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D7890D84E086413EB1C0AFFC5F6015A6', '<p>进程是依赖于线程存在的</p>', '1', '9F2B7FDB50304EE79C9D1F4008F36040', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D7CBD588D00B40B99869DA3C0673494B', '<p>Eclipse不能新建一个抽象类<br></p>', '0', '42A26E2F819042C18518600FACE18619', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D7CDC1725029438AA6E14FA0B1BC818A', '<p>以上说法都不正确</p>', '0', '2D893DF5AD2D4BA38B380E261540BC4F', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D7DB3662EE82405598104017809D9B3A', '<p>18</p>', '0', 'E24407A59AA44399846B7A85F760C4F5', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D7E54DE487B648098CCBE70D64F56A3A', '<p>Jdk1.4</p>', '0', '05B19DE7153D46E793BA78B89F5D2037', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D7FF3CCA0E7543FA9E8A67CC1AA3B4C4', '<p>while循环先判断后执行，for循环先执行后判断</p>\r\n', '0', '1219DAFEA6724A5DA10B6474B81430E1', '2016-01-05 11:13:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D84081DF6FB84D67BD4BB552FABD88A9', '<p>Eclipse下的视图乱了,我们可以选择Window下的Reset Perspective,恢复原状<br></p>', '0', '463A6CDC865A4AFC8944ADE30CC4B04A', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D849B69B62DB4402B1E8087A90E75EE6', '<p>k = 4&nbsp; n =3<br></p>', '0', 'BC67217855E447C0B7CEF9BF7BEEF3EA', '2016-01-02 21:48:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D850DD29761D48BE8F456F832884EED8', '<p>-1<br></p>', '0', '7FB057108FD84745BCF20A2A114D6872', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D863F00990414BFD9D328B623FDB8522', '<p>FileWriter<br></p>', '0', '5B39CC05EBBE4AEFA53F69D79AC31BA8', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D87D03153EB948959CF6BE0C6AB80370', '<p>方法名不相同,与返回值类型无关(构造方法没有返回值),只看参数列表<br></p>', '0', 'F1B12BA5A25E4B24AF72821832579E3A', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D8996CE68C8E4544BD50DE3F45484CE7', '<p>1024<br></p>', '0', '3CCE2C9289C147A886A36B03E3AD9553', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D8E69222EE5947F79FAE6E9E2A88C549', '<p>2</p>\r\n', '1', '3C802AF0274E4FCB97401CA6E5FDD722', '2016-01-05 11:17:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D8EA9E8AF5084E9591A29DB1375871A1', '<p>set方法是给成员属性初始化,构造方法是给成员属性赋值<br></p>', '0', '597ABAF3641F4B9C9937466F38C1FEA3', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D8FACE6196F349119EC282B6C12D2426', '<p>当main方法中调用一个函数,不能够进入该函数调试<br></p>', '0', '59F7BF9A637B45ECABCE864AD03E1C10', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D8FE8722F1224AC5A0019268370CDD3F', '<p>暴力反射可以获取类中私有的属性和方法<br></p>', '0', 'F11B456C93F444F1A347EA1E79E7FBC7', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D90C42F8ABE44EFD83A87A1783C07CE5', '<p>让这个类继承Exception<br></p>', '1', '54EFE16BBF6641AA8BA77FC97085368F', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D9154330A14D4AFD873D6DA81A0B755E', '<p>新增泛型和可变参数<br></p>', '0', 'E0006883C7F3414383C990502DBD087D', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D919FD44ACD848F49506AF0ABECCC683', '<p>抽象类一定有构造方法</p>', '0', '08DAEDCB974649E492F3DD65AADEE648', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D93A8100543E4A01B38D2D15408DB93A', '<p>对象.成员变量是获取对象的属性值<br></p>', '0', 'A6426E3458AD4C76BEB4892CF80C43FF', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D9458E4E45D7470CA3C66FBD59F888C7', '<p>10<br></p>', '0', '979217D547154A34BCF2AFC3EB0DF9A6', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D947CCBF190942A7B2C052E8F4AE7D3F', '<p>&nbsp;John谈几个亿的大单子，飞出去救人。</p>', '1', '676B826E86E54EE8B1DDDC8FD190BC74', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D94D9A8689C24B2D87C318B156BC21BC', '<p>arr.length;<br></p>', '1', '07B7C320E8814F87961A54500C335EA3', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D94E56468DF74189A2EC044B2780E4A8', '<p>File(String pathname)<br></p>', '0', 'D673A54F40704922BD0286D2E93546C6', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D97C698290AB465D8AB62F95A4AFF54F', '<p>字符流拷贝非纯文本直接写出后,文件会出现乱码<br></p>', '0', 'CAEE6E9B693D4C5492FCE7A7623C18A1', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D987C49E13644991A5FBCACE45C33591', '<p>如果构造方法中有super(…),那么super(…)必须出现在构造方法的第一条语句上<br></p>', '0', '5465ACE300EF4C29920B87FE41EF9082', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D9AA02DADF6640148DD2B8D7480FBF75', '<p>public</p>', '1', '270639BBB31840FA98D5A37240A91DE9', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D9AA3376BF384EA2BCE29E3273F82189', '<p>以上都不对<br></p>', '0', '8BCBC2E1D3294EAA9FF5594E42D3E5C7', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D9B9A0E397BE4E6181CB39572ADD681A', '<p>接口用interface声明</p>', '0', 'FE9CC184031F458CABB4A3434A9C2438', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D9CDDD2873C247FEAC392D5C4798AC71', '<p>如果您输入的是一个真实存在的文件路径的时候，程序就会一直让你重新输入<br></p>', '0', 'DDC888002C8D4CB7AF2E2977365CD216', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D9E119FA5C28450EA569928F69FC6D87', '<p>子类不能继承父类的构造方法，但是可以通过super关键字去访问父类构造方法<br></p>', '1', '11CFABFBD4B24275A59916CA4A4EE08E', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D9EA87135D8F45F3966658A356BBEF8C', '<p>true true<br></p>', '0', '24A6885B91CB4F26A77FD0A15FC87CC2', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D9F1B45962644444A03048707630C1FF', '<p>可以用四中遍历方式</p>', '1', 'F372CD79AB23497A9BB444A053550E83', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('D9FAD00076DB4B9EB610896ACD73F543', '<p>④这一行错误<br></p>', '0', '4BE2556B98B244B7B8B91F7EDEDE8D17', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DA1C64B9A9B9494DB84C9E432C76B37E', '<p>getClass()方法返回此对象运行时的类<br></p>', '0', 'CCB84B105B274AF4ABBCA1FCD801D927', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DA53A9E4F09743309321762D0F562145', '<p>||<br></p>', '1', '15C8FCFE254D4AB2A7BE7F67D2129B3C', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DA56B29DD70E4C638B0709E76BAF1630', '<p>InputStream<br></p>', '0', '954F6308912B4238ADD722EC4CE2E16B', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DA59AA84C1BE42E982D0569F8F2AA648', '<p>键盘录入数据是通过Scanner这个类录入的<br></p>', '0', '336BDAE1204B458EB770E6667344FC24', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DA6FB32DEB244691AE5C3FF02F841335', '<p>\\\\.<br></p>', '1', 'C830253B6B7848AC9B8F0FDA92C4A022', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DA84B7294D084C778B2044723BBA3C3B', '<p>A<br></p>', '0', '1F8CA06547AD4987A56B66259C741711', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DA8C0C3BFA0243D9ACF05E5FDCF72CF4', '<p>Math.floor()<br></p>', '0', 'C6645ED07E5E43D1B02026C53C642B76', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DA8E8698B137404591FE9A82C7CB7D5F', '<p>遇到右大括号要缩进<br></p>', '0', '59DC01D2DDD7479DAAA00AF27A2A9201', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DAA81EB7EF184CD990F1C7490AF664B3', '<p>Eclipse的默认存放class文件的目录是在src目录下<br></p>', '0', 'B6A0D94C0A0D4E0BB083EBD592BFBF8A', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DAA825CF878A4577A582E2DD6335E2B6', '<p>F/七龙珠/贝吉塔大战艾露莎.avi<br></p>', '0', 'B4445D2E69B04FD59F65D3D5BBD5D50E', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DAB42A319E8A4E728C620F4698625C5B', '<p>bcd<br></p>', '0', '784D14DF68E14649BE511EB95E19A470', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DAB699C486D24D3CB4488B5A5B4423DA', '<p>常量表示不能被改变的值，例如1、2、“abc”都是常量<br></p>', '1', '75906B56A6B8419BBF1E9248577BF821', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DAC2193B00264B00AF61033C92DBEF75', '<p>限定变量生命周期，及早释放，提高内存利用率<br></p>', '1', '5C1B8766AA0849039A4E25E64A8B5BD9', '2016-01-02 21:47:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DAD3BC50C7B74EDD8F7895F125B239C1', '<p>Writer<br></p>', '0', 'F8D4337DFAE44C239026362752B65868', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DAF743C2AA4A4745B0BDA539C175F829', '<p>在用FileOutputStream写入文件时 不需要用flush()<br></p>', '1', 'AA8F784105F34FBEA2BBCDFBC15CEC02', '2016-01-02 21:47:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DB2B3A3E5A2C4D81BBA7AC33578B94E8', '<p>三元运算符能够完全替代if语句<br></p>', '0', 'FC416AC468EC47D88113BBCA9D8353E4', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DB43C901D3C043A3B528B594964A7B80', '<p>WoaiheiManiaima<br></p>', '0', '2F45BEB283FF421A8200E2AC491514FD', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DB5B9300DD144ED8BA1B0CEE40357FC9', '<p>随着对象的消亡而消亡<br></p>', '1', '024F0B258CB04508B76ED6ECAAA660DA', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DB70AB8F0DA24A60B27FDD623E0B8575', '<p>接口中没有构造方法，所以不能被实例化</p>', '0', 'FA15B559892248939704CFF2784239AE', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DB78D4F2E97B4DB68AE513B4FCBF4B55', '<p>propertyNames（）返回属性列表中所有键的枚举</p>', '1', '70960B5A0F474ADBA008B51B72CB209B', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DB8559CF6601474C94FDB4F955E8B469', '<p>在新建一个类时选择要继承的类,要实现的接口,同时勾选Inherited abstract methods<br></p>', '1', '7107FBB15B1342D18A4C100AD383FDE4', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DB89B1ABF4AC47698A7A78A4465DCECD', '<p>返回值就是读到的字节（byte）<br></p>', '1', '5AE300BAB3ED4B3497D889153F31478B', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DB915DEED16F4E0393CFE3A773AD9794', '<p>arr[0]的值是0<br></p>', '0', 'CE763E92F64448799744129E04A131E0', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DB9FE636599F43FEA89B94CF8A11A919', '<p>FileInputStream fis = <strong>new</strong> FileInputStream(\"双元.jpg\");<br></p>', '1', 'F9CD2181E4DA4EA5B6E3930CF18E94C6', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DBCD4C5DD79444309DFBAA950474FE97', '<p>java语言面向对象的三大特征之一<br></p>', '1', 'AAF09BCDE78740E69A4B4228C3CD9C15', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DBDD42B8A4044429ACED53559A50A8FB', '<p>方法是非静态的<br></p>', '0', '7CECADC2807A4A9393C1F4BA2D5D4C1C', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DBEC625F818F4C6DB94C15C95ACA38A3', '<p>length<br></p>', '0', 'DAB3B91EDCEA4ABBBA424F0AB07D8190', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DC22C217170B4C048BBB558D0137F1E4', '<p>true true<br></p>', '1', '9251C7A13D474CD28C7CB5E4E869441B', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DC350A5122BE4167BBBF69F2DC802DB2', '<p><a data-cke-saved-href=\"http://Www.Itcast.com\" href=\"http://Www.Itcast.com\">www.Itcast.com</a><br></p>', '0', 'F3A9105F84FF4B619156FD271A5246E8', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DC44A2F9B70B4E88A8962387ECCE68BA', '<p>在DOS命令窗口输入javac<br></p>', '0', 'A641933B25CF464988436B71CCC23832', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DC4E4D4D90A440528C12D37D31AB0A58', '<p>&nbsp;Callable的&nbsp;call()&nbsp;方法可以返回值和抛出异常，而Runnable的run()方法没有这些功能。</p>', '1', 'E39B53EFE30E439CBE770B296562C2F0', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DC528E7EED1E4F05A0A51603020F9B42', '<p>arr表示数组的第一个元素的值是0<br></p>', '0', '1C0C0B2696524EFFB6EBC9F4C62563E9', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DC7F14F1C6474A5E8777511155F1BE2F', '<p>微软<br></p>', '0', '080FDAD8D4874AF3B15A83F0591A2163', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DC9E57A5F6E34F46881568B3426EC3AA', '<p>abstract&nbsp;class&nbsp;Animal{&nbsp;abstract&nbsp;void&nbsp;eat(){};}</p>', '0', '44A49A9EF03A4EA6998B38348D7009DD', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DCA27C7F3D13424EB33B09B043F211B5', '<p>remove()<br></p>', '0', '666B224A81A14522A8B34757E05F7E7E', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DCA58D926B2C4A45822B60BD7221FDA2', '<p>int&nbsp;x&nbsp;=&nbsp;fun(1,2);</p>\r\n', '0', '0C9997D36DD54B168B960EC159815DF2', '2016-01-05 00:06:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DCD9058BED3B4613A76F19943564A833', '<p>输出10<br></p>', '0', '1D1391BF3D57479DA6CD4B43F93D454E', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DCDA6376251547B1BDBF22ECB59011E7', '<p>每次创建对象都会加载字节码文件<br></p>', '0', '1FCE0BB2F27348CFA2D9EAB10980038D', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DCF7E73B322542309D9065EF4B751E60', '<p>任意字符<br></p>', '1', 'F9D20990860D414DA4E4E1F7B04D6F60', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DD4A42D921AD425C8386431046C13DFC', '<p>内部类可以直接访问外部类的非私有成员</p>', '0', '92DB061FED0D40088C8A30BC829D753C', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DD57604C438A49FCAAE8AEABA946870D', '<p>protected<br></p>', '0', '916FD7975C0748C1B977091139AE2920', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DD60A34B06DA48DA89C127177665F7E8', '<p>使用TreeSet必须传入一个Comparator</p>', '0', '79EFB9A028004FD78E0172C1D10E333A', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DD8239B6473B4A78A10A5224B393405F', '<p>break只能在循环结构中用<br></p>', '0', '86F3841E6C6945C4B90EE3FD5BE6E2F9', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DD83AF607DC1469D9F489DD0564EEB42', '<p>interface&nbsp;Inter&nbsp;{&nbsp;void&nbsp;print();&nbsp;}</p>', '1', '199C217200F248CA8901EF185C605765', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DD9C271CD61B45A78092CE8CCC00CDB5', '<p>available()<br></p>', '0', '3853C01BD30A4CD18A1F90BCE961F137', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DDA06B36246C49E9B711C7D81E61B01E', '<p>public static void main(string[] args) {}&nbsp;&nbsp; &nbsp;主函数的格式<br></p>', '0', '82C3F4B66C7440BC89249CED31DFAED6', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DDA9F0C879ED495A946D840E2020C058', '<p>集合只能存储对象<br></p>', '0', '68C9BD499C284A208690688ABBDB0226', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DDAAC480E97544C3A27763B808673C75', '<p>返回值的功能结果，由return带给调用者<br></p>', '0', 'A06316D8090B4479B8E165E59459F067', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DDB4D0A7B12B4046AE17653A70F2A0FF', '<p>在方法上声明异常（throws 异常类型）<br></p>', '1', '70A6A9BEB41C48D0A1E316793F8C6301', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DDC56373D7474FAEAECBE0987197E438', '<p>LinkedList底层数据结构是堆</p>', '0', '17F1640F63494149AC681672117A2B5F', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DDE9C1DBC2F54AA8949BC1D9DD501359', '<p>字符串缓冲区是为了提高字符串的操作效率<br></p>', '0', '2EA8E15740084D309085376DC7913C8A', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DDEA2B90F17C48C389E18F3A0F4D9271', '<p>被java语言赋予了特殊含义的一些单词<br></p>', '1', '89B84A68FCD342BEBA94B9EBCAB18139', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DDF039AF7A11408AB2EA70958B71ED7E', '<p>int a = 10;<br></p>', '0', '0DE02B30B9624BCDA2D532954D0F13BB', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DE014743919C40A685F2D650BC3B49A3', '<p>存储的元素会按照一定的规则去重复</p>', '1', '3EFEC211932E4E69A8CDE98B2BAF20F1', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DE08D63DBFD9403BA06DA91074232EC7', '<p>只在类本身找，不会找父类的。<br></p>', '0', '239434072AC84FF89E0E2A017BD34DF6', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DE4CF71DEE4543CE87AC6EB039F39187', '<p>length<br></p>', '0', 'D05C0D691F944D1F9968D276C41994D5', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DE73A1E40FD543E28B4CA313B1E2A04D', '<p>只要在Editplus里高亮显示的单词都是关键字<br></p>', '0', '89B84A68FCD342BEBA94B9EBCAB18139', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DE7CF538D27B4661BE4392A0F824D888', '<p>把任意类型的数据转换成字符串<br></p>', '1', '6AA2F10795F34A4BAA87AF5B5D33982A', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DE964F28952E45318F1E74A4778AF3B2', '<p>synchronized不能扩展锁之外的方法或者块边界，尝试获取锁时不能中途取消。</p>', '0', '28A73EF55D184D5EA1A987DB11DB85FF', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DEB0FC3F3B73424A875FA8D94AF8D466', '<p>switch可以对boolean类型的表达式进行判断<br></p>', '0', '8876473BE2CE4F08BDFEB8E09451105B', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DEB788C485354DB8A52BEF966776AA56', '<p>多线程是为了使得多个线程并发的工作以完成多项任务，提高系统的效率</p>', '1', 'DCD9AD1699694ABFA8E944983F26F017', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DEBEBC1622ED4B069F973DD17DF750B6', '<p>maxindex + min.length()<br></p>', '0', '6CD4C3C27C6D4C5397750224CBD9E238', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DED37A696F8048EA939CA56EE3CFE2DA', '<p>哈2Ab<br></p>', '0', '8F5830CF5FD9464E8FF252F79D1A320C', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DEEB51EC521F4E45AAFB7B2554A85B55', '<p>红杉…中国&nbsp;&nbsp; &nbsp;麦克…中国<br></p>', '0', 'F26C847CE8BA4DF190702CAC25325E9B', '2016-01-02 21:48:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DF12C3ED97F04B29B51DCA7BE7AB7404', '<p>int c = (b &lt; a) ? b : a;<br></p>', '0', '59247DE99BC4484284F0FE64E35FE98A', '2016-01-02 21:48:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DF65736913AC47F5B74D5CD2D8FD8278', '<p>Runnable接口<br></p>', '0', '33653C13ED974192B90251FF05593801', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DF7E6D6F790A437B93AC030852D17531', '<p>ListIterator不是接口<br></p>', '0', '9C318EE3C8534C2B87699FB4FDCEB2D7', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DF8287F19BEA42E6989B54F30B36A7DC', '<p>参数中的a 表示从a索引开始 但是不包含a索引位置<br></p>', '0', 'D72D6374D0A84E4C9F9D56B4703DC4ED', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DF9F27F061F64573800DC730573B63D7', '<p>静态修饰的成员可以被该类所有对象所共享<br></p>', '0', '6194C4C981614D31BB6573E45C2AFCFC', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DFA12BED4639459E8B9657B27856CB53', '<p>TreeSet集合自然排序是让元素实现Comparable接口</p>', '0', 'EBD6207FD03840779A2B1F3FACF35868', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DFBC34D0A1514588ABA5E81DF162BBB3', '<p>0至9数字出现一次<br></p>', '1', '7FDB670A43DE44DC903E2528F9E95D8E', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DFC666B2BC864DDB9FC407A1F72B579B', '<p>c &gt;= \'A\'|| c &lt;= \'Z\'<br></p>', '0', 'FA85969CBD934CE8B667BC44499BC40B', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DFD62C0C025C464AA598CC88FA6DD12F', '<p>FileWriter是使用默认码表写出文件, 如果需要使用指定码表写出, 那么可以使用OutputStreamWriter(字节流,编码表)<br></p>', '1', '5C991C62665541F3B187E735E201A4EF', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('DFD76EAA2A5D4D34B059ED9BF25204E2', '<p>Import java.util.Scanner;导入Scanner所在的包<br></p>', '0', '164036900FC0455CAD6AA96796D9044F', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E0044FA2F0E147DDB18E948FC554E8F2', '<p>c</p>', '0', '7CEFF1E7084E45CEAB76349F5B5B1822', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E00496F6D8A74DD88EB5FC758AB50CE2', '<p>FileInputStream fis = <strong>new</strong> FileInputStream();<br></p>', '0', 'F9CD2181E4DA4EA5B6E3930CF18E94C6', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E0067EB540AB44F8872064241A7B2E58', '<p>执行四次<br></p>', '0', '60A51680B62D4AC88B2DB8D2FD22F207', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E02ADE07C2EE47CDB47C93E06CDD88EE', '<p>Data<br></p>', '0', '21020886B96D43E99B075B11FE939BEB', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E030DFA464A841F69B25DD6D71C3F59D', '<p>线程不安全<br></p>', '0', '910616FE32D74EDF9BE08990793380D7', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E0720B3266DC4514808819E4DC52020D', '<p>用普通for循环和length()可以解决并发修改异常<br></p>', '0', 'AB8605B532BA425780E3A35C9F84B36F', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E09D85E74CCF4F7F92C36AF2F7862925', '<p>John谈生意，飞出去救人。</p>', '0', '676B826E86E54EE8B1DDDC8FD190BC74', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E0BC6BEEFF9B4461AB5D596F17E4E75D', '<p>Object中的toString方法际应用中没有实际意义<br></p>', '1', 'E85D40CAE492434BBCA76F3404531777', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E0BEA7FFBA4947A2A4759BE8D3EB9A97', '<p>内存回收线程不能释放内存对象。</p>', '0', '01C7A074D47A4ACCBE08BED40078E82E', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E0D00F33026B4A8DA74D6D399150E3C6', '<p>int a =10,byte b = 20; b = a + b;<br></p>', '1', 'BBA6C034844F4D2A94B5E112DE0EACDC', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E0EFC414A91E4F4FAAA72442AB3D56A9', '<p>通过invoke(对象名,参数列表)方法来执行一个方法<br></p>', '1', '30A3D30DECD144BB97AA52A01513D6A1', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E101647F98154EF9A4E6910376C6F272', '<p>在Java中，文件的输入输出功能是通过流来实现的<br></p>', '1', 'B9D64DEC92674AEEB98A1D34C9266E16', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E1188FE62CC94C5A8219489A0D7BA493', '<p>可以将字节数组转换成字符串<br></p>', '0', '3594B84AFBE84CA7B5EB04EB744A0113', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E11C3FCF38894C79A4CB52DD6161E8EC', '<p>double&nbsp;a&nbsp;=&nbsp;fun(1.0,2.0);</p>\r\n', '1', '0C9997D36DD54B168B960EC159815DF2', '2016-01-05 00:06:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E12BCBB8B7CC4A1EA88E7B2AA0472094', '<p>默认权限需要加default修饰</p>', '1', '813FEBFE81644A5FAFA2E072C6474F61', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E1308609553848D8A3023F474948322A', '<p><em></em>​TreeSet是哈希表结构<br></p>', '0', '1BDB4E7917E84F359A9EF2B8B9EEED07', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E1642F79C1FF40EDA8E8BBAB0A65C4FA', '<p>水杯<br></p>', '0', '8CD09E7AEE354B5986F896355F138795', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E17BC1352A014503AB273192CEC4A6FA', '<p>一个程序的第一条语句必须是package语句</p>', '1', '6E9B219ABDCB45929B5B2DA56C3B6359', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E1BA016960664978B4F6A59F8BE78C29', '<p>一次读取文件中的一个字节<br></p>', '0', '5AE300BAB3ED4B3497D889153F31478B', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E1D1F528A4A54F768B87267614547DF4', '<p>系数★系数的权次幂<br></p>', '0', '7C1CDDC0805F406D981C6B36FBF433D4', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E1D9A7A693214C3F88DAC4A540F5C025', '<p>Ctrl + S<br></p>', '0', 'BC98BD294FDB43BD990D0EFB8078A55E', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E1F0DD0842FD44F98931E1E9EFCEA656', '<p>正数的反码与其原码不相同<br></p>', '1', '973198C9ED4543FCA96EC7EA3F681392', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E1FD6A42EA354390A23BAC80DE56A004', '<p>以上答案都不对</p>', '0', '8A7E9A9E4E9140F7AF6250B16AA59E89', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E20B0068A70A4C2081D27CA00754CBAD', '<p style=\"margin-left: 40px;\">for(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;list.size();&nbsp;i++)&nbsp;{</p><p style=\"margin-left: 40px;\">if(\"b\".equals(list.get(i)))&nbsp;{</p><p style=\"margin-left: 40px;\">list.remove(i--);</p><p style=\"margin-left: 40px;\">}</p><p style=\"margin-left: 40px;\">}</p>', '1', 'B35F6BDEC67B4E10B5A979992B175D11', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E21DA1A23C964494AAF649D9DEEABD60', '<p>以上都不对<br></p>', '0', 'F9D20990860D414DA4E4E1F7B04D6F60', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E24CCFF9AD2242C7B0D1E68EABC11042', '<p style=\"margin-left: 40px;\">if (map.containsKey(ch[i])) {&nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;map.put(ch[i], (int) map.get(ch[i]) + 1);&nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} else {&nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;map.put(ch[i], 1);&nbsp;<br>&nbsp;&nbsp; &nbsp;}<br></p>', '1', 'F0BCFB0C0DC640B990467D6472937FAA', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E2694496A88D4679AF43BEC087EE7B88', '<p>getLocalPort()<br></p>', '0', 'DE9B7F867EE2467AAB50F96A440F3D06', '2016-01-02 21:47:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E27B73691A79498D8BDD63B8178ECFBA', '<p>通过StringBuffer的构造方法<br></p>', '1', 'DD60C385B16445F1931B6C34F5E3A771', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E27E04BF9D8544CC8FD10D89DEA4EC10', '<p>20<br></p>', '0', '1FB777DEC2AB4491BDBAFD1C22C66F5A', '2016-01-02 21:48:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E2A39B04054D452B98BB0C25F7B4FA40', '<p>执行1次<br></p>', '0', '74FDBB5D7BDD414AA3B230749EB17314', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E2CAC5CCBBA8450CBDC1630D140E5666', '<p>表达式2的值可以是任意类型，也可以是boolean类型</p>\r\n', '1', '9B5D75894C81487EA56A9955B9159CEF', '2016-01-05 10:29:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E2D3AD3F37B748D5A127EDFF5A9BD2A8', '<p>Reader是InputStreamReader的父类<br></p>', '1', 'B94EBBCF0DE948F794FBA83978CFF19E', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E2F16C81CDED4415A01E4EA4E6313810', '<p>public StringBuffer delete(int start)<br></p>', '0', 'B6A49BDDC51A4CF397E1C43F52F475A9', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E2F4AC169B2845CAB9536699FF5988DD', '<p>if语句和&nbsp;else语句必须成对出现</p>\r\n', '0', '30E0743CAF524C0685457F7EE88C5216', '2016-01-05 11:01:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E2FD0FF3CB3843378DE6B73EDF2F551F', '<p>爱你</p>', '1', '30E2F61D607D43FCA7B2D203D82452C3', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E319BEFF41EC467781F3A1CD431342B4', '<p>&nbsp;b<br></p>', '0', '784D14DF68E14649BE511EB95E19A470', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E32B2E26DA134FE78667CE19ACCA7F42', '<p>开源<br></p>', '0', '396CE78AC3B44CC4B6158FDB69A9DEF0', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E361739DE29A4AE9A42E2662BEB2765A', '<p>String[] args 以前用于接收键盘录入的<br></p>', '0', '00381D8AF4D14ACC9BD1B5A02FE67683', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E3A4539761B34C84B006D4188E721967', '<p>Collection&lt;?&gt; c<br></p>', '1', 'AD289B8E864743678E2885D95CCC40E1', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E3D61F6ADA9B47898C8CFF418D7C0A21', '<p>File(String parent, String child)<br></p>', '0', 'D673A54F40704922BD0286D2E93546C6', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E3DE9D540B2243358422C7B78FBF1687', '<p>FilenameFilter</p>', '1', '7685C4AD4A094391A34D3511AE072F58', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E3FA8B96ED3C4F88B5059BB8508510B7', '<p>使用Alt+Shift+S+C可以自动生成Student类中构造方法<br></p>', '1', 'FF25F22F71E4413F86B85CD668AAAE1A', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E40F888C980B4033BD2E544425CD4FB2', '<p>true true<br></p>', '0', '3962C2674C4A445394AFD8E290EB3F6E', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E41DB047015A4D72887B72437277B6A8', '<p>价格(price) 是该类的成员方法<br></p>', '0', '6AA23DF2F0914A0394513EB052C500A7', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E427B913D3554E4F93F3450ADA974BCB', '<p>true false<br></p>', '0', '5ACAC47FBE344D889A5C6E2C016B1153', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E4308334D65443BAB92C0C15EFBDEEF3', '<p>保证允许两个或更多处理同时开始和结束</p>', '0', '60E4ECA445284A43B1F902BE17E8DF56', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E44B3594207248218686E82756F77B8B', '<p>Integer类的 intValue()<br></p>', '0', '975765C75BD24411B5B779A0F6ACB87B', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E46931177D2D4885AB7C0F5AE2B5CE0B', '<p>Map</p>', '0', '0C5CBE3D8DDF46E281A0862052AE8890', '2016-01-02 21:48:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E48248BF9DF6435686B03573A76AD7E1', '<p>getClass().getName() + \"@\" + Integer.toHexString(hashCode())&nbsp;<br></p>', '1', '75E4611404A84B718E5FDA55092FF074', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E48CECD0B28D4391942282E833F5B7E4', '<p>执行java运行出错<br></p>', '0', '00897F9C7B324D32B9A7E283F4602F46', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E4AA023DC6B84C67BD10C2BC5B35F544', '<p>得到图形<br></p><p>******<br></p><p>******<br></p><p>******<br></p><p>******<br></p><p>******</p>', '1', 'DA5004A928AF4E9282094B04A3D69C22', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E4D4A01FD4ED49A49BF29483522D8CD9', '<p>嵌套异常<br></p>', '0', '70A6A9BEB41C48D0A1E316793F8C6301', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E4DA42F239434E60B45C0FEA0E3338F6', '<p>BufferedOutputStream bos = new BufferedOutputStream(“a.txt”,true);<br></p>', '0', 'BE14C78DB74B45B98795860138E63D83', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E4DDC36F76784CE78D6AD4F42BF1F900', '<p>for(int i = 0 ; i &lt; 5 ; i++){<br>&nbsp; for(int j = 5; i &lt; j; j--){<br>&nbsp; &nbsp; System.out.print(j);<br>&nbsp; }<br>&nbsp; System.out.println();<br>}<br><br></p>', '1', '192E56F8066E4D729E98AC1E1890AF1B', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E4E0E70F253943B3807DD89ED9D15F14', '<p>模板方法模式中必须有个方法作为模板，它定义了算法骨架<br></p>', '0', '86897709AA9E4E049FCD8D8E19EB5706', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E4F3434FBB104F138AE8DC4E95BF7D69', '<p>子类需要重写父类（或父接口）的方法<br></p>', '1', '760B0E3F38214009B32C614241582927', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E5268E0FAAC649E183666F4131433C18', '<p>存储的元素必须实现Comparable接口</p>', '0', '79EFB9A028004FD78E0172C1D10E333A', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E53232CFCA32408C9D8FCF25294BDB47', '<p>抽象类的子类要么是抽象类，要么是具体类，如果是具体类就必须重写所有的抽象方法</p>', '1', '4E965A2AACDB4C5DBC3B366338FC4F95', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E54F28AD22034767A997E2D9A53FEF87', '<p>substring(int start)<br></p>', '0', 'EC0F5C6702344101B4BE3027F137FD64', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E55BD8B142D6488DA6FD9F6270F46CD1', '<p>可以利用LinkedList来模拟一个队列的结构</p>', '1', '4CEED7721F1E403CAEDC40CA76136CD1', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E591225C93744F3CA0F15CFF2DB4310C', '<p>如果条件为false，运算后结果是表达式1<br></p>', '0', '021EA54393314F53B935CB6780D8F0A5', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E5C4E44A6164448E956EE79972AE957C', '<p>throw 异常对象<br></p>', '1', '2A73CD0EB61845F48B99141874D2BB7E', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E5C822513CA24B109B51D4EFFDF0A160', '<p>如果有两个类A,B。当满足A是B的一种，或者B是A的一种，例如猫和动物，猫是动物的一种，就可以使用继承。<br></p>', '0', 'B8257C4E694D4D92AE9E0D6F8727FB99', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E5E084C493D645249729C04EA3B02221', '<p>DataOutputStream</p>', '1', '786FF8D3E04D43B08B08F3810BCE9E9A', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E6013C091C594233B67DD5BD4B5D2868', '<p>SequenceOutputStream</p>', '0', 'E493D22E863643849AD408D19B0C6E82', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E60C72C7D37A4DD3A231B09173611463', '<p>返回值类型是boolean<br></p>', '1', '1B0B7BDF4F2D44F0A59E54240A227218', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E6189B72DDA543938148C0DB70B68670', '<p>向缓冲区追加字符串数据<br></p>', '1', '2F878C45E88947E7B097C5601AFA8184', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E62A14FF3EE34831A95545B18064ECD3', '<p>A类</p>', '0', 'C4866D79B1204FC6936BECD569B51A03', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E64290A28B7547639C89916058D27533', '<p>list集合里面只能存放Person对象</p>', '0', 'BF47B511F1FA4ABDACFE11DAD30C385A', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E68B5FC12908497C89D3F0C1FA4CA6AE', '<p>String是一个可变的字符序列<br></p>', '0', '2C43CC1C4D1E4373BF8F2932AF7089E2', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E696CF8C24A8490D9D1AB6435A325B20', '<p>一个源文件中只能有1个类<br></p>', '0', '4B8EE8199AA543C8A168C7D7E14ED783', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E6C321E82AF845E4B8C677B1A0E1F091', '<p>return&nbsp;1;</p>', '0', 'A7BD754E6F6A4E4EADAA39E35EABC17A', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E6E69DF0E42A408C87DCC09F2133E676', '<p>arr[0],数组中没有这个元素<br></p>', '0', '1C0C0B2696524EFFB6EBC9F4C62563E9', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E6F0624031764301AC580CDF7AD94176', '<p>readObject()</p><p><br></p>', '1', '75FDCF83B5864E2C94E3A434D9BE535C', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E6F2DD8CB825475AA5222AB1124005CD', '<p>0b10010010<br></p>', '1', '8E0656F4C648464F955A1F1397EA26E1', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E6F5BB5BEACB462C814EAA5FDFC0ED90', '<p>此方法一次性写入文件中一整个字节数组<br></p>', '0', 'D72D6374D0A84E4C9F9D56B4703DC4ED', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E720932F9D764D5891000C2AA7DF0FD2', '<p>while(true);<br></p>', '1', 'E12729C58134468184A5EB870BD048FF', '2016-01-02 21:48:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E72BA43D4A504BC3BA900B39F73BBD9E', '<p>create()<br></p>', '0', '1EBE1D9532B846A2B279F761A3FFBD2A', '2016-01-02 21:47:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E7322E3A221D4A698C48E395544331B9', '<p>this用来区分成员变量和局部变量同名<br></p>', '0', 'B004E97AF3684BC7957CE2CE6B3C6F29', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E748259C3193412D9C22E69B1AB27F98', '<p>运行错误<br></p>', '0', 'D072049C8C034D4491432EA58735B4C3', '2016-01-02 21:47:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E74FA6A5470544168DB7FE97AF8930A0', '<p>write()<br></p>', '0', 'EFFFA7A3C7D4439E9ACB8A91C58CB8BA', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E76D93C1684A4A40B195CF358E0E25A4', '<p>以上答案都不对</p>', '0', '70960B5A0F474ADBA008B51B72CB209B', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E78FD23751C2422F9C2E451AA86907A4', '<p>将会由重写的equals方法判断是否达标</p>', '1', '73047572C7644AEB8FC9503F8E65DCA9', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E7DBC29D11AB4ADE8C23E988845D884E', '<p>Arrays的asList方法如果想把一个数组的元素当成返回值的一个元素时，那么数组不能是基本数组类型的数组，只能是引用类型的数组</p>', '0', '43EA319D8CE04500B43BB2FBA8B36C0E', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E7DECDA674194499B056DD32C5623A2B', '<p>&lt;&lt; 右移, 左边最高位丢弃,右边用0补齐<br></p>', '0', '73175E9E137A4486BDB17BAA2BE0C394', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E81512823E864310852DED5A8CE5B0F1', '<p>FileReader</p>', '0', '5B39CC05EBBE4AEFA53F69D79AC31BA8', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E828631631C34BBC92F5EA547BD837A5', '<p style=\"margin-left: 40px;\">student[] students = new student[]<br></p>', '0', '2C5BF2B0184A40FEA0C066A9058E6F28', '2016-01-02 21:47:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E8342476245F4FF6B2B10BC44239A5F8', '<p>Runnable</p>', '0', '27EB767D8B51453CB21E8C05B813330F', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E8382085C8F640F78765288BBD5DA06F', '<p>!逻辑非：非false则true，非true则false<br></p>', '0', '7432E8CC7F344DED9CB52A709EAEE68C', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E84E9E61E76C4162A369E7CD4539887A', '<p>true true<br></p>', '0', '5ACAC47FBE344D889A5C6E2C016B1153', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E859F5DD06664D69A7005EB1F9CEFEC8', '<p>局部代码块优先于main方法执行<br></p>', '0', '378C1BB9E1BE494A8139D7F8323F8A32', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E85AF461C12340ADB56876AFAF9B5AF4', '<p>获取集合对象<br></p>', '0', '9432D0FE7E164BC6ABC8AD6EA7998CE1', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E86186F2320D4CB2BA03F616CAF2A511', '<p>猫继承动物，在动物类中定义catchMouse()方法更合理，这样所有的猫都可以直接继承这个方法</p>', '0', 'A7836608D1E64786A4D85234C5295403', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E8694C240B56489ABC3947F4D4E0CCB4', '<p>$world<br></p>', '0', '5163DBDAA61D403FA64CAADC30589FC2', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E890DEAC44284CFC9C79F6E1971F7E67', '<p>JAVAME小型板<br></p>', '0', '76B14F01291D4AE09A9A4927AD4F0E1D', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E893D42B5035447EB6859754C63F6304', '<p>c:/妖精的尾巴/夏向露西表白.avi<br></p>', '1', 'B4445D2E69B04FD59F65D3D5BBD5D50E', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E899755F1D7D43E6876C9963385128E8', '<p>Thread</p>', '0', 'DDB499346C3541349E943B26C74E6BA2', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E8B6B0D2AFE44769B9C188E0B56E4018', '<p>true true<br></p>', '0', '783E2928317C44178864F84BE2776A51', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E8F73A4BCDB14C588D3EF78D71AC434E', '<p>格式错误，因为Q不知道是什么</p>', '1', 'F013B232A4F24439B78AFC7C747053E2', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E90331F0EE374175A132F2038880A6D5', '<p>mkDir<br></p>', '0', 'BF68B1AE0B614A3EB4549DE393EA849F', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E92D1141CA964F2483CCC4A2EEFDD25E', '<p>子类中所有的构造方法默认都会访问父类中空参数的构造方法<br></p>', '0', '4A82737752DE483AA349A1C8F69AF539', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E958089A54CB44F5BE85A8ADF056E875', '<p>构造方法名必须与类名相同<br></p>', '1', 'B981F6DAD9A940E2A34A6B943FB73FC4', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E9779EC3371E414787DFA1FF73B3730C', '<p>释放资源的代码应放在try块中<br></p>', '0', '78690A146BD14FEF922F73FFB7F2B4DE', '2016-01-02 21:47:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E9980801C72E4541A0EEAB981DF661AC', '<p><em></em>​hashCode():&nbsp;属性相同的对象返回值必须相同,&nbsp;属性不同的返回值尽量不同(提高效率)<br></p>', '1', '1D27400B24294D5483ABACEA7527475B', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E99E5B536E054064B0914F5E303D549A', '<p>System.err</p>', '0', 'D7C9C9F9A18347739E33E66F88405FB1', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E9B0CA55D39048B19C9FD49AC63CB8B4', '<p>静态变量被所有对象共享，所以即使创建多个对象静态变量也只占用一块内存<br></p>', '1', 'B6D9EF7FF95A4E9D85EF00C6888A59C1', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('E9B99309C5574BA3A3D4E68C91E33594', '<p>&nbsp;new&nbsp;MyRunnable().run();</p>', '0', 'F9340C57509444A9AE46E15B4EEAD30F', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EA02A678067E47DA8E0CE0244A2C2B64', '<p>字典顺序:按照字典上字母由a-z的排列顺序</p>', '1', '4C2A73111D6E416EAB9047FF3051521E', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EA07614072E848FB8C7872F2C2757B5D', '<p>List子类对象可以存储的学生类对象，实际存储的是学生类对象的地址<br></p>', '1', 'D38D5E17D79C4BB7BA018C0FC93996E3', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EA1EA2B0ADFC4755A7421521418B0240', '<p>多态的好处其中有可以把父类引用当作形式参数，这样就可以接收任意的子类对象</p>', '1', 'F9C9E3F1CC4049808E592A3A6DA32E59', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EA2E2B6910C84F3FB90A39C725FF19DE', '<p>&nbsp;setPrority</p>', '0', 'EA0C77D893244729AA6C38CBC9DE7EBB', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EA348A9DD49A4115B57B3CBB7C0F9104', '<p>返回值是void</p>', '0', 'DE265D253B9F4F8DA1BF8173BE460D09', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EA3E343042994BA4B98A79B34BF60C4A', '<p>Eclipse的Outline只能显示类中的方法<br></p>', '0', '1871BE8CAFCF45989ADF9A9F8EAAA4E4', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EA3E4C211B374F6A9DE09FDBE6E6827F', '<p>&nbsp;public&nbsp;class&nbsp;MyRunnable&nbsp;extends&nbsp;Runnable&nbsp;{&nbsp;public&nbsp;void&nbsp;run(){}&nbsp;}</p>', '0', 'BA3977A084B145A5BF09684B51B62246', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EA3FC181B63A4715A857505CB4721284', '<p>小型笔记本<br></p>', '0', '1F144C304C6D46DBB9E559D2E4BBA481', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EA4A6A8E749541A7BDA62CA21C146820', '<p>抽象类有构造方法</p>', '0', 'C7DA23A6A4BA42C8B35BA4970157756D', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EA5FEAD22364444AA0409B9DCF001C1C', '<p>true<br></p>', '1', '25A2881255F447F4A07944DBEBDB5677', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EA6DDE9CFB3A418DA1CCB89193F1515C', '<p>静态代码块优先于main方法执行<br></p>', '1', '378C1BB9E1BE494A8139D7F8323F8A32', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EAB7A75B789F4D699506F16784C48445', '<p>false &nbsp;false<br></p>', '0', '54EE8161EB9D4BE4B957C6893CA832C4', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EADAEFAD7FB64FDAA74494FA30C71D64', '<p>此方法没有返回值<br></p>', '0', '12E6DB0B3B644FDC950D4CCEA0CA93CD', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EADBAD28797242A7BA9DEDFBA4930055', '<p>效率高<br></p>', '0', '6A4FE26E975A4078BE9413A5335FF96E', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EAEAB52F8EAC4ACF862A338B3FACDB75', '<p>for (int i = 1; i &lt;= 5; i++) {<br>&nbsp; for (int j = 1 ; j &lt;= i; j++) {<br>&nbsp; &nbsp; System.out.print(i);<br>&nbsp; }<br>&nbsp; System.out.println();<br>}<br></p>', '0', '192E56F8066E4D729E98AC1E1890AF1B', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EAEC5F85906D4A68A87E4550516F63F1', '<p>一个程序可以包含多个源文件</p>', '0', 'D2B57A01A9774F96A298B625391C427E', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EAEE195EAE3C4BBA9F935B65985718F9', '<p>next()方法将返回集合中的上一个元素<br></p>', '1', '0969B6C5716B4F1ABEC65C7AE62E9A0E', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EAF7E62F4BEF436AA4C32B42EC6795A0', '<p>所有单词都小写，通常以公司域名为地址 如；项目名称.itheima<br></p>', '0', 'F3A9105F84FF4B619156FD271A5246E8', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EAF9CCE9FDDC43BAA86842A031C21764', '<p>一个可以使用正则表达式来解析基本类型和字符串的简单文本扫描器。<br></p>', '0', '10DEC256C8D84F0EA9EDEB62BCBE01D4', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EB0B7378F65A4123A894D411B368199D', '<p>.jre</p>\r\n', '0', '5C193B5B31B3474C9B3DF2399A0DC00C', '2016-01-05 10:51:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EB0CF6EC98B54CE99CBE38E569D87E50', '<p>可以定义一个内部类，实现Comparator</p>', '0', '8A3657F552B745508414D17A3C6CC13F', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EB17AC7435C947AC9BDFE13F27C9491C', '<p>System.out.println(4 ^ 10 &nbsp;&amp; 10); 输出结果为10<br></p>', '0', '337556C3125C4549BF2B6D566AC19D17', '2016-01-02 21:47:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EB294FC8025D44C38BBC2BB43CD10CB9', '<p>TreeSet如果元素实现了Comparable接口，同时传入了Comparator，优先按照类中Comparable的顺序</p>', '0', 'F900394C5F5A4F54939C0CBE54C29761', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EB454CBF298B4545A15DE0F37F2D72DE', '<p>InputStream类<br></p>', '1', '5895335F73064D669D62BB222B4E288B', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EB612039A20147259E20BB8FDEFA685F', '<p>判断集合中是否还有下一个元素<br></p>', '1', 'DE3E588268E544EDAC25B5FE6768DDEF', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EB6CBA114BBA431DAEF1B387F0CEFC08', '<p>Math.pow()<br></p>', '0', 'C6645ED07E5E43D1B02026C53C642B76', '2016-01-02 21:48:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EB71C753DB5D4BBE91641AD5A1175F72', '<p>substring(String start,String end)<br></p>', '0', 'EC0F5C6702344101B4BE3027F137FD64', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EB7490BC10CA492DB4B0318D6E0829AF', '<p>compareTo()<br></p>', '0', '74AB41356CA14C88BFFE6D2188ED6E37', '2016-01-02 21:48:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EB7AB627CAE7435C99176B0E88AEADBA', '<p>类中必须有成员方法<br></p>', '0', 'A327EF48F62A483BBC718FB369E43458', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EB7E606D536F474AB6C2968038BA8AE3', '<p>去掉Tool上的Q，可以用String来代替</p>', '0', 'F013B232A4F24439B78AFC7C747053E2', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EBA0DAAA40EC41F3BB8F89BF989E1207', '<p>自动生成compareTo方法<br></p>', '1', '24CDF9D0EEF14C1BAEA0F6175302FFD9', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EBDE6BE59D8748AF9FA42C1BBB9CB142', '<p>HashMap</p>', '1', '76408DB7AA0D4B369FFEAB1BB73AFA4E', '2016-01-02 21:47:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EC063ECF416D41F69F6CB44DA974D617', '<p>for (int i = 0;i &lt;= 10 ;i++ ) {<br>&nbsp; for (int j = 0;j &lt; i+j ;j++ ) {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp; &nbsp; System.out.print(i + \"*\" + j+ \"=\" + (i * j) + \"\\t\" );<br>&nbsp; }<br>&nbsp; System.out.println();<br>}<br></p>', '0', '8AC88875E657410DB0ED8DFFD648A386', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EC330AF9FF5A4F01895B708AA97A67EA', '<p>成员内部类可以加private修饰</p>', '0', 'A01B816D6C0A473D8CD780F5518299F2', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EC49EC43A996446087E6F2A0CCED4CAF', '<p>false false<br></p>', '1', '65B39DA3D5B34693880C941359DDCB3A', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EC6C1C43E25C439D9F1FFE08B395E806', '<p>private&nbsp;<br></p>', '0', 'B1E63AA97DFB4DFA97A5940294394DAA', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EC7ABE51B59948E3AB399E926422D576', '<p>封装提高安全性<br></p>', '0', '20175B40D4B14A0DA895C28F3AA1923A', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EC856389DEC54D61A51A45B1430CED50', '<p>乘法运算<br></p>', '0', 'AFC04DA743EE46A68DD50A0270409C36', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EC97D4F3A7394EDEA08E80148CDC4323', '<p>能用字符流的地方都可以用字节流实现<br></p>', '1', '42156B65734C458EB56B59297A7615C0', '2016-01-02 21:48:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EC9CBB4872084529901ED14D9DBBC8F1', '<p>NumberFormatException</p>', '1', '8C5CAC4A30FF45C4AFE115782F8C0145', '2016-01-02 21:48:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ECA5FD69CB5B42AC9CA7D0D003565117', '<p>面向对象开发, 就是不断的创建对象，使用对象，指挥对象做事情。<br></p>', '0', '3D8FCCCE165E488FA2BD34F2DBCD6A80', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ECC8D01CDD244A7FAD04BF3092DE21DE', '<p>Eclipse下的程序中的红色波浪线代表错误,必须处理,不然无法编译运行<br></p>', '0', '5C8A4D37B9614A8F8038BC73405DBB04', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ECCE4C639C9747629B1744C5A061BECC', '<p>可以出现在非抽象的类中</p>', '0', '088E65967C914A588E8CEB142443A326', '2016-01-02 21:48:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ECD5004AC2AA48ADB88C4F3E1EA25152', '<p>自动生成hashCode()与equals方法<br></p>', '0', '24CDF9D0EEF14C1BAEA0F6175302FFD9', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ECDF26F61044402DAE3C979FABBFE5BE', '<p>Eclipse在调试的时候可以使用快捷键<br></p>', '0', '59F7BF9A637B45ECABCE864AD03E1C10', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ECF34B14D5C745F589801C8A12500BB0', '<p>就是类中的方法没有什么特殊意义<br></p>', '0', '6045FECE4B5A45C9AC20DA97721F9B8D', '2016-01-02 21:47:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ED0D0082A053489BA698CECD0BA7008A', '<p>1;<br></p>', '0', 'D072049C8C034D4491432EA58735B4C3', '2016-01-02 21:47:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ED10B57FE710408CA71A19BFFA8EB24F', '<p>可以通过反射绕过泛型检查，因为运行期泛型根本没有用<br></p>', '0', '4710BBC3C4474A9687DC8788182F67B7', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ED1B55286A1E40FAA6801E7C17E235CC', '<p>System.setIn(PrintStream)，用来修改输入流</p>', '1', 'AD231382B0D443668FF1125DF016562C', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ED20577436EF443B935A7FF7733BBE45', '<p>userName password 3<br></p>', '0', 'D4DE6C245A9440E7A684062758C9C347', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ED4F84915A10483B96F561DBCC8225BA', '<p>1&nbsp;<br></p>', '0', '7FB057108FD84745BCF20A2A114D6872', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ED7672AD1D06451DA05FC62CF0E57DBE', '<p>getLength()<br></p>', '0', '2070C53ECECD4956AD117A097BCFC1EB', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('ED8708E68E06476094B468AD9E09CAE7', '<p>ObjectOutputStream流是将对象以Object类型写入到文件中<br></p>', '1', 'DBEF0A429C86455EA9EACB2E98F4EDAC', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EDA75F7C5FA049EC8A674F337A59AA4B', '<p>mkdirs()</p>', '1', 'CB8F89FDA6D94D199548C3ECA0977F93', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EDB9E6E492C2441A91A6C8A01EA0F770', '<p>zi zi 10 20 30<br></p>', '0', 'B93900F368D3426582BF764055F4B820', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EDBDC606EA164C6F841C9B7C00D9A656', '<p>java基础自测题.doc<br></p>', '0', '0B4FD060189A4B7BB285C9A375F22E21', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EDC04FCB92E945EA97C3D5DAD397CD8C', '<p>new&nbsp;Outer().method()</p>', '0', 'E7FF18CD2F914A7489A76964CF88787A', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EDC0B0ACCACE415B926D3A6535D47C35', '<p>getClass().getName() + Integer.toHexString(hashCode())<br></p>', '0', '75E4611404A84B718E5FDA55092FF074', '2016-01-02 21:47:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EDCFB5DF2BC94031BEF4EF9B2A9C4945', '<p>泛型的出现可以把运行时出现的问题提前放到编译时期就发现</p>', '0', '2C416F37A6994C14B3D87C469DAC3D8A', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EE0B02CBAF2C4019B16A58E412608E88', '<p>Eclipse可以帮我们自动导出jar包<br></p>', '0', 'D50355B184A74EAFB20599199DC3C329', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EE10CA480A304054BD92375DE920EE92', '<p>如果一个类含有泛型方法，则这个类必须是泛型类</p>', '1', 'B4D4DDE23A774B88B59CD3AAF6AC50EE', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EE3EB42EE37040CBB3CB90256CF6CF22', '<p>老师和学生都是Person的子类<br></p>', '1', '961962CDF579482D8DE35AF3DBF31BFC', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EE4A54E072B9443BAFB3608AB4670903', '<p>length()<br></p>', '1', '2070C53ECECD4956AD117A097BCFC1EB', '2016-01-02 21:47:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EE56B02BE4B640C0B0E78B0C0F3A805F', '<p>运行错误<br></p>', '0', '156E866F773E4BAD84432DAF8EBA9C58', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EE64011012E04F3EA885D7CD0DA44836', '<p>一个接口只能被一个类实现</p>', '0', 'FFD83203F8D84B398B12F29349D27B0B', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EE69BAD3EB244A9DA040CC44D0215D50', '<p>//.<br></p>', '0', 'C830253B6B7848AC9B8F0FDA92C4A022', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EE718078CEDA4431B93E9B3049C6F7DF', '<p>&nbsp;Callable可以返回装载有计算结果的Future对象。</p>', '1', 'E39B53EFE30E439CBE770B296562C2F0', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EE7C3FE3B49D49CBA4FB6CABA8FF98E9', '<p>canRead()<br></p>', '0', '830CBF1972EB42AC80B957B23A06296B', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EEB5126293A14274939956DC19201217', '<p>栈是一种数据结构</p>', '1', '5DE260DDA01C460499AD950A91F41948', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EEC36F9BAAD64D4C8BBECBA03872E6AE', '<p>以上两个都对</p>', '1', '6BA9A5DC09074B8088BC24921E038050', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EEC3E7DB88284F319A0B08DE0207B82C', '<p>public</p>\r\n', '0', 'AC5BA8E858B44799AB598A128F9FEC2C', '2016-01-05 11:11:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EEC798F65B9C46DDBCE8F65E339FDB26', '<p>可以使用阻止循环等待条件，将系统中所有的资源设置标志位、排序，规定所有的进程申请资源必须以一定的顺序（升序或降序）做操作来避免死锁。</p>', '0', 'EF20A1F2C88947A09F8FAEE12B66E8EA', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EEDBBA964C7B400DA565DF35948EEF80', '<p>Student [sno=, gender=男]<br></p>', '0', '71B1BD5CC78744DB82CE4AC38EF7D6AF', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EEDF3EBD86DA4EE0A9B2A970136FF98C', '<p>fu zi 10 10 30<br></p>', '0', 'B93900F368D3426582BF764055F4B820', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EEE13FC2EA114D5AA3F09AB0867ECC76', '<p>? extends E<br></p>', '0', 'B7EC491B45DF45B08BD24F050C11E29B', '2016-01-02 21:48:45', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EEE533E4DA2E48B992B67AE7F38EBEC3', '<p>HelloWorld<br></p>', '1', '00897F9C7B324D32B9A7E283F4602F46', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EEE6B6B05BDD45578D014A52C490393C', '<p>同步方法也存在锁资源对象，此时的锁对象是this或所属类的字节码文件对象。</p>', '0', '474C9456A2D04ED29D8C2EDCA8B46124', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EF03B5DAF53C47928445ABD8E71AF93A', '<p>编译报错</p>', '0', '75F9C09FBFCF4CC1B636D38EBD5E377C', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EF3AA7E6CFFF45A1AC4B62A107D73B58', '<p>toString()<br></p>', '0', '8DF1BB6A6A7C4B32800826424E607400', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EF42486E1C9E434C8375504A3760F3DD', '<p>只关闭流<br></p>', '0', 'C37EB787F1314BEB98DC5DCF0DD682AE', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EF47719C315B4531977500BA1701BA22', '<p>2</p>', '0', 'D6D6796525174C03A446CEFC57093B0F', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EF7A4794E207498A8B1249D2661AA2A8', '<p>read(byte[] arr)<br></p>', '1', '8D239F6A1D3F400EB9B0C583E9582508', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EF91C30408114F0D9AECADF9B982A57D', '<p>“”<br></p>', '0', 'C720674C0FF943B8931BA0A155B188F5', '2016-01-02 21:48:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EF93BF6676954C30A4DCD47ABF9A10DA', '<p>不可能有两个对象的引用指向同一个地址<br></p>', '0', 'B95A2FCC46DC4E41B4B43A6BE35E0BA0', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EFD421619EBF4E849BF37420C1DEC204', '<p>以上都不是<br></p>', '1', 'AC77607FFB684A25A91139B91974BBEC', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('EFFC8C668CC74A8BB2DAE715A4401E0B', '<p>以上说法都不对</p>', '0', '9AC1FEAD999E41B7AA8BAFCE586A954D', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F0154F8A56AA480E85C20CDCB23EB231', '<p>具有getValue()方法<br></p>', '0', 'C7DBA0E790634060BA8E48F26C438FAB', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F01B650BD528474EA4A99457581AE5A1', '<p>Eclipse行号只需点击代码视图的最左侧即可<br></p>', '0', 'F4F64204867443F6B7BAB2FA70C00131', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F026A52DF82A4103B8BFEC4DC093571B', '<p>去除字符串中的空白<br></p>', '0', '6AECA4D395874C1DA874D0C88C1A7AE1', '2016-01-02 21:48:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F03ACC343AD64F9E98D36CFB11143B12', '<p>Eclipse下的Console视图关闭了,我们可以选择Window下的Show View,选择Console即可<br></p>', '0', '463A6CDC865A4AFC8944ADE30CC4B04A', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F04608D2C355476AB34E5CE543BE5688', '<p>底层都是采用数组结构</p>', '0', '6DB438E43B7D4B4493A4DF8BC65A09E0', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F05175873EFA4A8B86A53E104029E5F8', '<p>集合和数组都能存储基本数据类型和存储引用类型<br></p>', '0', '84C4F3C13BCD4BDA90E2017CA9EDD8E2', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F05684803E81418DA3B126099114097E', '<p>编译报错</p>', '1', '993C39252AC244719040FDC5CF7FAF68', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F072BC2C0E0A4CCA87A41A50F68013B9', '<p>迭代器的hasNext()方法返回值是布尔类型<br></p>', '0', '0969B6C5716B4F1ABEC65C7AE62E9A0E', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F0770C9CE949488DB39FB48B1F777C9C', '<p>String就是StringBuffer<br></p>', '0', '2C43CC1C4D1E4373BF8F2932AF7089E2', '2016-01-02 21:47:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F08A63A401804A89B3E3DECC7EC9E55A', '<p>窗口里面配置<br></p>', '0', '63CD6355C720440587CD2CD2A10C85C4', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F0CAE632A7F8497A977FDBD0C51475FC', '<p>底层是数组数据结构<br></p>', '1', '6A4FE26E975A4078BE9413A5335FF96E', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F0E0BDD4C29F4B95B428251E39BAF47C', '<p>ReentrantLock与synchronized功能一致，可相互替换。</p>', '1', '28A73EF55D184D5EA1A987DB11DB85FF', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F0E2141BDE164FBCB1039E81995B263D', '<p>所有的数据都是变量<br></p>', '0', '7406034D5EE64C8FB1E2F7AAB8330479', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F0FC034F2E7D4836A177C4289932E433', '<p>Alt+Shift+L可以抽取方法<br></p>', '1', 'A02BDEB5F5CF41BDA3FEF20195D15152', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F10115A4DABF45F6B512110B6A9354BE', '<p>对象的属性肯定有值<br></p>', '1', 'CF1F2A699D204A4EA6A220E8024BEB0E', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F103598507D74E249EBDFAE744D23C9D', '<p>arr1[3]的值不存在<br></p>', '0', 'AE1170F6E882483EAE0861501243FE82', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F106C03AA3EC43D5889FF5DECF64725E', '<p>Runnable&nbsp;</p>', '0', 'DDB499346C3541349E943B26C74E6BA2', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F10AF75598E243308293684819B8FDE8', '<p>在线程A中执行线程B的join()方法，则线程A等待直到B执行完成</p>', '0', 'DBE23E3CE6D04E4DB47556C816E58864', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F11CAA3A04E042098A7A7EFCBF6E5050', '<p>Reader</p>', '0', '1BE12F8B802B4621BF60F5D3D05F0D73', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F129F4B26F5949A0B11E0E05D2C8D03B', '<p>内存回收线程负责释放无用内存。</p>', '1', '01C7A074D47A4ACCBE08BED40078E82E', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F1343A95EF6645D084DB0A4B9ACF0D2B', '<p>实现一个泛型接口时，类上面也必须写泛型信息</p>', '0', 'CDF0A91CB25D402087422CB8EF9B441B', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F148500537B14DC3BE56D5C3DB71EEBC', '<p>2+2+2+2+2+2+2+2<br></p>', '0', '30751AC1CA3B4F27B32085193F56732D', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F15DF206F92E49C2A07D1CEE30C2A455', '<p>while循环判断一般不明确循环次数，for循环的判断一般明确循环次数</p>\r\n', '1', '1219DAFEA6724A5DA10B6474B81430E1', '2016-01-05 11:13:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F17D98191B5F4B97B965DEFB1E08920D', '<p>new&nbsp;Thread(new&nbsp;MyThread()).start();</p>', '0', 'A6D87F19B4C7479CA45F91BBF498F78E', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F187E5F7536C49CB847D5A42BE7CD509', '<p>抽象类不能实例化，是因为抽象类没有构造方法</p>', '1', '91266B7CA73B4612BFB1D9F28956C1C9', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F18A7B2588584CDB89F42111C7B92E55', '<p>每次创建对象都会加载字节码文件<br></p>', '0', '1FCE0BB2F27348CFA2D9EAB10980038D', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F1BD0570856E4B33BF5DE87C5D660BE6', '<p>ByteArrayOutputStream<br></p>', '1', 'E0CBD172F7544F0B8F9967B9B6F41B6F', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F1C4FE3B86C0412686AC4D0BFD88FFA6', '<p>1<br></p>', '0', '52BD95F3B56347EE99DE157900D2128F', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F1CBF0F9E2CA487294AC428618C68D3E', '<p>编译错误<br></p>', '0', '3E9665E3DA3044A7B21EEE97452696A8', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F1DA3F7AE6634B0899622CD5DFFC7276', '<p>RuntimeException类<br></p>', '0', '33161A15F3F841D6AD885A853228FE9D', '2016-01-02 21:47:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F1DA6A03836646748D454EA55E906D35', '<p>Math类的所有静态方法<br></p>', '0', '975765C75BD24411B5B779A0F6ACB87B', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F1E9C8A3C61D40439921B278CF13F006', '<p>先刷新缓冲区，并关闭流<br></p>', '0', 'C37EB787F1314BEB98DC5DCF0DD682AE', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F200E45DAD7D496287FA3AE883A99B35', '<p>截取索引从start-1到end-1的字符<br></p>', '0', '328DFDBB71764E95BE1C7F5CF17E38F0', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F20B72FB665D47EBB797DE13BA5F1E4B', '<p>A&nbsp;method&nbsp;B&nbsp;method</p>', '0', '75F9C09FBFCF4CC1B636D38EBD5E377C', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F20BCC218B7B45B38681757E4A1465B4', '<p>FileInputStream fis = <strong>new</strong> FileInputStream(new File(\"双元.jpg\"));<br></p>', '1', 'F9CD2181E4DA4EA5B6E3930CF18E94C6', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F2393D89B8644B9CA388010212DD59DB', '<p>方法体为空<br></p>', '0', 'E199B51ED8D7436ABCBC47BFAF515825', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F23E981C1EC04F3EBA26434B983E8563', '<p>学生考试答案.txt<br></p>', '1', '0B4FD060189A4B7BB285C9A375F22E21', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F254D62817CF418093BACDD49705FB49', '<p>default<br></p>', '1', 'B1E63AA97DFB4DFA97A5940294394DAA', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F264B4B21CDB4BD9A9026AF5CAE6D8B2', '<p>15<br></p>', '1', '1FB777DEC2AB4491BDBAFD1C22C66F5A', '2016-01-02 21:48:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F26B99F6E29B413D9EB5C1B278CC73DC', '<p>32</p>', '0', '47F83E0A130743B7A82307BFB89CDC48', '2016-01-02 21:48:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F291C5D250E84142BCA259B8A4EBA188', '<p>new&nbsp;MyThread().run();</p>', '0', 'A6D87F19B4C7479CA45F91BBF498F78E', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F298EE95B10245E6B90D500FC655D477', '<p>就是随机写的<br></p>', '1', '8A8D43DD798849E6A3BEBDA063EEBC25', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F29B0DCE892F491488CDB91CC153FA29', '<p>一个类如果没有写继承，那么它在创建对象时不需要初始化父类<br></p>', '0', '916D511C49184BD182E2138EF748B917', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F2BB4D184D8E4D928D2504A5FB066C5C', '<p>在同一个区域里只可以定义一个变量<br></p>', '0', '61D46B50A90E46DF8BA35FCC5F8F2015', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F2C1106ED8FA453299F1A2A2B60DE027', '<p>定义成1024的整数倍方便计算机计算<br></p>', '0', 'B373D4F7C8AE4D55B5B2EA8955A474FC', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F2DEBB208C0749739F78D09DD2AA2163', '<p>用java编写的程序来拷贝文件<br></p>', '0', '4075D5322C2B441D928A1E40D456EE19', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F2E7C757738144EDB8C175F0769CC2EA', '<p>断点可以加多个<br></p>', '0', '76B5E33B8CAE4BFF9AAB27B328F99122', '2016-01-02 21:47:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F2EEBE77966B4B49AB1D93111602B7E4', '<p>OutputStreamWriter fos = new OutputStreamWriter(\"copy.jpg\");<br></p>', '0', 'DED238E982B3409BA7E2767A01A90E29', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F31400318D004616A944489B7D3464BF', '<p>getPort()<br></p>', '0', '3CA9A912222A4EF6B38F4C23582285E8', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F321352C3A3247F390B349D3586338CB', '<p>多态的好处是可以父类引用使用子类特有的属性和行为</p>', '0', 'F61953694CE24E6B99668FCA1FE615BC', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F32C6EF9BB8F4279B0E2CD3D21C2F01C', '<p>@<br></p>', '1', 'FEFAB71B3F2C499DAE2CA8076F1BC0E9', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F33964E280B24001BD6FABA7F9917757', '<p>System.out.println(!!true ); 输出的结果是true<br></p>', '0', '2EC24E4721784A96BDA14C19599D976E', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F33DC4A23FA44EF19105977AF01D47E9', '<p>String类的valueOf()方法可以将任意类型变成字符串<br></p>', '0', '2EA8E15740084D309085376DC7913C8A', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F343382B7167479FBD437E8F4A32819C', '<p>lib目录下存放的都是一些头文件<br></p>', '1', 'CBE5220D07344E00A659917DFD9CBB58', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F34D4D4EFB324DD882219866DA93CA26', '<p>删除工程可以从工作空间删除,不会在本地磁盘保留<br></p>', '0', '47059212E46F4BC7BBB09F587418328E', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F35001437BD64CDE8C3263F085B89231', '<p>反射可以获取类中所有的属性和方法<br></p>', '0', 'F11B456C93F444F1A347EA1E79E7FBC7', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F365809A1AC34CA3A93E47FAC3049DB3', '<p><sub></sub>private<br></p>', '0', 'BDF906495C89420D8FE41DB2ABB35FDF', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F3855C523EBA415585CC9ACDFD67EFB3', '<p>子类的成员方法一定比父类的成员方法多<br></p>', '0', '11CFABFBD4B24275A59916CA4A4EE08E', '2016-01-02 21:47:44', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F388342595C042739D5C23D144B3BA1D', '<p>hashCode方法会根据本地系统资源生成哈希值<br></p>', '0', 'AB80429ED70C4A45916CE9932CAC8E30', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F3932D194E8042C4ADED2D2D5113F688', '<p>Collection体系<br></p>', '0', '2869700F7F8447529486E00C338F28E5', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F3A148BFBE24469CAB6002B7024AD1D0', '<p>==和equals都可以比较基本类型的数据的值<br></p>', '1', '69B956F2AF6A4DE9AFD7EF106E672FC0', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F3B34B7A12104863A686399AF7136CFC', '<p>在堆内存中开辟了3块空间<br></p>', '0', '3B4943BA3A69445F9E93E7D526925372', '2016-01-02 21:48:20', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F3BEE826221A489AA8FE04C728E50E32', '<p>方法重写与返回值类型有关,返回值必须一致<br></p>', '1', '68D5B554ABF84DBFB8D3E32E8CC5B3BD', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F3C774DD09ED4DCDB06AA4AD09F2A259', '<p>read()</p>', '0', 'EFFFA7A3C7D4439E9ACB8A91C58CB8BA', '2016-01-02 21:48:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F3D04DB42DE34A47A3A0863E5DDA9743', '<p>Java虚拟机的启动会启动多个进程，这些进程都是多线程的。</p>', '0', 'ABEF0B340EC44077AD6C2CEA6561C10F', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F3D28D18CE2C42F88529BD0A84159E60', '<p>fu&nbsp;method&nbsp;zi&nbsp;show</p>', '0', '37F2ECEE038043979CE8C2DA2E9105DE', '2016-01-02 21:48:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F3D2C33A94824ECE96A216C71DDE3B69', '<p>InputStream<br></p>', '0', '4B4C72449AEA4C26B147B90D9D21F282', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F3E7BE86365F42ACBEE1775E41EF5977', '<p>return是结束方法<br></p>', '0', 'D5CA68DAC00C46709D7913CC0252068C', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F3E8036E61464074986163BA0F88E05B', '<p>可以实现排序<br></p>', '1', 'F372CD79AB23497A9BB444A053550E83', '2016-01-02 21:48:38', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F3EC9CCD63FC4797B4574D2C395C1140', '<p>无法完成<br></p>', '0', '7107FBB15B1342D18A4C100AD383FDE4', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F415B6284C074F7FA22E349AFAA823D2', '<p style=\"margin-left: 40px;\">if (map.contains(ch[i])) { &nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;map.put(ch[i], (Integer) map.get(ch[i]) + 1);&nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} else {&nbsp;<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;map.put(ch[i], 1);&nbsp;<br>&nbsp;&nbsp; &nbsp;}<br></p>', '0', 'F0BCFB0C0DC640B990467D6472937FAA', '2016-01-02 21:48:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F4161C83113E494580C250CA46EB6FF6', '<p>Woaiheimaniaima<br></p>', '1', '2F45BEB283FF421A8200E2AC491514FD', '2016-01-02 21:48:14', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F423E12D705B47AE9927C275ED021ACB', '<p>abc&nbsp;&nbsp;def&nbsp;&nbsp;abc&nbsp;&nbsp;cde</p>', '0', '5408AD8EEC0946C49B68D68093806F21', '2016-01-02 21:48:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F43342FE0D0145E89162ABA179F91E54', '<p>al里面含有abc和efg两个元素</p>', '0', '993C39252AC244719040FDC5CF7FAF68', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F4345F6255F64EEC84792DDE337C5D79', '<p>System.out.println(4 ^ 10 ^ 4); 输出结果为10<br></p>', '1', '337556C3125C4549BF2B6D566AC19D17', '2016-01-02 21:47:56', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F43CB867F9F6495A88E3DA2BDF2A6AEC', '<p>OutputStream类<br></p>', '1', '89E2B9BACB054CAB8EF91B0D95A40520', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F464B1E3D852445081F3D0276F4DA9EF', '<p>add()<br></p>', '1', '2CE29EB738E0494B851E80649D5CFDA6', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F47FF89D24334A57A98517353F1C20BC', '<p>通过Eclipse的调试功能我们可以查看传递的参数值<br></p>', '1', '59F7BF9A637B45ECABCE864AD03E1C10', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F4844A5B111B4B50B8371D64CDD49E16', '<p>为了程序的执行效率，导包一般采用如下方法:&nbsp;import&nbsp;java.util.*;</p>', '1', '55B079B9F7D04073886498471192E889', '2016-01-02 21:48:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F4B8BD33E2DA491F8BCB59B30CEDADC6', '<p>服务器主机和端口<br></p>', '1', '9C107AB645FE41F38061CA0B661A7700', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F4BC1442BF3946B1AC35209E855878D6', '<p style=\"margin-left: 40px;\">if (arr[i] ==value);<br></p><p style=\"margin-left: 40px;\">{<br>&nbsp;&nbsp; &nbsp;return i;<br>}<br></p>', '0', '227695A9EEF0493CAA09E454222BC69D', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F4BE3FD7E9EA4C319398AC1E3F78E529', '<p>java语言垮平台依赖于java虚拟机</p>\r\n', '0', '524AD33A76AA4111AD4DE86132E49DCA', '2016-01-05 10:46:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F4DAC0E6B48648B78D456041ECF1DFDA', '<p>老师是学生的子类<br></p>', '0', '961962CDF579482D8DE35AF3DBF31BFC', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F4DCAFDC5D944DA3BEB71A16C2033308', '<p>this是封装的一种表现形式<br></p>', '1', 'B004E97AF3684BC7957CE2CE6B3C6F29', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F501EF8DE7FF43FBB2511A8D53DF0B32', '<p>当if语句控制一个输出语句的时候，不能用三元运算实现<br></p>', '1', 'FC416AC468EC47D88113BBCA9D8353E4', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F536D88E521D414A80192A4E734DF970', '<p>getData()<br></p>', '0', '3CA9A912222A4EF6B38F4C23582285E8', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F540B7705B9A4E8B902F47BED5C2DE72', '<p>以上都不是<br></p>', '0', '44B0AB0854214465BE5B6A7DBDE23B89', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F5485B93C0A141D788AB6814FDAA791D', '<p>OutputStream<br></p>', '0', '4A2B28406C684288B1159D4EA26BE87F', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F548C95802CB481D8338286BF9288856', '<p style=\"margin-left: 120px;\">for (int i = 100;i &lt;= 999 ;i++ ) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int ge = i % 10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int shi = i+ 10+10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int bai = i +10 +10 +10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p><br></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (ge * ge * ge + shi * shi * shi + bai * bai * bai == i) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(i);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>', '0', 'D181F1B5A66B4F80B85A2B96AF4CE0F7', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F554351E838A452ABD6AB652EA40CB84', '<p>oracle: 1521<br></p>', '0', '8827C46562E9440BB80871F6406C8135', '2016-01-02 21:47:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F55E060156164FEAA69C0C573B96A5D5', '<p>将字符串转数组<br></p>', '0', '7CECADC2807A4A9393C1F4BA2D5D4C1C', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F55F9629CD5B499CBD43A019692E14D3', '<p>System.out.println(!(0&lt;10)); 输出结果为false<br></p>', '0', '2EC24E4721784A96BDA14C19599D976E', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F56DDE7472E14AF9914939EDAE548F7B', '<p>adcd<br></p>', '1', 'F806AC447DBC45629E104EA8150E56E8', '2016-01-02 21:48:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F577FFD4558E40A4AFECB82B785F104E', '<p>JAVAMM小型版<br></p>', '1', '76B14F01291D4AE09A9A4927AD4F0E1D', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F58B95FCC4E1419AB3EF48BC512AAFC7', '<p>静态代码块<br></p>', '1', '44B0AB0854214465BE5B6A7DBDE23B89', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F593919355264C12AB37F121BA95CC87', '<p>al里面含有abc和al2两个元素</p>', '0', '993C39252AC244719040FDC5CF7FAF68', '2016-01-02 21:48:00', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F5A8C9E0625C4729B68C746A408F56B9', '<p>④①②③<br></p>', '0', '8CC5F2AD665846FD94B11045D6D4BB6B', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F5AD98C6A86747E8AE373CC0798F631A', '<p>代表逻辑符号<br></p>', '1', 'AB500DE2A4C343FAB446021D260E2ABF', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F5BB18D9BE6542EBB7F09E5A83AB1410', '<p>add()方法是List从Collection实现过来的<br></p>', '1', '51ABBF707F47415C82F43F64DDC49AF2', '2016-01-02 21:47:30', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F5E37CB0DB784692AA1C659BEA62373A', '<p>public void Student();<br></p>', '0', '7BA35BA1153E474BABD07743349B7666', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F61E021F88BE4D18BA0B232DC0DE729A', '<p>mkdirs()</p>', '1', '1EBE1D9532B846A2B279F761A3FFBD2A', '2016-01-02 21:47:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F63E05AD2D904EE4A60BB2860A63AF49', '<p>都可以通过对象.调用</p>', '0', '7E0BDD89EB604900962EBA838DD41CC3', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F659923E785A49C7846C8DB450A6D6F5', '<p>String类的substring()<br></p>', '0', '975765C75BD24411B5B779A0F6ACB87B', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F677F3CC4A624958BFC9FCF90B40CC15', '<p>for (int x =0; x&lt;=100;x+=2){ sum=sum+x;}</p>\r\n', '1', '08422B7E8F8A4CCE801131A62FCFCF6C', '2016-01-05 11:09:24', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F67ADDB54580437486704C18EA53AD02', '<p>append<br></p>', '1', 'FBFD600345C746128474DC1110091CAC', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F68F1626E1C14BF697F515A4F27CD386', '<p>int x = sc.nextInt();<br></p>', '0', '093164F779F84F12A6592CD451E8CD72', '2016-01-02 21:48:05', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F69C154AB0F34D7CBA14F1700DA899A3', '<p>通过Class类的newInstance()方法创建对象<br></p>', '0', 'B424AB1C98294BDB894AEE8C540FE96B', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F6B124C3CD9C45878C2A4E5FE50AC9FA', '<p>&nbsp;Java虚拟机的启动会启动多个进程，这些进程都是单线程的。</p>', '0', 'ABEF0B340EC44077AD6C2CEA6561C10F', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F6C6D418F12E4BE58FBCE7752D0635DD', '<p>father</p>', '0', 'AA12F39BE1944F0DBA3C9E853C92CDB6', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F6D6DEE67FDE4A77A47203CCA0E7939F', '<p>Outer.Inner&nbsp;oi&nbsp;=&nbsp;new&nbsp;Outer().Inner();</p>', '0', '748BEB1A7CC144BA88388F9AE6534C6A', '2016-01-02 21:48:27', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F6DC6D70C90B4FD4B4AAA2D7AB92FEEA', '<p>adc&nbsp;&nbsp;def&nbsp;cde</p>', '0', '5408AD8EEC0946C49B68D68093806F21', '2016-01-02 21:48:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F6E0DEE4E90840E2A27B26CCEB2E27AA', '<p>运行错误<br></p>', '0', '129512937C50417BBDD4EC4B2FC54C3B', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F6E7F2C1CA21406EAF4C36E72AD81928', '<p>FileOutputStream fis = <strong>new</strong> FileOutputStream (\"copy.jpg\");<br></p>', '0', '20BBF6F03B8A472E8760EBBAF805B700', '2016-01-02 21:48:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F6ED9484889145799F40B5213B5070EF', '<p>类加载器其实也是一个类，所以我们也能写出这样的类<br></p>', '1', '29E5BE4B7C294A9E8F4E9F6C0FE7A0A4', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F6FF6CF09A894D01AEB343FDFEFFB664', '<p>void<br></p>', '0', '84612FE6BD5747EFA99A92FA929E0743', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F704DAF935F04DEA8D0AC006A83C879B', '<p>Delete<br></p>', '0', '3E18BF9C7CF74C649891D16DEF8662EC', '2016-01-02 21:47:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F727393CF4554360A743DEF58CA60167', '<p>ABce<br></p>', '0', 'C7B29698CF024DB19EFC09C7E2BBA8C8', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F780D9870F0F4CE6882B67D7D056EF2B', '<p>定义2个二维数组<br></p>', '0', '1ABFBBEAB95D4470ABCAC064478915D9', '2016-01-02 21:48:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F788DDC1837F409FBC1AFE109C02EEEC', '<p>MyEclipse是免费的IDE<br></p>', '1', 'F1694C4FD1ED47FBBF31CE352344F49E', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F7A33AD7DDD24D3499BE7D0887029958', '<p>Math.sqrt<code>(double a);</code><br></p>', '0', 'A6439947B71C40CEAD1EC0391779736A', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F7AC49C1C60949DDA6657AC48F9398CB', '<p>.exe<br></p>', '0', 'EA62BBDB43914C7284978905E43339C6', '2016-01-02 21:47:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F7BBEB7129774AB79E7A0F37E9891E06', '<p>这个方法需要传递一个Object类型参数</p>', '0', '0843AAEE48DF422098782A2E877A1D87', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F7C3088427B443FB86381062518DE719', '<p>重写contains方法</p>', '0', '41CBAD63AC204A448F2522D147517BC8', '2016-01-02 21:48:06', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F7CA791762464FB0ACB288747A487276', '<p>&nbsp;Runnable从JDK1.0开始就有了，Callable是在JDK1.5增加的。</p>', '1', 'E39B53EFE30E439CBE770B296562C2F0', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F7EEDE09C3824FCE8F91E6373D67A566', '<p>每一个构造方法的第一条语句默认(如果没有手动指定相同功能的其他语句)是：super()<br></p>', '0', '4A82737752DE483AA349A1C8F69AF539', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F7EF84C3F48E455BBEABE235689DD223', '<p>for (int i = 0;i &lt; arr.length();i++ ) {System.out.print(arr[i]);}<br></p>', '0', '88764B0A8F174F5EA0AC954E7957F85F', '2016-01-02 21:48:02', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F81847BD76354B04A91B7DB636CBCBCC', '<p>面向对象思想将我们从指挥者变成了执行者<br></p>', '1', '3D8FCCCE165E488FA2BD34F2DBCD6A80', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F81E48D20DA74D5CA13B2CC500CBCD36', '<p>printStackTrace()<br></p>', '0', '6564034877DC4650AFCD54F1B2AB5780', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F820FB51724E4A1491C2773B6CA7918A', '<p>打印结果是5<br></p>', '0', '46BD27AD911848CEAA2EC19F2414C98C', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F839E4A42DFB4CAEAF1037AC7E559240', '<p>static</p>', '0', '963BE09C92D540D0A4DF96D78FA84821', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F8517DF55EFD4D18B497A4C0533D818B', '<p>sleep</p>', '0', 'EA0C77D893244729AA6C38CBC9DE7EBB', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F855AD8268C743D0B15B7D5B3467E86A', '<p>负数的反码是对其原码逐位取反，但符号为除外<br></p>', '0', '973198C9ED4543FCA96EC7EA3F681392', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F884F3458416405D9B361857B3B00B28', '<p>什么也不会输出</p>', '0', '2419F299E0C745AC9D8916E8C248ED4A', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F88B238787444D54A7E682FEA822D7B4', '<p>&nbsp;Runnable</p>', '1', 'B93B4547F5D342E6ACF1EA2905E7BD8A', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F8A1481F797040B2A5EE47E47A3E6F77', '<p>此方法一次性读取不超过字节数组长度的字节<br></p>', '1', '7F6C3B9BF0854F5CA036D7F5DE7565C5', '2016-01-02 21:47:52', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F8AC28DCCF784C748C1B0FFA58459C15', '<p>声明实现&nbsp;Runnable&nbsp;接口的类，该类应实现&nbsp;run&nbsp;方法。分配该类的实例，在创建&nbsp;Thread&nbsp;时作为一个参数来传递并启动。</p>', '1', 'A1FFEB9AF0A84C43BB462A7D2A588928', '2016-01-02 21:47:19', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F8CC3D98F2974D13AFC643DD37E9ED10', '<p>throw后边跟的是异常类名</p>', '1', '423F61937F2A4392B4BBAF948573B129', '2016-01-02 21:47:18', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F8D2F100BC90460FAC0C291DEE0A440D', '<p>int arr[] = new int[3];<br></p>', '1', 'EC1D818F03CE4BA1B7BF389338A807A0', '2016-01-02 21:47:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F8E06B2F1F134143AC3E5B35185EF258', '<p>arr[0][0]的值是1<br></p>', '1', 'CE763E92F64448799744129E04A131E0', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F8E50B28D4AC4597B434504887D6AD26', '<p>执行javac编译出错<br></p>', '0', '00897F9C7B324D32B9A7E283F4602F46', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F8F12C47B85745C49EC2BBF7047AAAC8', '<p>接口与接口之间可以多继承</p>', '0', 'FA15B559892248939704CFF2784239AE', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F8F1C1F290C64DE59FF3347CC2A463F5', '<p>容量大小如何定义不影响效率<br></p>', '1', 'B373D4F7C8AE4D55B5B2EA8955A474FC', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F9013D89D84A4241BE7011D26DE7E9C1', '<p>&amp;<br></p>', '0', 'A475F62D72304E93A56EF57E60AB2F49', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F9188900A88E4640A74507D4F42F57D7', '<p>排序的时候，除了主要条件，还要去分析次要条件</p>', '0', 'ADF3AC3FB5544E83B88E7FD92458D174', '2016-01-02 21:48:49', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F91AF7DB618A4D9489CFFA988EAAAB54', '<p>mkdir()<br></p>', '0', '1EBE1D9532B846A2B279F761A3FFBD2A', '2016-01-02 21:47:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F91D5D6D7CA24CD4B85ED18D4311F0C7', '<p>十六进制由1-15组成<br></p>', '1', '85AB0EC4D3364DCB891AA4EA2FA3C175', '2016-01-02 21:47:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F92808212A88445790D8E38FAB76BA5B', '<p>当一个方法的参数是父类类型时，调用该方法可以传子类匿名对象</p>', '0', '6F75076BEEA64ABBA891BF6E26843693', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F955B57524E84C0DB6A679F1E61F8EC2', '<p>变量<br></p>', '0', 'AC77607FFB684A25A91139B91974BBEC', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F959654169184C0E8194C7AD8F9FE3FF', '<p>正常运行但没有输出</p>\r\n', '1', 'A533FB795BFA49E3BBE3BCB8FCA32EC2', '2016-01-05 10:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F95D09265783407A9E1B6CD7D134A78D', '<p>Ctrl + V 复制<br></p>', '1', '94A2B826758B4D8C86E3EC7C5174342A', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F9637D02A0154B059B9FB365A4CDEB04', '<p>public StringBuffer replace(int start,int end,String str)<br></p>', '1', '78BFA4A094004746B07D8F7ED682B30C', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F96923A5C4084021814F050DC31EF6A1', '<p>private static void main(string[] args) {}&nbsp;&nbsp; &nbsp;主函数的格式<br></p>', '0', '82C3F4B66C7440BC89249CED31DFAED6', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F9821F9EFAA749478A20114183B4F3A4', '<p>Eclipse的默认存放源码的目录是在bin目录下<br></p>', '0', 'B6A0D94C0A0D4E0BB083EBD592BFBF8A', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F9991E9CEF174981969FA80D56223A04', '<p>isDirectory()<br></p>', '0', '830CBF1972EB42AC80B957B23A06296B', '2016-01-02 21:47:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F9A02238B8834A80A77E5C3A75C51275', '<p>扩展类加载器负责jre--&gt;lib--&gt;ext目录的jar包的加载<br></p>', '0', '47910E17286646DD8E63E290548F5BED', '2016-01-02 21:47:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F9A0A28CA3154F1ABBD9289ECB998C42', '<p>Callable类不能开启一个线程。</p>', '0', 'E39B53EFE30E439CBE770B296562C2F0', '2016-01-02 21:47:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F9A6728656CD43D2AD0C6FCA2B2DC4F6', '<p>arr.length的值是6<br></p>', '0', '53FFB5CEF5B74A0AAAC32872249A1EFC', '2016-01-02 21:48:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F9B43B33145F4B7EA6037833AFAC62F5', '<p> 属性列表中每个键及其对应值都是一个字符串</p>', '0', '8C9AF3AA92FA441B99CD1B37B2A1F7DC', '2016-01-02 21:48:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F9BC097DB3B14526BA78301583A1F4E3', '<p>类的耦合性增强了<br></p>', '1', '399128C1C0874BDCB334AB6018236F6F', '2016-01-02 21:47:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F9C047E94B244C1CAB6671AF31725138', '<p>~7按位取反的结果 -8<br></p>', '0', 'B347EE4CED4C4BB190D2329FF3633F55', '2016-01-02 21:47:55', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F9C7ECBFD875455391BB3E71A04CEA79', '<p>自动拆箱：把基本类型转换为包装类类型<br></p>', '0', '52F74D03957B4E4399335353D3E7C168', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F9D2410B05444757BCA08901488A5FD0', '<p>借助开发工具与计算机语言制作软件<br></p>', '1', '60AC22B4D0DA47718930B4F98369C472', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F9E198AD016346D7ACDC3A0B1F726EEA', '<p>输出零</p>\r\n', '1', 'FBC5C3D0FBE747D99EBCCA018866C469', '2016-01-05 11:04:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F9E29DF61F164FBAACFB6EAAEE5AA96F', '<p>对象锁在synchronized()语句执行完之后由持有它的线程返还</p>', '0', '6862677813E9439F9BB235FE0C983BBF', '2016-01-02 21:47:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('F9E3CF708AD54E7CA2D0620F91E65206', '<p>当较小的数据类型和较大的数据类型进行运算时，就会把较小的提升为较大的数据类型<br></p>', '1', '31EDA5FF01BF4F90912E7E69883F341B', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FA058952B17A498395A0EA28167F3C38', '<p>get(int&nbsp;pos)</p>', '0', 'FC1DC35DA4B54414A7E561293AEF4723', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FA0A534BEB2844E896D96CA64C1BAEFE', '<p>java垮平台，java虚拟机也是垮平台的（不同系统平台使用相同的java虚拟机）</p>\r\n', '1', '524AD33A76AA4111AD4DE86132E49DCA', '2016-01-05 10:46:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FA1CAC8180674B7C8C3058FCFDD26B77', '<p>使用Scanner时不需要导包<br></p>', '0', 'ED1C8DF591CB4DF1BD8E4721001C5DF7', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FA26A96E1D214EEEBD2235488CE02D40', '<p>&nbsp;Outer.Inner&nbsp;oi&nbsp;=&nbsp;new&nbsp;Outer.Inner();</p>', '1', '792F6FADFBA249779275F57A33C37FAB', '2016-01-02 21:48:33', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FA4CFC6F76034CF9AFB44CA9EABDE25D', '<p>如果线程死亡，它便不能运行</p>', '0', '68867F39CC7F46FA8D1316B7F3B811E0', '2016-01-02 21:47:40', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FA4F545A226347329DEC7E2957090A37', '<p>1024*4<br></p>', '0', '3CCE2C9289C147A886A36B03E3AD9553', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FA6326340F7A43BC9DCFED3AF90FD833', '<p>listIterator()返回的是ListIterator的父类对象<br></p>', '0', '6127974AD683482896FE2C196127A91A', '2016-01-02 21:47:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FA9E2DB50B164638AC7BADFA16510022', '<p>^<br></p>', '0', '15C8FCFE254D4AB2A7BE7F67D2129B3C', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FAC5CC3A9A54486AA08D835FEB1F1C54', '<p>最有效率的算出2*8的结果是 2&lt;&lt;3<br></p>', '1', '73175E9E137A4486BDB17BAA2BE0C394', '2016-01-02 21:47:59', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FACB774A5557406CA40ED49C4042C5BA', '<p>Long</p>\r\n', '1', 'C1181970F28C464FA907CE713DCCA70B', '2016-01-05 11:10:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FAF3AD5362414C1C9F34152A5F4EF140', '<p>局部变量和成员变量名称不能一样<br></p>', '1', 'C30C352232A347CBA31D49BA18A9E785', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FAF9AE804F224EB7B65EA3048E9919FB', '<p>BuffferedOutputStream</p>', '1', '01C58DFD07654C5F97CA9BC05F8DDBD9', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FB0C0F227DDF44CABB9B2BA16B24DE56', '<p>获取字符串中字符的个数<br></p>', '0', '577A0399B4CE42D08044BB0726034354', '2016-01-02 21:48:11', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FB0FAB094C264C70BAE9D7AB46323849', '<p>iterator()<br></p>', '0', '8E0079A51EEC4699A5D710D35D29DD2C', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FB13F14100A14F13B76A765DDC5418C8', '<p>成员变量，编译看父类，运行看子类</p>', '0', '2CEB58B718AF4C14B43FB3F1349ABE3C', '2016-01-02 21:48:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FB19639B457F4BE4AEAE2A36A3F38E49', '<p>Comparable</p>', '0', 'B93B4547F5D342E6ACF1EA2905E7BD8A', '2016-01-02 21:47:15', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FB1C861BCAB049939B818FC68E3782E2', '<p>if语句后的表达式,无论简单还是复杂,都必须是boolean类型<br></p>', '0', '1BECAC261E36474791552E2DAA633661', '2016-01-02 21:48:12', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FB214222436541FFBB7219DAC08B8C54', '<p>加法运算<br></p>', '0', 'ED9C63FEB43D49AAA6970E24EA92C336', '2016-01-02 21:48:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FB37FE97F40E41ED92794957F2366B3B', '<p>枚举中只能有常量<br></p>', '0', 'A3C61268AFA4459383DE274E8FB3F6AF', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FB3D24D857314B95BF4F8FC967817765', '<p>true false<br></p>', '0', '823179523FAB487E9D13AEC598CC4560', '2016-01-02 21:48:34', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FB55B2ECFF0946F1AAF700EC45B44C6E', '<p>端口是应用程序的逻辑标识<br></p>', '0', 'EAC6F8DD5F76422FB9B4EC9FACF0B092', '2016-01-02 21:47:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FB7858916ABD4F6493723492F0F2286E', '<p>getMessage()<br></p>', '0', 'DFF41E4B9E094818AD405D0B74BBF898', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FB8316F4A0FE444A87D4D1C0BE59E8E3', '<p>File</p>', '1', '6DA75C307E244075B477E5FECB9D4952', '2016-01-02 21:47:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FBA6721E37534B12B1D2AC6F1AB0F9F0', '<p>41</p>', '0', '6A287735F4D844A187A6A62A63377CBB', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FBF6A0D906E2474B941B9D79EE85FB96', '<p>计算器<br></p>', '0', '1F144C304C6D46DBB9E559D2E4BBA481', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FC1994282E574B6EA65FDCE0A0B23B2C', '<p>如果想看这个体系的共性功能,看最底层的实现类<br></p>', '0', '1EA120BF3FE04991B16A5CADE159A2EC', '2016-01-02 21:48:03', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FC27BB50CE1E47D2B50FE134A6A4DB9C', '<p>所有类都直接或间接继承Object类<br></p>', '0', '4A82737752DE483AA349A1C8F69AF539', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FC2BB208C71C4B9D88D1C66CEFF86A6A', '<p>单例模式要求类的构造方法私有化，不能在外部创建该类的对象<br></p>', '1', '65A071C9BBFD4961A61AEE7FFBDA7E6F', '2016-01-02 21:47:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FC3137F90CA64D428E7000F579ECB7FF', '<p>final</p>', '0', '72B03FEFF96D49CCA08A0B1A8502394C', '2016-01-02 21:47:04', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FC349D14026A49D3A8D8F612EC29FA2E', '<p>文本</p>', '1', '90F2897E8C544479888DE47DBBB731E7', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FC3A49A0FB0F422F8131CE1982B4C789', '<p>运行错误<br></p>', '0', '3A0EB703E970410697D65575ADBA5888', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FC5D60426A5148C2AC384E47CC8F4A35', '<p>Longeger<br></p>', '0', 'D5A0BFEB057D4EB88BB685E54BF0562E', '2016-01-02 21:47:41', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FC80D328076C46C8AD78EE9A8D6CDE70', '<p>内部类分为成员内部类和局部内部类</p>', '0', '92DB061FED0D40088C8A30BC829D753C', '2016-01-02 21:48:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FC8D2A8880F84BAEBA915C75A30C4A7D', '<p>!<br></p>', '0', '42F361196B7E460BA3B528C18EF58B75', '2016-01-02 21:47:50', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FC8DD0CA75A24F7392FD01BC6584410C', '<p>不管是输入流还是输出流 都要尽可能的早开晚关<br></p>', '0', '5C58ACF8E5AE4C2AB1E30FA2098ACC32', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FC923DDCFB134D52AB317746B1A9C4F2', '<p>this可以调用本类中的成员方法，也可以调用父类中的成员方法<br></p>', '0', '1260425F964E43A885DEF47F72190014', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FC9AAE2A79C04B61B4AB14BFF65AD431', '<p>false true<br></p>', '0', '65B39DA3D5B34693880C941359DDCB3A', '2016-01-02 21:47:48', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FCCD0843B0B94431A878BF7CAAD3D40D', '<p>Set体系<br></p>', '0', '2869700F7F8447529486E00C338F28E5', '2016-01-02 21:48:43', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FCF61C6652F14FAFA9927FC4A11740CA', '<p>110可以表示十进制<br></p>', '0', 'BB64C3CA6D374D9F98818871DA2E0E2D', '2016-01-02 21:47:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FCF8D6E4951E494190DA4F2B1AE783F6', '<p>float f = 13.3;<br></p>', '1', '0DE02B30B9624BCDA2D532954D0F13BB', '2016-01-02 21:47:13', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FD0E258714004F65A52D0C343D975AE3', '<p>获取名称</p>', '0', '1D3ED14895164E81A695DCB17CD19016', '2016-01-02 21:47:26', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FD19702C6980451893086B52C6B32425', '<p>for(String&nbsp;&nbsp;s&nbsp;:&nbsp;list){</p><p>list.remove(“b”);</p><p>}</p>', '0', 'B35F6BDEC67B4E10B5A979992B175D11', '2016-01-02 21:47:53', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FD26F7AC87564E999B658C3B06390FCA', '<p>list集合只能存放字符串对象</p>', '0', '65135771ACA245C1969ED16F8AF18C3C', '2016-01-02 21:47:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FD3C91F147E4407BBA3305A698E2CAA6', '<p>int&nbsp;num&nbsp;=&nbsp;10;</p>', '0', 'CFAD69DD0D5049CA8C1349C029A0514E', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FD3D96CD640A47D7B6CFF4B7EF78F35F', '<p>借助开发工具<br></p>', '1', 'C9B9CE0BCC134C44A9DFA1BFB5E2F74C', '2016-01-02 21:47:21', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FD5EA5C8ED3A43F3A795EB243C02FA7D', '<p>任何成员想封装必须加private<br></p>', '0', '90A84EEEF72F4854AAE28BAE929EFCEE', '2016-01-02 21:47:58', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FD84F3ADCF6642109804DFE18E039187', '<p>[a-zA-Z_0-9]<br></p>', '1', '7983EFF7EAB3486AA0439DE0C242C43A', '2016-01-02 21:48:23', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FDA1CA9048C14EFEAD4090096753104B', '<p>&nbsp;System.out就是一个PrintStream, 其默认向控制台输出信息</p>', '0', '9210201370134A3A8A4087A6DF243726', '2016-01-02 21:48:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FDCF72451D7D4783B04D158CAB2617A1', '<p>被该类的所有对象所共享<br></p>', '0', '024F0B258CB04508B76ED6ECAAA660DA', '2016-01-02 21:48:09', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FDEA04B70A1A432F8A0F8AD98DEC9980', '<p>20<br></p>', '1', 'EF6415F2F8854DC4973ECADB5D14546B', '2016-01-02 21:47:57', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FE046A7657AC49728DCBB03B4079B702', '<p>createNewFile()<br></p>', '0', '1EBE1D9532B846A2B279F761A3FFBD2A', '2016-01-02 21:47:25', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FE17A9BBDB254F29B66A3AECEC5436CA', '<p>static也是一种权限修饰符</p>', '0', '5110A7A94F6C4F7A9FC8E8013D6E7B30', '2016-01-02 21:48:22', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FE2FDED0640B405F9A70BF42D60EB3F1', '<p>重写被包装类的对应方法<br></p>', '1', '4FCCEBA8910343FE9C3EB81A472B76C3', '2016-01-02 21:48:36', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FE50722C13C242E39855A67E7E142080', '<p>mb</p>', '0', '731403B23CAD463E91A5FB776C1FAB55', '2016-01-02 21:47:07', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FE57381F2ADB4A60AC75FC1DEE2F6AB6', '<p>16.0<br></p>', '0', 'AC6C058ECC3C458C87B81921EDA4B36B', '2016-01-02 21:48:08', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FE962DD0D7B44933B1663DCD71105BD2', '<p>以上都不正确</p>', '1', 'B61B6856D1C94CD7B2E67FE31B36606F', '2016-01-02 21:48:10', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FEA651DF539E469380C13CB4CBEAEBBB', '<p>16个<br></p>', '1', '73EA9A4A062D4C5991A587536E982FA8', '2016-01-02 21:47:47', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FED4CEE9951C41A48585BA353A2A51A9', '<p>编译错误<br></p>', '0', '129512937C50417BBDD4EC4B2FC54C3B', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FEDF2BE3E7534FE3AC765650E3CABC3B', '<p>接口中可以定义静态的方法</p>', '0', 'FFD83203F8D84B398B12F29349D27B0B', '2016-01-02 21:48:42', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FF04531A42E941D6B4443E2DD62AEB35', '<p>import java.sql.*;<br></p>', '0', 'B5B711E7C367447CBF57FAB18A88281B', '2016-01-02 21:47:29', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FF191712A8CA45CA83C23785F1FC905B', '<p>new&nbsp;MyThread().start();</p>', '1', 'A6D87F19B4C7479CA45F91BBF498F78E', '2016-01-02 21:47:16', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FF23350BAC194F9588E62D4C05B1FAC9', '<p>do while循环<br></p>', '0', '7C22E6E486064C6481EAC9B3D303C0B5', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FF474AEF22104BD8AB5C258353BA0325', '<p>LineNumberReader是BufferedReader的父类</p>', '1', '3B5BC9E664F84464B2EE00464D5E7D91', '2016-01-02 21:48:35', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FF5DFC0A8D3B49BC9D3144ECC816131A', '<p>JavaBean类必须具有无参的构造器<br></p>', '1', 'E0776C47C6974C1983E9E63838AC8011', '2016-01-02 21:47:51', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FF649544CB294244A2D78EDB42234402', '<p>y = 200<br></p>', '0', 'BDDCF8E09A4F471F9285BB85182F9EB8', '2016-01-02 21:48:01', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FF7116E2E98D4ED8B05E492D150F954D', '<p>父类静态方法，子类也必须通过静态方法进行重写<br></p>', '0', '1F249CA9B969470A954470FD62CB2F34', '2016-01-02 21:48:32', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FF9410D119E1435A957E33CC0D7CB087', '<p>Outer.method().show();</p>', '1', 'E7FF18CD2F914A7489A76964CF88787A', '2016-01-02 21:48:39', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FFA7637F5E23401EBAC42261CFB6BAC5', '<p>可以创建Math类的对象<br></p>', '1', '3A58D147388F4DE9993481A748A806D7', '2016-01-02 21:48:31', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FFAD02A1413B4584A0263923539623B9', '<p>自然排序需要实现Comparable接口</p>', '1', 'F2BA91FEBE1441C69ABE862E9FC110C6', '2016-01-02 21:48:28', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FFAED80BF8354D00ADE90DE8D0D4B31C', '<p>查询快<br></p>', '0', 'BA186F671712469ABD11D239EF870550', '2016-01-02 21:47:37', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FFB5D422578148F4A115DCE79D0E89B5', '<p>1024*8<br></p>', '1', 'B1D97BDD72364C67A1D59562EED7F17B', '2016-01-02 21:47:54', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FFCE5B4F1F2C415C8F691A7E2F28D2D5', '<p>可以隐藏类<br></p>', '1', '4EEAF542C47F4630921BEB3D3DF56CA8', '2016-01-02 21:47:46', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FFF1397F11D048ED8A357E2F3D84F3C4', '<p>编译错误<br></p>', '0', '09A95217367F4AD5A804067AE5BC46C5', '2016-01-02 21:47:17', null, null, '1', null, null, null, null, null);
INSERT INTO `tb_test_question_option` VALUES ('FFFFA79DCA47457A8B727FEF6108E36C', '<p>泛型是一种安全机制</p>', '0', '2C416F37A6994C14B3D87C469DAC3D8A', '2016-01-02 21:47:43', null, null, '1', null, null, null, null, null);
